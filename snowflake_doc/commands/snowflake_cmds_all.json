[
{
    "function_name": "ALTER <object>",
    "summary": "Modifies the metadata of an account-level or database object, or the parameters for a session.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter",
    "title": "ALTER",
    "description": "Modifies the metadata of an account-level or database object, or the parameters for a session.",
    "syntax": "",
    "example": ""
},
{
    "function_name": "ALTER DATASET … ADD VERSION",
    "summary": "Adds a version to a dataset.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-dataset-add-version",
    "title": "ALTER DATASET … ADD VERSION",
    "description": "Adds a version to a dataset. When you add a version, you can specify properties such as partitioning, comments, or custom metadata.",
    "syntax": "ALTER DATASET <name> ADD VERSION <version_name>\n  FROM <select_statement>\n  [ PARTITION BY <string_expr> ]\n  [ COMMENT = <string_literal> ]\n  [ METADATA = <json_string_literal> ]",
    "example": "ALTER DATASET abc\nADD VERSION 'v1' FROM (\n    SELECT seq4() as ID, uniform(1, 10, random(721)) as PART\n    FROM TABLE(GENERATOR(ROWCOUNT => 100000)) v)\nPARTITION BY PART\nCOMMENT = 'Initial version'\nMETADATA = '{\"source\":\"some_table\",\"created_by\":\"analyst1\"}';"
},
{
    "function_name": "ALTER DATASET",
    "summary": "Modifies a dataset by adding or dropping dataset versions.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-dataset",
    "title": "ALTER DATASET",
    "description": "Modifies a dataset by adding or dropping dataset versions. When you add a version, you can specify properties such as partitioning, comments, or custom metadata.",
    "syntax": "",
    "example": ""
},
{
    "function_name": "ALTER DATABASE ROLE",
    "summary": "Modifies the properties for an existing database role.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-database-role",
    "title": "ALTER DATABASE ROLE",
    "description": "Modifies the properties for an existing database role.",
    "syntax": "ALTER DATABASE ROLE [ IF EXISTS ] <name> RENAME TO <new_name>\n\nALTER DATABASE ROLE [ IF EXISTS ] <name> SET COMMENT = '<string_literal>'\n\nALTER DATABASE ROLE [ IF EXISTS ] <name> UNSET COMMENT\n\nALTER DATABASE ROLE [ IF EXISTS ] <name> SET TAG <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' ... ]\n\nALTER DATABASE ROLE [ IF EXISTS ] <name> UNSET TAG <tag_name> [ , <tag_name> ... ]",
    "example": "ALTER DATABASE ROLE d1.dr1 RENAME TO d1.dbr2;\n\nALTER DATABASE ROLE d1.dbr2 SET COMMENT = 'New comment for database role';"
},
{
    "function_name": "ALTER DATABASE",
    "summary": "Modifies the properties for an existing database.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-database",
    "title": "ALTER DATABASE",
    "description": "Modifies the properties for an existing database.",
    "syntax": "ALTER DATABASE [ IF EXISTS ] <name> RENAME TO <new_db_name>\n\nALTER DATABASE [ IF EXISTS ] <name> SWAP WITH <target_db_name>\n\nALTER DATABASE [ IF EXISTS ] <name> SET [ DATA_RETENTION_TIME_IN_DAYS = <integer> ]\n                                        [ MAX_DATA_EXTENSION_TIME_IN_DAYS = <integer> ]\n                                        [ EXTERNAL_VOLUME = <external_volume_name> ]\n                                        [ CATALOG = <catalog_integration_name> ]\n                                        [ REPLACE_INVALID_CHARACTERS = { TRUE | FALSE } ]\n                                        [ DEFAULT_DDL_COLLATION = '<collation_specification>' ]\n                                        [ DEFAULT_NOTEBOOK_COMPUTE_POOL_CPU = '<compute_pool_name>' ]\n                                        [ DEFAULT_NOTEBOOK_COMPUTE_POOL_GPU = '<compute_pool_name>' ]\n                                        [ LOG_LEVEL = '<log_level>' ]\n                                        [ TRACE_LEVEL = '<trace_level>' ]\n                                        [ STORAGE_SERIALIZATION_POLICY = { COMPATIBLE | OPTIMIZED } ]\n                                        [ EVENT_TABLE = <event_table_name> ]\n                                        [ COMMENT = '<string_literal>' ]\n                                        [ CATALOG_SYNC = '<snowflake_open_catalog_integration_name>' ]\n                                        [ REPLICABLE_WITH_FAILOVER_GROUPS = { 'YES' | 'NO' } ]\n                                        [ BASE_LOCATION_PREFIX = '<string>' ]\n                                        [ DEFAULT_STREAMLIT_NOTEBOOK_WAREHOUSE = <warehouse_name> ]\n                                        [ CONTACT ( <purpose> = <contact_name> [ , <purpose> = <contact_name> ... ] ) ]\n\nALTER DATABASE <name> SET TAG <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' ... ]\n\nALTER DATABASE <name> UNSET TAG <tag_name> [ , <tag_name> ... ]\n\nALTER DATABASE [ IF EXISTS ] <name> UNSET { DATA_RETENTION_TIME_IN_DAYS         |\n                                            MAX_DATA_EXTENSION_TIME_IN_DAYS     |\n                                            EXTERNAL_VOLUME                     |\n                                            CATALOG                             |\n                                            DEFAULT_DDL_COLLATION               |\n                                            DEFAULT_NOTEBOOK_COMPUTE_POOL_CPU   |\n                                            DEFAULT_NOTEBOOK_COMPUTE_POOL_GPU   |\n                                            STORAGE_SERIALIZATION_POLICY        |\n                                            EVENT_TABLE = <event_table_name>    |\n                                            COMMENT                             |\n                                            CATALOG_SYNC                        |\n                                            REPLICABLE_WITH_FAILOVER_GROUPS     |\n                                            BASE_LOCATION_PREFIX                |\n                                            DEFAULT_STREAMLIT_NOTEBOOK_WAREHOUSE|\n                                            CONTACT <purpose>\n                                          }\n                                          [ , ... ]",
    "example": ""
},
{
    "function_name": "ALTER CORTEX SEARCH SERVICE",
    "summary": "Suspends, resumes, or modifies the properties of an existing Cortex Search service.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-cortex-search",
    "title": "ALTER CORTEX SEARCH SERVICE",
    "description": "Suspends, resumes, or modifies the properties of an existing",
    "syntax": "ALTER CORTEX SEARCH SERVICE [ IF EXISTS ] <name>\n  { SUSPEND | RESUME } [ { INDEXING | SERVING } ]\n\nALTER CORTEX SEARCH SERVICE [ IF EXISTS ] <name> REFRESH\n\nALTER CORTEX SEARCH SERVICE [ IF EXISTS ] <name> SET\n  [ TARGET_LAG = { '<num> { seconds | minutes | hours | days }' } ]\n  [ WAREHOUSE = <warehouse_name> ]\n  [ COMMENT = '<string_literal>' ]\n\nALTER CORTEX SEARCH SERVICE [ IF EXISTS ] <name> UNSET\n  [ PRIMARY KEY ]",
    "example": "ALTER CORTEX SEARCH SERVICE mysvc SET WAREHOUSE = my_new_wh;\n\nALTER CORTEX SEARCH SERVICE mysvc SET COMMENT = 'new_comment';\n\nALTER CORTEX SEARCH SERVICE mysvc SET TARGET_LAG = '1 hour';\n\nALTER CORTEX SEARCH SERVICE mysvc SET PRIMARY KEY = (region, agent_id);\n\nALTER CORTEX SEARCH SERVICE mysvc UNSET PRIMARY KEY;\n\nALTER CORTEX SEARCH SERVICE mysvc SUSPEND SERVING;\n\nALTER CORTEX SEARCH SERVICE mysvc REFRESH;"
},
{
    "function_name": "ALTER CONTACT",
    "summary": "Modifies the properties of an existing contact.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-contact",
    "title": "ALTER CONTACT",
    "description": "",
    "syntax": "ALTER CONTACT [ IF EXISTS ] <name> RENAME TO <new_name>\n\nALTER CONTACT [ IF EXISTS ] <name> SET\n  [ {\n    USERS = ( <user_name> [ , <user_name> ... ] )\n    | EMAIL_DISTRIBUTION_LIST = '<email>'\n    | URL = '<url>'\n    } ]\n  [ COMMENT = '<string_literal>' ]",
    "example": "ALTER CONTACT my_contact SET EMAIL_DISTRIBUTION_LIST = 'support@example.com';"
},
{
    "function_name": "ALTER CONNECTION",
    "summary": "Modifies the properties for an existing connection.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-connection",
    "title": "ALTER CONNECTION",
    "description": "",
    "syntax": "ALTER CONNECTION [ IF EXISTS ] <name> ENABLE FAILOVER TO ACCOUNTS <organization_name>.<account_name> [ , <organization_name>.<account_name> ... ]\n                        [ IGNORE EDITION CHECK ]\n\nALTER CONNECTION [ IF EXISTS ] <name> DISABLE FAILOVER [ TO ACCOUNTS <organization_name>.<account_name> [ , <organization_name>.<account_name> ... ] ]\n\nALTER CONNECTION [ IF EXISTS ] <name> PRIMARY\n\nALTER CONNECTION [ IF EXISTS ] <name> SET COMMENT = '<string_literal>'\n\nALTER CONNECTION [ IF EXISTS ] <name> UNSET COMMENT",
    "example": "ALTER CONNECTION myconnection ENABLE FAILOVER TO ACCOUNTS myorg.myaccount2, myorg.myaccount3;\n\nALTER CONNECTION myconnection SET COMMENT = 'New comment for connection';\n\nALTER CONNECTION myconnection PRIMARY;"
},
{
    "function_name": "ALTER COMPUTE POOL",
    "summary": "Modifies the properties of an existing compute pool.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-compute-pool",
    "title": "ALTER COMPUTE POOL",
    "description": "",
    "syntax": "ALTER COMPUTE POOL [ IF EXISTS ] <name> { SUSPEND | RESUME }\n\nALTER COMPUTE POOL [ IF EXISTS ] <name> STOP ALL;\n\nALTER COMPUTE POOL [ IF EXISTS ] <name> SET [ MIN_NODES = <num> ]\n                                            [ MAX_NODES = <num> ]\n                                            [ AUTO_RESUME = { TRUE | FALSE } ]\n                                            [ AUTO_SUSPEND_SECS = <num> ]\n                                            [ COMMENT = '<string_literal>' ]\n                                            [ TAG <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' , ... ] ]\n\nALTER COMPUTE POOL [ IF EXISTS ] <name> UNSET { AUTO_SUSPEND_SECS |\n                                                AUTO_RESUME       |\n                                                COMMENT\n                                              }\n                                              [ , ... ]",
    "example": "ALTER COMPUTE POOL tutorial_compute_pool SET\n  MAX_NODES = 5\n  AUTO_RESUME = FALSE"
},
{
    "function_name": "ALTER CATALOG INTEGRATION",
    "summary": "Modifies the properties of an existing catalog integration.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-catalog-integration",
    "title": "ALTER CATALOG INTEGRATION",
    "description": "Modifies the properties of an existing",
    "syntax": "ALTER CATALOG INTEGRATION [ IF EXISTS ] <name> SET\n  REST_AUTHENTICATION = (\n    restAuthenticationParams\n  )\n  [ REFRESH_INTERVAL_SECONDS = <value> ]\n  [ COMMENT = '<string_literal>' ]",
    "example": "ALTER CATALOG INTEGRATION myCatalogIntegration SET REFRESH_INTERVAL_SECONDS = 30;"
},
{
    "function_name": "ALTER AUTHENTICATION POLICY",
    "summary": "Modifies the properties of an authentication policy.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-authentication-policy",
    "title": "ALTER AUTHENTICATION POLICY",
    "description": "Modifies the properties of an",
    "syntax": "ALTER AUTHENTICATION POLICY <name> RENAME TO <new_name>\n\nALTER AUTHENTICATION POLICY [ IF EXISTS ] <name> SET\n  [ AUTHENTICATION_METHODS = ( '<string_literal>' [ , '<string_literal>' , ...  ] ) ]\n  [ MFA_AUTHENTICATION_METHODS = ( '<string_literal>' [ , '<string_literal>' , ...  ] ) ]\n  [ MFA_ENROLLMENT = { REQUIRED | OPTIONAL } ]\n  [ MFA_POLICY= ( ALLOWED_METHODS = ( { 'ALL' | 'PASSKEY' | 'TOTP' | 'DUO' } [ , { 'PASSKEY' | 'TOTP' | 'DUO' } ... ] ) ) ]\n  [ CLIENT_TYPES = ( '<string_literal>' [ , '<string_literal>' , ...  ] ) ]\n  [ SECURITY_INTEGRATIONS = ( '<string_literal>' [ , '<string_literal>' , ...  ] ) ]\n  [ PAT_POLICY = ( {list_of_properties} ) ]\n  [ COMMENT = '<string_literal>' ]\n\nALTER AUTHENTICATION POLICY [ IF EXISTS ] <name> UNSET\n  [ CLIENT_TYPES ]\n  [ AUTHENTICATION_METHODS ]\n  [ SECURITY_INTEGRATIONS ]\n  [ MFA_AUTHENTICATION_METHODS ]\n  [ MFA_ENROLLMENT ]\n  [ MFA_POLICY ]\n  [ PAT_POLICY ]\n  [ COMMENT ]",
    "example": "ALTER AUTHENTICATION POLICY restrict_client_types_policy SET CLIENT_TYPES = ('SNOWFLAKE_UI', 'SNOWSQL');"
},
{
    "function_name": "ALTER APPLICATION SET SPECIFICATIONS",
    "summary": "Creates or updates an app specification for a",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-application-set-app-spec",
    "title": "ALTER APPLICATION SET SPECIFICATIONS",
    "description": "",
    "syntax": "ALTER APPLICATION SET SPECIFICATION <app_spec_name>\n  TYPE = EXTERNAL_ACCESS\n  LABEL = '<label>'\n  DESCRIPTION = '<description>'\n  { HOST_PORTS | PRIVATE_HOST_PORTS } = ( '<value>' [, '<value>', ... ] )",
    "example": ""
},
{
    "function_name": "ALTER APPLICATION … { APPROVE | DECLINE} SPECIFICATION",
    "summary": "Approves or declines an app specification using the specified sequence number.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-application-sequence-number",
    "title": "ALTER APPLICATION … { APPROVE | DECLINE} SPECIFICATION",
    "description": "",
    "syntax": "ALTER APPLICATION <app_name>\n  { APPROVE | DECLINE } SPECIFICATION <spec_name>\n  SEQUENCE_NUMBER = <sequence_num>;",
    "example": ""
},
{
    "function_name": "ALTER APPLICATION ROLE",
    "summary": "Modifies the properties for an existing application role.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-application-role",
    "title": "ALTER APPLICATION ROLE",
    "description": "",
    "syntax": "ALTER APPLICATION ROLE [ IF EXISTS ] <name> RENAME TO <new_name>\n\nALTER APPLICATION ROLE [ IF EXISTS ] <name> SET COMMENT = '<string_literal>'\n\nALTER APPLICATION ROLE [ IF EXISTS ] <name> UNSET COMMENT",
    "example": "ALTER APPLICATION ROLE app_role RENAME TO new_app_role;\n\nALTER APPLICATION ROLE app_role SET\n  COMMENT = 'Application role for the Hello Snowflake application.';\n\nALTER APPLICATION ROLE app_role UNSET COMMENT;"
},
{
    "function_name": "ALTER APPLICATION PACKAGE … VERSION",
    "summary": "Modifies the versioning of an existing application package in the",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-application-package-version",
    "title": "ALTER APPLICATION PACKAGE … VERSION",
    "description": "",
    "syntax": "ALTER APPLICATION PACKAGE <name> ADD VERSION [ <version_identifier> ]\n  USING <path_to_version_directory> [ LABEL = '<display_label>' ]\n\nALTER APPLICATION PACKAGE <name> DROP VERSION <version_identifier>\n\nALTER APPLICATION PACKAGE <name> ADD PATCH [<patch_number>] FOR VERSION [<version_identifier>]\n  USING <path_to_version_directory> [ LABEL = '<display_label>' ]",
    "example": "ALTER APPLICATION PACKAGE hello_snowflake_package\n  ADD VERSION v1_1\n  USING '@hello_snowflake_code.core.hello_snowflake_stage';\n\n+---------------------------------------------------------------------------------------+---------+-------+\n| status                                                                                | version | patch |\n|---------------------------------------------------------------------------------------+---------+-------|\n| Version 'v1_1' of application package 'hello_snowflake_package' created successfully. | v1_1    |     0 |\n+---------------------------------------------------------------------------------------+---------+-------+"
},
{
    "function_name": "ALTER APPLICATION PACKAGE … RELEASE DIRECTIVE",
    "summary": "Modifies the properties of an existing application package in the Native Apps Framework.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-application-package-release-directive",
    "title": "ALTER APPLICATION PACKAGE … RELEASE DIRECTIVE",
    "description": "",
    "syntax": "ALTER APPLICATION PACKAGE <name>\n  MODIFY RELEASE DIRECTIVE <release_directive>\n  VERSION = <version_identifier>\n  PATCH = <patch_num>\n  [ UPGRADE_AFTER = '<timestamp>' ]\n\nALTER APPLICATION PACKAGE <name>\n  SET DEFAULT RELEASE DIRECTIVE\n  VERSION = <version_identifier>\n  PATCH = <patch_num>\n  [ UPGRADE_AFTER = '<timestamp>' ]\n\nALTER APPLICATION PACKAGE <name>\n  SET RELEASE DIRECTIVE <release_directive>\n  ACCOUNTS = ( <organization_name>.<account_name> [ , <organization_name>.<account_name> , ... ] )\n  VERSION = <version_identifier>\n  PATCH = <patch_num>\n  [ UPGRADE_AFTER = '<timestamp>' ]\n\nALTER APPLICATION PACKAGE <name> UNSET RELEASE DIRECTIVE <release_directive>",
    "example": ""
},
{
    "function_name": "USE WAREHOUSE",
    "summary": "Specifies the active/current virtual warehouse for the session.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/use-warehouse",
    "title": "USE WAREHOUSE",
    "description": "Specifies the active/current",
    "syntax": "USE WAREHOUSE <name>",
    "example": "USE WAREHOUSE mywarehouse;"
},
{
    "function_name": "USE SECONDARY ROLES",
    "summary": "Specifies the active/current secondary roles for the session.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/use-secondary-roles",
    "title": "USE SECONDARY ROLES",
    "description": "Specifies the active/current secondary roles for the session. The currently-active secondary roles set the context that determines whether\nthe current user has the necessary privileges to perform SQL actions.",
    "syntax": "USE SECONDARY ROLES {\n      ALL\n    | NONE\n    | <role_name> [ , <role_name> ... ]\n  }",
    "example": "USE SECONDARY ROLES ALL;\n\nUSE SECONDARY ROLES test_role_1, test_role_2;"
},
{
    "function_name": "USE SCHEMA",
    "summary": "Specifies the active/current schema for the session.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/use-schema",
    "title": "USE SCHEMA",
    "description": "Specifies the active/current schema for the session:",
    "syntax": "USE [ SCHEMA ] [<db_name>.]<name>",
    "example": "USE SCHEMA myschema;\n\nUSE mydb.myschema;"
},
{
    "function_name": "USE ROLE",
    "summary": "Specifies the active/current primary role for the session.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/use-role",
    "title": "USE ROLE",
    "description": "Specifies the active/current primary role for the session. The currently active primary role sets the context that determines whether the\ncurrent user has the necessary privileges to execute",
    "syntax": "USE ROLE <name>",
    "example": "USE ROLE myrole;"
},
{
    "function_name": "USE DATABASE",
    "summary": "Specifies the active/current database for the session.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/use-database",
    "title": "USE DATABASE",
    "description": "Specifies the active/current database for the session:",
    "syntax": "USE [ DATABASE ] <name>",
    "example": "USE DATABASE mydb;"
},
{
    "function_name": "USE <object>",
    "summary": "Specifies the role, warehouse, database, or schema to use for the current session.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/use",
    "title": "USE",
    "description": "Specifies the role, warehouse, database, or schema to use for the current session.",
    "syntax": "",
    "example": ""
},
{
    "function_name": "UPDATE",
    "summary": "Updates specified rows in the target table with new values.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/update",
    "title": "UPDATE",
    "description": "Updates specified rows in the target table with new values.",
    "syntax": "UPDATE <target_table>\n       SET <col_name> = <value> [ , <col_name> = <value> , ... ]\n        [ FROM <additional_tables> ]\n        [ WHERE <condition> ]",
    "example": "UPDATE t1\n  SET number_column = t1.number_column + t2.number_column, t1.text_column = 'ASDF'\n  FROM t2\n  WHERE t1.key_column = t2.t1_key and t1.number_column < 10;\n\nselect * from target;\n\n+---+----+\n| K |  V |\n|---+----|\n| 0 | 10 |\n+---+----+\n\nSelect * from src;\n\n+---+----+\n| K |  V |\n|---+----|\n| 0 | 11 |\n| 0 | 12 |\n| 0 | 13 |\n+---+----+\n\n-- Following statement joins all three rows in src against the single row in target\nUPDATE target\n  SET v = src.v\n  FROM src\n  WHERE target.k = src.k;\n\n+------------------------+-------------------------------------+\n| number of rows updated | number of multi-joined rows updated |\n|------------------------+-------------------------------------|\n|                      1 |                                   1 |\n+------------------------+-------------------------------------+\n\nUPDATE target SET v = b.v\n  FROM (SELECT k, MIN(v) v FROM src GROUP BY k) b\n  WHERE target.k = b.k;"
},
{
    "function_name": "UNSET",
    "summary": "Drops a session variable.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/unset",
    "title": "UNSET",
    "description": "Drops a",
    "syntax": "UNSET <var>\n\nUNSET ( <var> [ , <var> ... ] )",
    "example": "UNSET V1;\n\nUNSET V2;\n\nUNSET (V1, V2);"
},
{
    "function_name": "UNDROP TAG",
    "summary": "Restores the most recent version of a tag to the system.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/undrop-tag",
    "title": "UNDROP TAG",
    "description": "Restores the most recent version of a tag to the system.",
    "syntax": "UNDROP TAG <name>",
    "example": ""
},
{
    "function_name": "UNDROP TABLE",
    "summary": "Restores the most recent version of a dropped table.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/undrop-table",
    "title": "UNDROP TABLE",
    "description": "Restores the most recent version of a dropped table.",
    "syntax": "UNDROP TABLE <name>",
    "example": "UNDROP TABLE t2;\n\n+---------------------------------+\n| status                          |\n|---------------------------------|\n| Table T2 successfully restored. |\n+---------------------------------+\n\nSELECT table_id,\n  table_name,\n  table_schema,\n  table_catalog,\n  created,\n  deleted,\n  comment\nFROM SNOWFLAKE.ACCOUNT_USAGE.TABLES\nWHERE table_catalog = 'DB1'\nAND table_schema = 'S1'\nAND table_name = 'MY_TABLE'\nAND deleted IS NOT NULL\nORDER BY deleted;\n\n+----------+------------+--------------+---------------+-------------------------------+-------------------------------+---------+\n| TABLE_ID | TABLE_NAME | TABLE_SCHEMA | TABLE_CATALOG | CREATED                       | DELETED                       | COMMENT |\n|----------+------------+--------------+---------------+-------------------------------+-------------------------------+---------|\n|   408578 | MY_TABLE   | S1           | DB1           | 2024-07-01 15:39:07.565 -0700 | 2024-07-01 15:40:28.161 -0700 | NULL    |\n+----------+------------+--------------+---------------+-------------------------------+-------------------------------+---------+\n|   408607 | MY_TABLE   | S1           | DB1           | 2024-07-01 17:43:07.565 -0700 | 2024-07-01 17:44:28.161 -0700 | NULL    |\n+----------+------------+--------------+---------------+-------------------------------+-------------------------------+---------+\n\nUNDROP TABLE IDENTIFIER(408578);"
},
{
    "function_name": "UNDROP STREAMLIT",
    "summary": "Restores the most recent version of a dropped Streamlit object.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/undrop-streamlit",
    "title": "UNDROP STREAMLIT",
    "description": "Restores the most recent version of a dropped Streamlit object.",
    "syntax": "UNDROP STREAMLIT <name>",
    "example": ""
},
{
    "function_name": "UNDROP SCHEMA",
    "summary": "Restore the most recent version of a dropped schema.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/undrop-schema",
    "title": "UNDROP SCHEMA",
    "description": "Restore the most recent version of a dropped schema.",
    "syntax": "UNDROP SCHEMA <name>",
    "example": "UNDROP SCHEMA myschema;\n\n+----------------------------------------+\n| status                                 |\n|----------------------------------------|\n| Schema MYSCHEMA successfully restored. |\n+----------------------------------------+\n\nSHOW SCHEMAS HISTORY;\n\n+---------------------------------+--------------------+------------+------------+---------------+--------+-----------------------------------------------------------+---------+----------------+------------+\n| created_on                      | name               | is_default | is_current | database_name | owner  | comment                                                   | options | retention_time | dropped_on |\n|---------------------------------+--------------------+------------+------------+---------------+--------+-----------------------------------------------------------+---------+----------------+------------|\n| Fri, 13 May 2016 17:26:07 -0700 | INFORMATION_SCHEMA | N          | N          | MYTESTDB      |        | Views describing the contents of schemas in this database |         |              1 | [NULL]     |\n| Tue, 17 Mar 2015 17:18:42 -0700 | MYSCHEMA           | N          | N          | MYTESTDB      | PUBLIC |                                                           |         |              1 | [NULL]     |\n| Tue, 17 Mar 2015 16:57:04 -0700 | PUBLIC             | N          | Y          | MYTESTDB      | PUBLIC |                                                           |         |              1 | [NULL]     |\n+---------------------------------+--------------------+------------+------------+---------------+--------+-----------------------------------------------------------+---------+----------------+------------+\n\nSELECT schema_id,\n  schema_name,\n  catalog_name,\n  created,\n  deleted,\n  comment\nFROM SNOWFLAKE.ACCOUNT_USAGE.SCHEMATA\nWHERE schema_name = 'S1'\nAND catalog_name = 'DB1'\nAND deleted IS NOT NULL\nORDER BY deleted;\n\n+-----------+-------------+---------------+-------------------------------+-------------------------------+---------+\n| SCHEMA_ID | SCHEMA_NAME | CATALOG_NAME  | CREATED                       | DELETED                       | COMMENT |\n|-----------+-------------+---------------+-------------------------------+-------------------------------+---------|\n|       797 | S1          | DB1           | 2024-07-01 17:53:01.955 -0700 | 2024-07-01 17:53:11.889 -0700 | NULL    |\n|       798 | S1          | DB1           | 2024-07-01 17:53:11.889 -0700 | 2024-07-01 17:53:16.327 -0700 | NULL    |\n|       799 | S1          | DB1           | 2024-07-01 17:53:16.327 -0700 | 2024-07-01 17:53:25.066 -0700 | NULL    |\n+-----------+-------------+---------------+-------------------------------+-------------------------------+---------+\n\nUNDROP SCHEMA IDENTIFIER(798);"
},
{
    "function_name": "UNDROP NOTEBOOK",
    "summary": "Restores the most recent version of a dropped notebook.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/undrop-notebook",
    "title": "UNDROP NOTEBOOK",
    "description": "Restores the most recent version of a dropped notebook.",
    "syntax": "UNDROP NOTEBOOK <name>",
    "example": ""
},
{
    "function_name": "UNDROP ICEBERG TABLE",
    "summary": "Restores the most recent version of a dropped Apache Iceberg™ table.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/undrop-iceberg-table",
    "title": "UNDROP ICEBERG TABLE",
    "description": "Restores the most recent version of a dropped",
    "syntax": "UNDROP ICEBERG TABLE <name>",
    "example": "UNDROP ICEBERG TABLE my_iceberg_table;"
},
{
    "function_name": "UNDROP EXTERNAL VOLUME",
    "summary": "Restores the most recent version of a dropped external volume.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/undrop-external-volume",
    "title": "UNDROP EXTERNAL VOLUME",
    "description": "Restores the most recent version of a dropped",
    "syntax": "UNDROP EXTERNAL VOLUME <name>",
    "example": "UNDROP EXTERNAL VOLUME my_external_volume;"
},
{
    "function_name": "UNDROP DYNAMIC TABLE",
    "summary": "Restores the most recent version of a dropped dynamic table.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/undrop-dynamic-table",
    "title": "UNDROP DYNAMIC TABLE",
    "description": "Restores the most recent version of a dropped",
    "syntax": "UNDROP DYNAMIC TABLE <name>",
    "example": "UNDROP DYNAMIC TABLE my_dynamic_table;"
},
{
    "function_name": "UNDROP DATABASE",
    "summary": "Restores the most recent version of a dropped database.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/undrop-database",
    "title": "UNDROP DATABASE",
    "description": "Restores the most recent version of a dropped database.",
    "syntax": "UNDROP DATABASE <name>",
    "example": "UNDROP DATABASE mytestdb2;\n\n+-------------------------------------------+\n| status                                    |\n|-------------------------------------------|\n| Database MYTESTDB2 successfully restored. |\n+-------------------------------------------+\n\nSHOW DATABASES HISTORY;\n\n+---------------------------------+-----------+------------+------------+--------+--------+---------+---------+----------------+------------+\n| created_on                      | name      | is_default | is_current | origin | owner  | comment | options | retention_time | dropped_on |\n|---------------------------------+-----------+------------+------------+--------+--------+---------+---------+----------------+------------|\n| Tue, 17 Mar 2015 16:57:04 -0700 | MYTESTDB  | N          | Y          |        | PUBLIC |         |         |              1 | [NULL]     |\n| Tue, 17 Mar 2015 17:06:32 -0700 | MYTESTDB2 | N          | N          |        | PUBLIC |         |         |              1 | [NULL]     |\n| Wed, 25 Feb 2015 17:30:04 -0800 | SALES1    | N          | N          |        | PUBLIC |         |         |              1 | [NULL]     |\n| Fri, 13 Feb 2015 19:21:49 -0800 | DEMO1     | N          | N          |        | PUBLIC |         |         |              1 | [NULL]     |\n+---------------------------------+-----------+------------+------------+--------+--------+---------+---------+----------------+------------+\n\nSELECT database_id,\n  database_name,\n  created,\n  deleted,\n  comment\nFROM SNOWFLAKE.ACCOUNT_USAGE.DATABASES\nWHERE database_name = 'MY_DATABASE'\nAND deleted IS NOT NULL\nORDER BY deleted;\n\n+-------------+---------------+-------------------------------+-------------------------------+---------+\n| DATABASE_ID | DATABASE_NAME | CREATED                       | DELETED                       | COMMENT |\n|-------------+---------------+-------------------------------+-------------------------------+---------|\n|         494 | MY_DATABASE   | 2024-07-01 17:51:33.380 -0700 | 2024-07-01 17:51:46.228 -0700 | NULL    |\n|         492 | MY_DATABASE   | 2024-07-01 17:51:52.560 -0700 | 2024-07-01 17:52:39.881 -0700 | NULL    |\n|         493 | MY_DATABASE   | 2024-07-01 17:52:39.849 -0700 | 2024-07-01 17:52:44.562 -0700 | NULL    |\n+-------------+---------------+-------------------------------+-------------------------------+---------+\n\nUNDROP DATABASE IDENTIFIER(492);"
},
{
    "function_name": "UNDROP ACCOUNT",
    "summary": "Restores a dropped account that has not yet been permanently deleted (a dropped account that is within its grace period).",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/undrop-account",
    "title": "UNDROP ACCOUNT",
    "description": "Restores a",
    "syntax": "UNDROP ACCOUNT <name>",
    "example": ""
},
{
    "function_name": "UNDROP <object>",
    "summary": "Restores the specified object to the system.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/undrop",
    "title": "UNDROP",
    "description": "Restores the specified object to the system. This command is part of the",
    "syntax": "",
    "example": ""
},
{
    "function_name": "TRUNCATE TABLE",
    "summary": "Removes all rows from a table but leaves the table intact (including all privileges and constraints on the table).",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/truncate-table",
    "title": "TRUNCATE TABLE",
    "description": "Removes all rows from a table but leaves the table intact (including all privileges and constraints on the table). Also deletes the load\nmetadata for the table, which allows the same files to be loaded into the table again after the command completes.",
    "syntax": "TRUNCATE [ TABLE ] [ IF EXISTS ] <name>",
    "example": "-- create a basic table\nCREATE OR REPLACE TABLE temp (i number);\n\n-- populate it with some rows\nINSERT INTO temp SELECT seq8() FROM table(generator(rowcount=>20)) v;\n\n-- verify that the rows exist\nSELECT COUNT (*) FROM temp;\n\n----------+\n count(*) |\n----------+\n 20       |\n----------+\n\n-- truncate the table\nTRUNCATE TABLE IF EXISTS temp;\n\n-- verify that the table is now empty\nSELECT COUNT (*) FROM temp;\n\n----------+\n count(*) |\n----------+\n 0        |\n----------+"
},
{
    "function_name": "TRUNCATE MATERIALIZED VIEW",
    "summary": "Removes all rows from a materialized view, but leaves the view intact (including all privileges and constraints on the materialized view).",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/truncate-materialized-view",
    "title": "TRUNCATE MATERIALIZED VIEW",
    "description": "",
    "syntax": "TRUNCATE MATERIALIZED VIEW <name>",
    "example": ""
},
{
    "function_name": "SHOW WAREHOUSES",
    "summary": "Lists all the virtual warehouses in your account for which you have access privileges.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-warehouses",
    "title": "SHOW WAREHOUSES",
    "description": "Lists all the",
    "syntax": "SHOW WAREHOUSES\n  [ LIKE '<pattern>' ]\n  [ WITH PRIVILEGES <objectPrivilege> [ , <objectPrivilege> [ , ... ] ] ]",
    "example": "SHOW WAREHOUSES LIKE 'test%';\n\nn| name          | state     | type               | size    | min_cluster_count | max_cluster_count | started_clusters | running | queued | is_default | is_current | auto_suspend | auto_resume | available | provisioning | quiescing | other | created_on                    | resumed_on                    | updated_on                    | owner        | comment | enable_query_acceleration | query_acceleration_max_scale_factor | resource_monitor | actives | pendings | failed | suspended | uuid     | scaling_policy | owner_role_type | resource_constraint |\n||---------------------+\n| TEST1         | SUSPENDED | STANDARD           | Medium  |                 1 |                 1 |                0 |       0 |      0 | N          | N          |          600 | true        |           |              |           |       | 2023-01-27 14:57:07.768 -0800 | 2023-05-10 16:17:49.258 -0700 | 2023-05-10 16:17:49.258 -0700 | MY_ROLE      |         | true                      |                                   8 | null             |       0 |        0 |      0 |         4 | 76064    | STANDARD       | ROLE            | NULL                +\n| TEST2         | SUSPENDED | STANDARD           | X-Small |                 1 |                 1 |                0 |       0 |      0 | N          | N          |          600 | true        |           |              |           |       | 2023-01-27 14:57:07.953 -0800 | 1969-12-31 16:00:00.000 -0800 | 2023-01-27 14:57:08.356 -0800 | MY_ROLE      |         | true                      |                                  16 | MYTEST_RM        |       0 |        0 |      0 |         1 | 76116    | STANDARD       |  ROLE           | NULL                +\n| TEST3         | SUSPENDED | STANDARD           | Small   |                 1 |                 1 |                0 |       0 |      0 | N          | N          |          600 | true        |           |              |           |       | 2023-08-08 10:26:45.534 -0700 | 2023-08-08 10:26:45.681 -0700 | 2023-08-08 10:26:45.681 -0700 | MY_ROLE      |         | false                     |                                   8 | null             |       0 |        0 |      0 |         2 | 19464517 | STANDARD       | ROLE            | NULL                +\n| TEST4         | RESUMING  | SNOWPARK-OPTIMIZED | Large   |                 1 |                 1 |                0 |       0 |      0 | N          | Y          |          600 | true        |           |              |           |       | 2023-09-21 17:29:58.165 -0700 | 2023-09-21 17:29:58.165 -0700 | 2023-09-21 17:29:58.207 -0700 | MY_ROLE      |         | false                     |                                   8 | null             |       0 |        0 |      0 |         0 | 19464585 | STANDARD       | ROLE            | MEMORY_16X_X86      +\nn\nSHOW WAREHOUSES WITH PRIVILEGES MODIFY, OPERATE;\n\nn| name                         | state     | type     | size    | min_cluster_count | max_cluster_count | started_clusters | running | queued | is_default | is_current | auto_suspend | auto_resume | available | provisioning | quiescing | other | created_on                    | resumed_on                    | updated_on                    | owner        | comment                                         | enable_query_acceleration | query_acceleration_max_scale_factor | resource_monitor | actives | pendings | failed | suspended | uuid     | scaling_policy | owner_role_type |\n|n| TEST_WH                      | SUSPENDED | STANDARD | X-Small |                 1 |                 1 |                0 |       0 |      0 | Y          | Y          |          600 | true        |           |              |           |       | 2023-01-27 14:57:07.768 -0800 | 2024-07-30 13:39:24.118 -0700 | 2024-07-30 13:39:24.118 -0700 | TEST_ROLE    |                                                 | true                      |                                  32 | TEST_RM          |       0 |        0 |      0 |         1 | 76056    | STANDARD       | ROLE            | NULL                +\n| SNOWPARK_DEMO                | SUSPENDED | STANDARD | X-Large |                 1 |                 1 |                0 |       0 |      0 | N          | N          |          600 | true        |           |              |           |       | 2023-01-27 14:57:07.903 -0800 | 2023-04-10 11:47:03.146 -0700 | 2023-04-10 11:47:03.146 -0700 | ACCOUNTADMIN | Created by straut for Snowpark quickstart       | false                     |                                   8 | null             |       0 |        0 |      0 |        16 | 76104    | STANDARD       | ROLE            | NULL                +\n| TASTY_DEV_WH                 | SUSPENDED | STANDARD | X-Small |                 1 |                 1 |                0 |       0 |      0 | N          | N          |           60 | true        |           |              |           |       | 2023-10-25 16:25:43.681 -0700 | 2023-10-25 16:25:43.681 -0700 | 2023-10-25 16:25:43.711 -0700 | SYSADMIN     | developer warehouse for tasty bytes             | false                     |                                   8 | null             |       0 |        0 |      0 |         1 | 19464633 | STANDARD       | ROLE            | NULL                +\n| TB_DOCS_WH                   | SUSPENDED | STANDARD | X-Small |                 1 |                 1 |                0 |       0 |      0 | N          | N          |           60 | true        |           |              |           |       | 2024-07-24 15:02:32.172 -0700 | 2024-07-24 15:33:30.502 -0700 | 2024-07-24 15:33:30.502 -0700 | SYSADMIN     | developer warehouse for tasty bytes             | false                     |                                   8 | null             |       0 |        0 |      0 |         1 | 19465097 | STANDARD       | ROLE            | NULL                +\nn\nCREATE OR REPLACE PROCEDURE started_and_suspended_warehouses()\n  RETURNS TABLE(name VARCHAR, status VARCHAR, type VARCHAR, size VARCHAR)\n  LANGUAGE SQL\n  AS\n  $$\n    DECLARE\n      res RESULTSET;\n    BEGIN\n      SHOW WAREHOUSES;\n      res := (SELECT \"name\" name, \"state\" state, \"type\" type, \"size\" size\n        FROM TABLE(RESULT_SCAN(LAST_QUERY_ID(-1)))\n        WHERE \"state\" IN ('STARTED','SUSPENDED')\n        ORDER BY \"state\", \"name\");\n      RETURN TABLE(res);\n    END;\n  $$\n  ;\n\nCALL started_and_suspended_warehouses();\n\n+------------------------------+-----------+--------------------+---------+\n| NAME                         | STATUS    | TYPE               | SIZE    |\n|------------------------------+-----------+--------------------+---------|\n| COMPUTE_WH                   | STARTED   | STANDARD           | X-Small |\n| DEFAULT_SIZE                 | SUSPENDED | STANDARD           | Small   |\n| DEFAULT_SIZE_2               | SUSPENDED | STANDARD           | X-Small |\n| MEDIUM                       | SUSPENDED | SNOWPARK-OPTIMIZED | Medium  |\n| PRIV_WH                      | SUSPENDED | STANDARD           | X-Small |\n| SYSTEM$STREAMLIT_NOTEBOOK_WH | SUSPENDED | STANDARD           | X-Small |\n| XSMALL                       | SUSPENDED | STANDARD           | Medium  |\n+------------------------------+-----------+--------------------+---------+"
},
{
    "function_name": "SHOW VIEWS",
    "summary": "Lists the views, including secure views, for which you have access privileges.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-views",
    "title": "SHOW VIEWS",
    "description": "Lists the views, including secure views, for which you have access privileges. The command can be used to list views for the\ncurrent/specified database or schema, or across your entire account.",
    "syntax": "SHOW [ TERSE ] VIEWS [ LIKE '<pattern>' ]\n                     [ IN { ACCOUNT | DATABASE [ <db_name> ] | [ SCHEMA ] [ <schema_name> ] | APPLICATION <application_name> | APPLICATION PACKAGE <application_package_name> } ]\n                     [ STARTS WITH '<name_string>' ]\n                     [ LIMIT <rows> [ FROM '<name_string>' ] ]",
    "example": "SHOW VIEWS LIKE 'line%' IN mydb.public;\n\n+-------------------------------+---------+----------+---------------+-------------+----------+---------+-------------------------------------------------------+-----------+-----------------+-----------------+-----------------+\n| created_on                    | name    | reserved | database_name | schema_name | owner    | comment | text                                                  | is_secure | is_materialized | change_tracking | owner_role_type |\n+-------------------------------+---------+----------+---------------+-------------+----------+---------+-------------------------------------------------------+-----------+-----------------+-----------------+-----------------+\n| 2019-05-24 18:41:14.247 -0700 | liners1 |          | MYDB          | PUBLIC      | SYSADMIN |         | create materialized views liners1 as select * from t; | false     | false           | on              | ROLE            |\n+-------------------------------+---------+----------+---------------+-------------+----------+---------+-------------------------------------------------------+-----------+-----------------+-----------------+-----------------+"
},
{
    "function_name": "SHOW VERSIONS IN ORGANIZATION PROFILE",
    "summary": "Lists the organization profile versions for which you have access privileges.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-versions-in-organization-profile",
    "title": "SHOW VERSIONS IN ORGANIZATION PROFILE",
    "description": "",
    "syntax": "SHOW VERSIONS IN ORGANIZATION PROFILE <name>",
    "example": "SHOW VERSIONS IN ORGANIZATION PROFILE myorganizationprofile;\n\n+------------------------+---------------------+---------------------+-----------------------------------------------+---------------------+---------------------+-------------+-----------------+---------------------+---------------------+----------------+\n|created_on              |name                 |alias                |location_uri                                   |is_live              |is_default           |is_first     |is_last          |comment              |source_location_uri  |git_commit_hash |\n+------------------------+---------------------+---------------------+-----------------------------------------------+---------------------+---------------------+-------------+-----------------+---------------------+---------------------+----------------+\n|2025-01-01 01:01:01.000 |VERSION$1            |V1                   |snow://notebook/mynotebook/versions/version$1  |TRUE                 |FALSE                |TRUE         |FALSE            |                     |@TESTDB.PUBLIC.STAGE |NONE            |\n+------------------------+---------------------+---------------------+-----------------------------------------------+---------------------+---------------------+-------------+-----------------+---------------------+---------------------+----------------+"
},
{
    "function_name": "SHOW VERSIONS IN MODEL",
    "summary": "Lists the versions in a machine learning model.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-versions-in-model",
    "title": "SHOW VERSIONS IN MODEL",
    "description": "Lists the versions in a machine learning model. Models may have multiple versions, one of which must be designated as\nthe default (see",
    "syntax": "SHOW VERSIONS [ LIKE '<pattern>' ] IN MODEL <model_name>",
    "example": ""
},
{
    "function_name": "SHOW VERSIONS IN LISTING",
    "summary": "Lists and provides details of all listing versions.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-versions-in-listing",
    "title": "SHOW VERSIONS IN LISTING",
    "description": "Lists and provides details of all listing versions.",
    "syntax": "SHOW VERSIONS IN LISTING <name>\n  [ LIMIT <rows> ]",
    "example": "SHOW VERSIONS IN LISTING MYLISTING\n\n+-----------------------------------+------------------------------+------------------------------+-----------------------------------------------+--------------------+--------------------+--------------------+--------------------+---------------------------------------------+---------------------------------------+---------------------------------------+\n|             created_on            |             name             |             alias            |                  location_uri                 |     is_default     |       is_live      |      is_first      |       is_last      |                   comment                   |          source_location_uri          |             git_commit_hash           |\n+-----------------------------------+------------------------------+------------------------------+-----------------------------------------------+--------------------+--------------------+--------------------+--------------------+---------------------------------------------+---------------------------------------+---------------------------------------+\n|   2025-01-08 11:18:39.921 -0800   |                              |                              |  snow://listing/MYLISTING/versions/live/      |        FALSE       |        TRUE        |        FALSE       |       FALSE        |                                             |            @listingstage              |                                       |\n|   2025-01-08 11:18:24.550 -0800   |        VERSION$2             |                              |  snow://listing/MYLISTING/versions/version$2/ |        TRUE        |        FALSE       |        FALSE       |       TRUE         |                                             |            @listingstage              |                                       |\n|   2025-01-08 11:17:32.894 -0800   |        VERSION$1             |                              |  snow://listing/MYLISTING/versions/version$1/ |        FALSE       |        FALSE       |        TRUE        |       FALSE        |                                             |            @listingstage              |                                       |\n+-----------------------------------+------------------------------+------------------------------+-----------------------------------------------+--------------------+--------------------+--------------------+--------------------+---------------------------------------------+---------------------------------------+---------------------------------------+"
},
{
    "function_name": "SHOW VERSIONS IN DATASET",
    "summary": "Displays information about the datasets in your account at either the schema or database level.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-versions-in-dataset",
    "title": "SHOW VERSIONS IN DATASET",
    "description": "Displays information about the datasets in your account at either the schema or database level.",
    "syntax": "SHOW VERSIONS [ LIKE '<pattern>' ] IN DATASET <dataset_name>\n  [ LIMIT <rows>]",
    "example": ""
},
{
    "function_name": "SHOW VERSIONS IN APPLICATION PACKAGE",
    "summary": "Lists the versions defined in the specified application package.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-versions",
    "title": "SHOW VERSIONS IN APPLICATION PACKAGE",
    "description": "",
    "syntax": "SHOW VERSIONS [ LIKE <pattern> ]\n  IN APPLICATION PACKAGE <name>;",
    "example": ""
},
{
    "function_name": "SHOW VARIABLES",
    "summary": "Lists all variables defined in the current session.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-variables",
    "title": "SHOW VARIABLES",
    "description": "Lists all",
    "syntax": "SHOW VARIABLES [ LIKE '<pattern>' ]",
    "example": ""
},
{
    "function_name": "SHOW USERS",
    "summary": "Lists all users in the system.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-users",
    "title": "SHOW USERS",
    "description": "Lists all",
    "syntax": "SHOW [ TERSE ] USERS\n  [ LIKE '<pattern>' ]\n  [ STARTS WITH '<name_string>' ]\n  [ LIMIT <rows> [ FROM '<name_string>' ] ]",
    "example": "SHOW USERS;\n\nn| name         | created_on                    | login_name    | display_name | first_name | last_name | email                  | mins_to_unlock | days_to_expiry | comment | disabled | must_change_password | snowflake_lock | default_warehouse | default_namespace | default_role | default_secondary_roles | ext_authn_duo | ext_authn_uid | mins_to_bypass_mfa | owner        | last_success_login            | expires_at_time | locked_until_time | has_password | has_rsa_public_key | type   | has_mfa | has_pat | has_federated_workload_authentication |\n||\n| MY_USER_NAME | 2020-04-28 12:24:38.722 -0700 | MY_LOGIN_NAME | Jane Smith   | Jane       | Smith     | jane.smith@example.com | NULL           | NULL           | NULL    | false    | false                | false          | MY_WAREHOUSE      | MY_DB.MY_SCHEMA   | MY_ROLE      | []                      | false         | NULL          | NULL               | ACCOUNTADMIN | 2025-06-12 15:02:22.783 -0700 | NULL            | NULL              | true         | true               | PERSON | true    | true    | false                                 |\n
},
{
    "function_name": "SHOW USER PROGRAMMATIC ACCESS TOKENS",
    "summary": "Lists the programmatic access tokens associated with a user.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-user-programmatic-access-tokens",
    "title": "SHOW USER PROGRAMMATIC ACCESS TOKENS",
    "description": "Lists the",
    "syntax": "SHOW USER { PROGRAMMATIC ACCESS TOKENS | PATS } [ FOR USER <username> ]",
    "example": "SHOW USER PROGRAMMATIC ACCESS TOKENS FOR USER example_user;"
},
{
    "function_name": "SHOW USER PROCEDURES",
    "summary": "Lists all user-defined procedures for which you have access privileges.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-user-procedures",
    "title": "SHOW USER PROCEDURES",
    "description": "Lists all user-defined procedures for which you have access privileges. Use this command to list the user-defined procedures for a specified\ndatabase or schema (or the current database/schema for the session), application, or for your entire account.",
    "syntax": "SHOW USER PROCEDURES [ LIKE '<pattern>' ]\n  [ IN\n    {\n      ACCOUNT                                         |\n\n      DATABASE                                        |\n      DATABASE <database_name>                        |\n\n      SCHEMA                                          |\n      SCHEMA <schema_name>                            |\n      <schema_name>\n\n      APPLICATION <application_name>                  |\n      APPLICATION PACKAGE <application_package_name>  |\n    }\n  ]",
    "example": "SHOW USER PROCEDURES LIKE 'GET_%' IN SCHEMA;\n\n-------------------------------+-----------------+-------------+------------+--------------+---------+-------------------+-------------------+---------------------------------------+------------------------+--------------+-------------------+----------------------+-----------+---------+------------------------------+\n          created_on           | name            | schema_name | is_builtin | is_aggregate | is_ansi | min_num_arguments | max_num_arguments | arguments                             | description            | catalog_name | is_table_function | valid_for_clustering | is_secure | secrets | external_access_integrations |\n-------------------------------+-----------------+-------------+------------+--------------+---------+-------------------+-------------------+---------------------------------------+------------------------+--------------+-------------------+----------------------+-----------+---------+------------------------------+\n 2023-01-27 15:01:13.862 -0800 | GET_FILE        | PUBLIC      | N          | N            | N       | 1                 | 1                 | GET_FILE(VARCHAR) RETURN VARCHAR      | user-defined procedure | BOOKS_DB     | N                 | N                    | N         |         |                              |\n 2023-03-23 10:38:10.423 -0700 | GET_NUM_RESULTS | PUBLIC      | N          | N            | N       | 1                 | 1                 | GET_NUM_RESULTS(VARCHAR) RETURN FLOAT | user-defined procedure | BOOKS_DB     | N                 | N                    | N         |         |                              |\n 2023-03-23 09:47:55.840 -0700 | GET_RESULTS     | PUBLIC      | N          | N            | N       | 1                 | 1                 | GET_RESULTS(VARCHAR) RETURN TABLE ()  | user-defined procedure | BOOKS_DB     | Y                 | N                    | N         |         |                              |\n-------------------------------+-----------------+-------------+------------+--------------+---------+-------------------+-------------------+---------------------------------------+------------------------+--------------+-------------------+----------------------+-----------+---------+------------------------------+"
},
{
    "function_name": "SHOW USER FUNCTIONS",
    "summary": "Lists all user-defined functions (UDFs) for which you have access privileges.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-user-functions",
    "title": "SHOW USER FUNCTIONS",
    "description": "Lists all user-defined functions (UDFs) for which you have access privileges. Use this command to list the UDFs for a specified\ndatabase or schema (or the current database/schema for the session), or across your entire account.",
    "syntax": "SHOW USER FUNCTIONS [ LIKE '<pattern>' ]\n  [ IN\n    {\n      ACCOUNT                                         |\n\n      DATABASE                                        |\n      DATABASE <database_name>                        |\n\n      SCHEMA                                          |\n      SCHEMA <schema_name>                            |\n      <schema_name>\n\n      APPLICATION <application_name>                  |\n      APPLICATION PACKAGE <application_package_name>  |\n    }\n  ]",
    "example": "SHOW USER FUNCTIONS LIKE 'ALLOWED_REGIONS%' IN SCHEMA;\n\n---------------------------------+--------------------------+-------------+------------+--------------+---------+-------------------+-------------------+-----------------------------------------+-----------------------+----------------+-------------------+----------------------+-----------+---------+-----------------------------+----------------------+----------+---------------+----------------+\n          created_on             |           name           | schema_name | is_builtin | is_aggregate | is_ansi | min_num_arguments | max_num_arguments |                arguments                |      description      |  catalog_name  | is_table_function | valid_for_clustering | is_secure | secrets | external_access_integration | is_external_function | language | is_memoizable | is_data_metric |\n---------------------------------+--------------------------+-------------+------------+--------------+---------+-------------------+-------------------+-----------------------------------------+-----------------------+----------------+-------------------+----------------------+-----------+---------+-----------------------------+----------------------+----------+---------------+----------------+\n Fri, 23 Jun 1967 00:00:00 -0700 | ALLOWED_REGIONS          | PUBLIC      | N          | N            | N       | 0                 | 0                 | ALLOWED_REGIONS() RETURN ARRAY          | user-defined function | MEMO_FUNC_TEST | N                 | N                    | N         |         |                             | N                    | SQL      | Y             | N              |\n Fri, 23 Jun 1967 00:00:00 -0700 | ALLOWED_REGIONS_NON_MEMO | PUBLIC      | N          | N            | N       | 0                 | 0                 | ALLOWED_REGIONS_NON_MEMO() RETURN ARRAY | user-defined function | MEMO_FUNC_TEST | N                 | N                    | N         |         |                             | N                    | SQL      | N             | N              |\n---------------------------------+--------------------------+-------------+------------+--------------+---------+-------------------+-------------------+-----------------------------------------+-----------------------+----------------+-------------------+----------------------+-----------+---------+-----------------------------+----------------------+----------+---------------+----------------+"
},
{
    "function_name": "SHOW TRANSACTIONS",
    "summary": "List all running transactions.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-transactions",
    "title": "SHOW TRANSACTIONS",
    "description": "List all running transactions. The command can be used to show transactions for the current user or all users in the account.",
    "syntax": "SHOW TRANSACTIONS [ IN ACCOUNT ]",
    "example": ""
},
{
    "function_name": "SHOW TELEMETRY EVENT DEFINITIONS",
    "summary": "Lists the event definitions for the specified app.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-telemetry-event-definitions",
    "title": "SHOW TELEMETRY EVENT DEFINITIONS",
    "description": "",
    "syntax": "SHOW TELEMETRY EVENT DEFINITIONS IN APPLICATION <name>",
    "example": ""
},
{
    "function_name": "SHOW TASKS",
    "summary": "Lists the tasks for which you have access privileges.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-tasks",
    "title": "SHOW TASKS",
    "description": "Lists the tasks for which you have access privileges. The command can be used to list tasks for the current/specified database or schema,\nor across your entire account.",
    "syntax": "SHOW [ TERSE ] TASKS [ LIKE '<pattern>' ]\n                     [ IN { ACCOUNT | DATABASE [ <db_name> ] | [ SCHEMA ] [ <schema_name> ] | APPLICATION <application_name> | APPLICATION PACKAGE <application_package_name> } ]\n                     [ STARTS WITH '<name_string>' ]\n                     [ ROOT ONLY ]\n                     [ LIMIT <rows> [ FROM '<name_string>' ] ]",
    "example": "SHOW TASKS LIKE 'line%' IN tpch.public;\n\nSHOW TASKS IN tpch.public;"
},
{
    "function_name": "SHOW TAGS",
    "summary": "Lists the tag information.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-tags",
    "title": "SHOW TAGS",
    "description": "Lists the tag information.",
    "syntax": "SHOW TAGS [ LIKE '<pattern>' ]\n          [ IN\n               {\n                 ACCOUNT                                         |\n\n                 DATABASE                                        |\n                 DATABASE <database_name>                        |\n\n                 SCHEMA                                          |\n                 SCHEMA <schema_name>                            |\n                 <schema_name>\n\n                 APPLICATION <application_name>                  |\n                 APPLICATION PACKAGE <application_package_name>  |\n               }\n          ]",
    "example": "SHOW TAGS IN SCHEMA my_db.my_schema;\n\n------------------------------+----------------+---------------+-------------+--------------+--------------------+----------------+-----------------+\n                   created_on | name           | database_name | schema_name | owner        | comment            | allowed_values | owner_role_type |\n------------------------------+----------------+---------------+-------------+--------------+--------------------+----------------+-----------------+\n2021-03-20 21:09:38.317 +0000 | CLASSIFICATION | MY_DB         | MY_SCHEMA   | ACCOUNTADMIN | secure information | [NULL]         | ROLE            |\n2021-03-20 21:08:59.000 +0000 | COST_CENTER    | MY_DB         | MY_SCHEMA   | ACCOUNTADMIN | cost_center tag    | [NULL]         | ROLE            |\n------------------------------+----------------+---------------+-------------+--------------+--------------------+----------------+-----------------+"
},
{
    "function_name": "SHOW TABLES",
    "summary": "Lists the tables for which you have access privileges, including dropped tables that are still within the Time Travel retention period and, therefore, can be undropped.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-tables",
    "title": "SHOW TABLES",
    "description": "Lists the tables for which you have access privileges, including dropped tables that are still within the Time Travel retention period\nand, therefore, can be undropped. The command can be used to list tables for the current/specified database or schema, or across your\nentire account.",
    "syntax": "SHOW [ TERSE ] TABLES [ HISTORY ] [ LIKE '<pattern>' ]\n                                  [ IN\n                                        {\n                                          ACCOUNT                                         |\n\n                                          DATABASE                                        |\n                                          DATABASE <database_name>                        |\n\n                                          SCHEMA                                          |\n                                          SCHEMA <schema_name>                            |\n                                          <schema_name>\n\n                                          APPLICATION <application_name>                  |\n                                          APPLICATION PACKAGE <application_package_name>  |\n                                        }\n                                  ]\n                                  [ STARTS WITH '<name_string>' ]\n                                  [ LIMIT <rows> [ FROM '<name_string>' ] ]",
    "example": "SHOW TERSE TABLES IN tpch_sf1 STARTS WITH 'LINE';\n\n+-------------------------------+----------+-------+-----------------------+-------------+\n| created_on                    | name     | kind  | database_name         | schema_name |\n|-------------------------------+----------+-------+-----------------------+-------------|\n| 2016-07-08 13:41:59.960 -0700 | LINEITEM | TABLE | SNOWFLAKE_SAMPLE_DATA | TPCH_SF1    |\n+-------------------------------+----------+-------+-----------------------+-------------+\n\nSHOW TERSE TABLES LIKE '%PART%' IN tpch_sf1;\n\n+-------------------------------+-----------+-------+-----------------------+-------------+\n| created_on                    | name      | kind  | database_name         | schema_name |\n|-------------------------------+-----------+-------+-----------------------+-------------|\n| 2016-07-08 13:41:59.960 -0700 | JPART     | TABLE | SNOWFLAKE_SAMPLE_DATA | TPCH_SF1    |\n| 2016-07-08 13:41:59.960 -0700 | JPARTSUPP | TABLE | SNOWFLAKE_SAMPLE_DATA | TPCH_SF1    |\n| 2016-07-08 13:41:59.960 -0700 | PART      | TABLE | SNOWFLAKE_SAMPLE_DATA | TPCH_SF1    |\n| 2016-07-08 13:41:59.960 -0700 | PARTSUPP  | TABLE | SNOWFLAKE_SAMPLE_DATA | TPCH_SF1    |\n+-------------------------------+-----------+-------+-----------------------+-------------+\n\nSHOW TERSE TABLES IN tpch_sf1 LIMIT 3 FROM 'J';\n\n+-------------------------------+-----------+-------+-----------------------+-------------+\n| created_on                    | name      | kind  | database_name         | schema_name |\n|-------------------------------+-----------+-------+-----------------------+-------------|\n| 2016-07-08 13:41:59.960 -0700 | JCUSTOMER | TABLE | SNOWFLAKE_SAMPLE_DATA | TPCH_SF1    |\n| 2016-07-08 13:41:59.960 -0700 | JLINEITEM | TABLE | SNOWFLAKE_SAMPLE_DATA | TPCH_SF1    |\n| 2016-07-08 13:41:59.960 -0700 | JNATION   | TABLE | SNOWFLAKE_SAMPLE_DATA | TPCH_SF1    |\n+-------------------------------+-----------+-------+-----------------------+-------------+\n\nCREATE OR REPLACE TABLE test_show_tables_history(c1 NUMBER);\n\nDROP TABLE test_show_tables_history;\n\nSHOW TABLES HISTORY LIKE 'test_show_tables_history';"
},
{
    "function_name": "SHOW STREAMS",
    "summary": "Lists the streams for which you have access privileges.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-streams",
    "title": "SHOW STREAMS",
    "description": "Lists the streams for which you have access privileges. The command can be used to list streams for the current/specified database\nor schema, or across your entire account.",
    "syntax": "SHOW [ TERSE ] STREAMS [ LIKE '<pattern>' ]\n                       [ IN { ACCOUNT | DATABASE [ <db_name> ] | [ SCHEMA ] [ <schema_name> ] | APPLICATION <application_name> | APPLICATION PACKAGE <application_package_name> } ]\n                       [ STARTS WITH '<name_string>' ]\n                       [ LIMIT <rows> [ FROM '<name_string>' ] ]",
    "example": "SHOW STREAMS LIKE 'line%' IN tpch.public;"
},
{
    "function_name": "SHOW STAGES",
    "summary": "Lists all the stages for which you have access privileges.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-stages",
    "title": "SHOW STAGES",
    "description": "Lists all the stages for which you have access privileges. This command can be used to list the stages for a specified schema or\ndatabase (or the current schema/database for the session), or your entire account.",
    "syntax": "SHOW STAGES [ LIKE '<pattern>' ]\n            [ IN\n                 {\n                   ACCOUNT                                         |\n\n                   DATABASE                                        |\n                   DATABASE <database_name>                        |\n\n                   SCHEMA                                          |\n                   SCHEMA <schema_name>                            |\n                   <schema_name>\n\n                   APPLICATION <application_name>                  |\n                   APPLICATION PACKAGE <application_package_name>  |\n                 }\n            ]",
    "example": ""
},
{
    "function_name": "SHOW STREAMLITS",
    "summary": "Lists the Streamlit objects for which you have access privileges.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-streamlits",
    "title": "SHOW STREAMLITS",
    "description": "Lists the Streamlit objects for which you have access privileges.",
    "syntax": "SHOW [ TERSE ] STREAMLITS [ LIKE '<pattern>' ]\n                          [ IN\n                                {\n                                  ACCOUNT                   |\n\n                                  DATABASE                  |\n                                  DATABASE <db_name>        |\n\n                                  SCHEMA\n                                  SCHEMA <schema_name>      |\n                                  <schema_name>             |\n                                }\n                          ]\n                          [ LIMIT <rows> [ FROM '<name_string>' ]",
    "example": ""
},
{
    "function_name": "SHOW SPECIFICATIONS",
    "summary": "Lists the app specifications that have been defined for an app.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-specifications",
    "title": "SHOW SPECIFICATIONS",
    "description": "",
    "syntax": "SHOW [ { APPROVED | DECLINED | PENDING } ] SPECIFICATIONS [ IN APPLICATION <app_name> ];",
    "example": "SHOW SPECIFICATIONS;"
},
{
    "function_name": "SHOW SNAPSHOTS",
    "summary": "Lists the snapshots for which you have access privileges.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-snapshots",
    "title": "SHOW SNAPSHOTS",
    "description": "",
    "syntax": "SHOW SNAPSHOTS [ LIKE '<pattern>' ]\n               [ IN\n                   {\n                       ACCOUNT                  |\n\n                       DATABASE                 |\n                       DATABASE <database_name> |\n\n                       SCHEMA                   |\n                       SCHEMA <schema_name>     |\n                       <schema_name>            |\n                   }\n               ]\n               [ STARTS WITH '<name_string>' ]\n               [ LIMIT <rows> [ FROM '<name_string>' ] ]",
    "example": "SHOW SNAPSHOTS;\n\n+-------------+---------+---------------+-------------+----------------------------------------------------+-------------+----------+------+--------------+-----------+-----------------+-------------------------------+-------------------------------+---------------+\n| name        | state   | database_name | schema_name | service_name                                       | volume_name | instance | size | comment      | owner     | owner_role_type | created_on                    | updated_on                    | encryption    |\n|-------------+---------+---------------+-------------+----------------------------------------------------+-------------+----------+------+--------------+-----------+-----------------+-------------------------------+-------------------------------+---------------|\n| MY_SNAPSHOT | CREATED | TUTORIAL_DB   | DATA_SCHEMA | TUTORIAL_DB.DATA_SCHEMA.MY_SERVICE_WITH_EBS_VOLUME | block-vol1  | 0        |   10 | new snapshot | TEST_ROLE | ROLE            | 2024-05-09 21:36:58.502 -0700 | 2024-05-09 21:38:03.424 -0700 | SNOWFLAKE_SSE |\n+-------------+---------+---------------+-------------+----------------------------------------------------+-------------+----------+------+--------------+-----------+-----------------+-------------------------------+-------------------------------+---------------+"
},
{
    "function_name": "SHOW SHARES IN REPLICATION GROUP",
    "summary": "Lists shares in a replication group.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-shares-in-replication-group",
    "title": "SHOW SHARES IN REPLICATION GROUP",
    "description": "Lists shares in a",
    "syntax": "SHOW SHARES IN REPLICATION GROUP <name>",
    "example": "SHOW SHARES IN REPLICATION GROUP myrg;"
},
{
    "function_name": "SHOW SHARES IN FAILOVER GROUP",
    "summary": "Lists shares in a failover group.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-shares-in-failover-group",
    "title": "SHOW SHARES IN FAILOVER GROUP",
    "description": "",
    "syntax": "SHOW SHARES IN FAILOVER GROUP <name>",
    "example": "SHOW SHARES IN FAILOVER GROUP myrg;"
},
{
    "function_name": "SHOW SHARES",
    "summary": "Lists all shares available in the system.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-shares",
    "title": "SHOW SHARES",
    "description": "",
    "syntax": "SHOW SHARES [ LIKE '<pattern>' ]\n            [ LIMIT <rows> [ FROM '<name_string>' ] ]",
    "example": "SHOW SHARES;\n\n+-------------------------------+----------+----------------------+---------------+-----------------------+------------------+--------------+----------------------------------------+---------------------+\n| created_on                    | kind     | owner_account        | name          | database_name         | to               | owner        | comment                                | listing_global_name |                  |\n|-------------------------------+----------+----------------------+---------------+-----------------------+------------------+--------------+----------------------------------------|---------------------|\n| 2016-07-09 19:18:09.821 -0700 | INBOUND  | SNOW.MY_TEST_ACCOUNT | SAMPLE_DATA   | SNOWFLAKE_SAMPLE_DATA |                  |              | Sample data sets provided by Snowflake |                     |\n| 2017-06-15 17:02:29.625 -0700 | OUTBOUND | SNOW.MY_TEST_ACCOUNT | SALES_S       | SALES_DB              | XY12345, YZ23456 | ACCOUNTADMIN |                                        |                     |\n+-------------------------------+----------+----------------------+---------------+-----------------------+------------------+--------------+----------------------------------------+---------------------+\n\nSHOW SHARES LIMIT 5 FROM 'SNOW';\n\n+-------------------------------+----------+-------------------------+-----------------+----------------+------------------+--------------+---------+---------------------+\n| created_on                    | kind     | owner_account           | name            | database_name  | to               | owner        | comment | listing_global_name |\n|-------------------------------+----------+-------------------------+-----------------+----------------+------------------+--------------+---------+---------------------|\n| 2020-07-07 19:18:09.821 -0700 | OUTBOUND | SNOW.MY_TEST_ACCOUNT    | SNOW_DATA       | EXAMPLE        |                  | ACCOUNTADMIN |         |                     |\n| 2020-07-10 19:18:09.821 -0700 | OUTBOUND | SNOW.MY_TEST_ACCOUNT    | DATA_SNOWS      | EXAMPLE        |                  | ACCOUNTADMIN |         |                     |\n| 2022-08-18 12:02:29.625 -0700 | OUTBOUND | SNOW.MY_TEST_ACCOUNT    | SNOW_DATA       | ALFALFA_DB     | AB12345, YZ23456 | ACCOUNTADMIN |         |                     |\n| 2022-08-18 13:04:29.625 -0700 | OUTBOUND | SNOW.MY_TEST_ACCOUNT    | SNOW_SHARE      | SALES_DB       | AB12345          | ACCOUNTADMIN |         |                     |\n| 2022-08-18 14:02:40.625 -0700 | OUTBOUND | SNOW.MY_TEST_ACCOUNT    | SNOWIER_SHARE   | SALES_DB       |                  | ACCOUNTADMIN |         |                     |\n+-------------------------------+----------+-------------------------+-----------------+----------------+------------------+--------------+---------+---------------------+\n\nSHOW SHARES STARTS WITH 'SNOW' LIMIT 5 FROM 'A';\n\n+-------------------------------+----------+------------------------+------------------------+----------------+------------------+--------------+---------+---------------------+\n| created_on                    | kind     | owner_account          |  name                  | database_name  | to               | owner        | comment | listing_global_name |\n|-------------------------------+----------+------------------------+------------------------+----------------+------------------+--------------+---------+---------------------|\n| 2020-07-07 19:18:09.821 -0700 | OUTBOUND | SNOW.MY_TEST_ACCOUNT   | SNOW_DATA              | EXAMPLE        |                  | ACCOUNTADMIN |         |                     |\n| 2022-08-18 12:02:29.625 -0700 | OUTBOUND | SNOW.MY_TEST_ACCOUNT   | SNOW_DATA              | ALFALFA_DB     | AB12345, YZ23456 | ACCOUNTADMIN |         |                     |\n| 2022-08-18 14:02:40.625 -0700 | OUTBOUND | SNOW.MY_TEST_ACCOUNT   | SNOWIER_SHARE          | SALES_DB       |                  | ACCOUNTADMIN |         |                     |\n| 2022-08-20 15:03:50.625 -0700 | OUTBOUND | SNOW.MY_TEST_ACCOUNT   | SNOWY_SHARE            | SALES_DB       |                  | ACCOUNTADMIN |         |                     |\n| 2022-08-18 13:04:29.625 -0700 | OUTBOUND | SNOW.MY_TEST_ACCOUNT   | SNOW_SHARE             | SALES_DB       | AB12345          | ACCOUNTADMIN |         |                     |\n+-------------------------------+----------+------------------------+------------------------+----------------+------------------+--------------+---------+---------------------+"
},
{
    "function_name": "SHOW SESSION POLICIES",
    "summary": "Lists session policy information, including the creation date, database and schema names, owner, and any available comments.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-session-policies",
    "title": "SHOW SESSION POLICIES",
    "description": "",
    "syntax": "SHOW SESSION POLICIES\n  [ LIKE '<pattern>' ]\n  [ IN\n       {\n         ACCOUNT                                         |\n\n         DATABASE                                        |\n         DATABASE <database_name>                        |\n\n         SCHEMA                                          |\n         SCHEMA <schema_name>                            |\n\n         APPLICATION <application_name>                  |\n         APPLICATION PACKAGE <application_package_name>  |\n       }\n    |\n    ON\n       {\n         ACCOUNT           |\n         USER <user_name>  |\n       }\n  ]\n  [ STARTS WITH '<name_string>' ]\n  [ LIMIT <rows> ]",
    "example": ""
},
{
    "function_name": "SHOW SERVICES",
    "summary": "Lists the Snowpark Container Services services (including job services) for which you have access privileges.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-services",
    "title": "SHOW SERVICES",
    "description": "",
    "syntax": "SHOW [ JOB ] SERVICES [ EXCLUDE JOBS ] [ LIKE '<pattern>' ]\n           [ IN\n                {\n                  ACCOUNT                  |\n\n                  DATABASE                 |\n                  DATABASE <database_name> |\n\n                  SCHEMA                   |\n                  SCHEMA <schema_name>     |\n                  <schema_name>            |\n\n                  COMPUTE POOL <compute_pool_name>\n                }\n           ]\n           [ STARTS WITH '<name_string>' ]\n           [ LIMIT <rows> [ FROM '<name_string>' ] ]",
    "example": "SHOW SERVICES;\n\nn| name         | status  | database_name | schema_name | owner     | compute_pool          | dns_name                            | current_instances | target_instances | min_ready_instances | min_instances | max_instances | auto_resume | external_access_integrations | created_on                    | updated_on                    | resumed_on | suspended_on | auto_suspend_secs | comment | owner_role_type | query_warehouse | is_job | is_async_job | spec_digest                                                      | is_upgrading | managing_object_domain | managing_object_name |\n||\n| ECHO_SERVICE | RUNNING | TUTORIAL_DB   | DATA_SCHEMA | TEST_ROLE | TUTORIAL_COMPUTE_POOL | echo-service.k3m6.svc.spcs.internal |                 1 |                1 |                   1 |             1 |             1 | true        | NULL                         | 2024-11-29 12:12:47.310 -0800 | 2024-11-29 12:12:48.843 -0800 | NULL       | NULL         |                 0 | NULL    | ROLE            | NULL            | false  | false        | edaf548eb0c2744a87426529b53aac75756d0ea1c0ba5edb3cbb4295a381f2b4 | false        | NULL                   | NULL                 |\nn\nSHOW SERVICES LIMIT 1;\n\nSHOW SERVICES LIKE '%echo%';\n\nSHOW SERVICES LIKE '%echo%' LIMIT 1;\n\nSHOW JOB SERVICES;"
},
{
    "function_name": "SHOW SERVICE INSTANCES IN SERVICE",
    "summary": "Lists instances of a service.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-service-instances-in-service",
    "title": "SHOW SERVICE INSTANCES IN SERVICE",
    "description": "",
    "syntax": "SHOW SERVICE INSTANCES IN SERVICE <name>",
    "example": "SHOW SERVICE INSTANCES IN SERVICE echo_service;\n\n+---------------+-------------+--------------+----------------+-------------+--------+------------------------------------------------------------------+----------------------+----------------------+------------+\n| database_name | schema_name | service_name | service_status | instance_id | status | spec_digest                                                      | creation_time        | start_time           | ip_address |\n|---------------+-------------+--------------+----------------+-------------+--------+------------------------------------------------------------------+----------------------+----------------------+------------|\n| TUTORIAL_DB   | DATA_SCHEMA | ECHO_SERVICE | RUNNING        | 0           | READY  | 2831c241b8d64104fbc562d60764d7abd28602c70b6a8357341e8c8210b79da4 | 2025-04-25T06:01:32Z | 2025-04-25T06:01:32Z | 10.244.0.9 |\n+---------------+-------------+--------------+----------------+-------------+--------+------------------------------------------------------------------+----------------------+----------------------+------------+"
},
{
    "function_name": "SHOW SERVICE CONTAINERS IN SERVICE",
    "summary": "Lists the containers in all instances of a service.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-service-containers-in-service",
    "title": "SHOW SERVICE CONTAINERS IN SERVICE",
    "description": "",
    "syntax": "SHOW SERVICE CONTAINERS IN SERVICE <name>",
    "example": "SHOW SERVICE CONTAINERS IN SERVICE echo_service;\n\n+---------------+-------------+--------------+----------------+-------------+-----------------+----------------+--------+---------+----------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------+---------------+----------------------+----------------+-------------------+\n| database_name | schema_name | service_name | service_status | instance_id | instance_status | container_name | status | message | image_name                                                                                                                                         | image_digest                                                            | restart_count | start_time           | last_exit_code | last_restart_time |\n|---------------+-------------+--------------+----------------+-------------+-----------------+----------------+--------+---------+----------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------+---------------+----------------------+----------------+-------------------|\n| TUTORIAL_DB   | DATA_SCHEMA | ECHO_SERVICE | RUNNING        | 0           | READY           | echo           | READY  | Running | orgname.acctname.registry-dev.snowflakecomputing.com/tutorial_db/data_schema/tutorial_repository/my_echo_service_image:latest                      | sha256:d04a2d7b7d9bd607df994926e3cc672edcb541474e4888a01703e8bb0dd3f173 |             0 | 2025-04-25T06:01:38Z |           NULL | NULL              |\n+---------------+-------------+--------------+----------------+-------------+-----------------+----------------+--------+---------+----------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------+---------------+----------------------+----------------+-------------------+"
},
{
    "function_name": "SHOW SEQUENCES",
    "summary": "Lists all the sequences for which you have access privileges.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-sequences",
    "title": "SHOW SEQUENCES",
    "description": "Lists all the sequences for which you have access privileges. This command can be used to list the sequences for a specified schema or\ndatabase (or the current schema/database for the session), or your entire account.",
    "syntax": "SHOW SEQUENCES [ LIKE '<pattern>' ]\n               [ IN\n                    {\n                      ACCOUNT                                         |\n\n                      DATABASE                                        |\n                      DATABASE <database_name>                        |\n\n                      SCHEMA                                          |\n                      SCHEMA <schema_name>                            |\n                      <schema_name>\n\n                      APPLICATION <application_name>                  |\n                      APPLICATION PACKAGE <application_package_name>  |\n                    }\n               ]",
    "example": ""
},
{
    "function_name": "SHOW SEMANTIC VIEWS",
    "summary": "Lists the semantic views for which you have access privileges.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-semantic-views",
    "title": "SHOW SEMANTIC VIEWS",
    "description": "Lists the",
    "syntax": "SHOW [ TERSE ] SEMANTIC VIEWS [ LIKE '<pattern>' ]\n  [ IN\n    {\n      ACCOUNT                                         |\n\n      DATABASE                                        |\n      DATABASE <database_name>                        |\n\n      SCHEMA                                          |\n      SCHEMA <schema_name>                            |\n      <schema_name>\n    }\n  ]\n\n  [ STARTS WITH '<name_string>' ]\n  [ LIMIT <rows> [ FROM '<name_string>' ] ]",
    "example": "SHOW SEMANTIC VIEWS;\n\n+-------------------------------+----------------------+---------------+-------------+---------+---------+-----------------+-----------+\n| created_on                    | name                 | database_name | schema_name | comment | owner   | owner_role_type | extension |\n|-------------------------------+----------------------+---------------+-------------+---------+---------+-----------------+-----------+\n| 2025-04-10 08:29:02.732 -0700 | MY_SEMANTIC_VIEW_1   | MY_DB         | MY_SCHEMA   |         | MY_ROLE | ROLE            | NULL      |\n| 2025-04-10 08:29:21.117 -0700 | MY_SEMANTIC_VIEW_2   | MY_DB         | MY_SCHEMA   |         | MY_ROLE | ROLE            | NULL      |\n| 2025-04-10 08:29:38.040 -0700 | MY_SEMANTIC_VIEW_3   | MY_DB         | MY_SCHEMA   |         | MY_ROLE | ROLE            | NULL      |\n| 2025-04-10 08:47:33.161 -0700 | MY_SEMANTIC_VIEW_4   | MY_DB         | MY_SCHEMA   |         | MY_ROLE | ROLE            | NULL      |\n| 2025-04-10 08:47:46.294 -0700 | MY_SEMANTIC_VIEW_5   | MY_DB         | MY_SCHEMA   |         | MY_ROLE | ROLE            | NULL      |\n| 2025-04-10 08:47:58.480 -0700 | MY_SEMANTIC_VIEW_6   | MY_DB         | MY_SCHEMA   |         | MY_ROLE | ROLE            | NULL      |\n| 2025-02-28 16:16:04.002 -0800 | O_TPCH_SEMANTIC_VIEW | MY_DB         | MY_SCHEMA   |         | MY_ROLE | ROLE            | NULL      |\n| 2025-03-21 07:03:54.120 -0700 | TPCH_REV_ANALYSIS    | MY_DB         | MY_SCHEMA   |         | MY_ROLE | ROLE            | NULL      |\n+-------------------------------+----------------------+---------------+-------------+---------+---------+-----------------+-----------+\n\nSHOW TERSE SEMANTIC VIEWS;\n\n+-------------------------------+-----------------------+---------------+---------------+-------------------+\n| created_on                    | name                  | kind          | database_name | schema_name       |\n|-------------------------------+-----------------------+---------------+---------------+-------------------|\n| 2025-04-10 08:29:02.732 -0700 | MY_SEMANTIC_VIEW_1    | SEMANTIC_VIEW | MY_DB         | MY_SCHEMA         |\n| 2025-04-10 08:29:21.117 -0700 | MY_SEMANTIC_VIEW_2    | SEMANTIC_VIEW | MY_DB         | MY_SCHEMA         |\n| 2025-04-10 08:29:38.040 -0700 | MY_SEMANTIC_VIEW_3    | SEMANTIC_VIEW | MY_DB         | MY_SCHEMA         |\n| 2025-04-10 08:47:33.161 -0700 | MY_SEMANTIC_VIEW_4    | SEMANTIC_VIEW | MY_DB         | MY_SCHEMA         |\n| 2025-04-10 08:47:46.294 -0700 | MY_SEMANTIC_VIEW_5    | SEMANTIC_VIEW | MY_DB         | MY_SCHEMA         |\n| 2025-04-10 08:47:58.480 -0700 | MY_SEMANTIC_VIEW_6    | SEMANTIC_VIEW | MY_DB         | MY_SCHEMA         |\n| 2025-02-28 16:16:04.002 -0800 | O_TPCH_SEMANTIC_VIEW  | SEMANTIC_VIEW | MY_DB         | MY_SCHEMA         |\n| 2025-03-21 07:03:54.120 -0700 | TPCH_REV_ANALYSIS     | SEMANTIC_VIEW | MY_DB         | MY_SCHEMA         |\n+-------------------------------+-----------------------+---------------+---------------+-------------------+\n\nSHOW SEMANTIC VIEWS LIKE '%tpch%';\n\n+-------------------------------+----------------------+---------------+-------------+---------+---------+-----------------+-----------+\n| created_on                    | name                 | database_name | schema_name | comment | owner   | owner_role_type | extension |\n|-------------------------------+----------------------+---------------+-------------+---------+---------+-----------------+-----------|\n| 2025-02-28 16:16:04.002 -0800 | O_TPCH_SEMANTIC_VIEW | MY_DB         | MY_SCHEMA   |         | MY_ROLE | ROLE            | NULL      |\n| 2025-03-21 07:03:54.120 -0700 | TPCH_REV_ANALYSIS    | MY_DB         | MY_SCHEMA   |         | MY_ROLE | ROLE            | NULL      |\n+-------------------------------+----------------------+---------------+-------------+---------+---------+-----------------+-----------+\n\nSHOW SEMANTIC VIEWS STARTS WITH 'MY_SEMANTIC_VIEW';\n\n+-------------------------------+--------------------+---------------+-------------+---------+---------+-----------------+-----------+\n| created_on                    | name               | database_name | schema_name | comment | owner   | owner_role_type | extension |\n|-------------------------------+--------------------+---------------+-------------+---------+---------+-----------------+-----------|\n| 2025-04-10 08:29:02.732 -0700 | MY_SEMANTIC_VIEW_1 | MY_DB         | MY_SCHEMA   |         | MY_ROLE | ROLE            | NULL      |\n| 2025-04-10 08:29:21.117 -0700 | MY_SEMANTIC_VIEW_2 | MY_DB         | MY_SCHEMA   |         | MY_ROLE | ROLE            | NULL      |\n| 2025-04-10 08:29:38.040 -0700 | MY_SEMANTIC_VIEW_3 | MY_DB         | MY_SCHEMA   |         | MY_ROLE | ROLE            | NULL      |\n| 2025-04-10 08:47:33.161 -0700 | MY_SEMANTIC_VIEW_4 | MY_DB         | MY_SCHEMA   |         | MY_ROLE | ROLE            | NULL      |\n| 2025-04-10 08:47:46.294 -0700 | MY_SEMANTIC_VIEW_5 | MY_DB         | MY_SCHEMA   |         | MY_ROLE | ROLE            | NULL      |\n| 2025-04-10 08:47:58.480 -0700 | MY_SEMANTIC_VIEW_6 | MY_DB         | MY_SCHEMA   |         | MY_ROLE | ROLE            | NULL      |\n+-------------------------------+--------------------+---------------+-------------+---------+---------+-----------------+-----------+\n\nSHOW SEMANTIC VIEWS STARTS WITH 'MY_SEMANTIC_VIEW' LIMIT 3;\n\n+-------------------------------+--------------------+---------------+-------------+---------+---------+-----------------+-----------+\n| created_on                    | name               | database_name | schema_name | comment | owner   | owner_role_type | extension |\n|-------------------------------+--------------------+---------------+-------------+---------+---------+-----------------+-----------|\n| 2025-04-10 08:29:02.732 -0700 | MY_SEMANTIC_VIEW_1 | MY_DB         | MY_SCHEMA   |         | MY_ROLE | ROLE            | NULL      |\n| 2025-04-10 08:29:21.117 -0700 | MY_SEMANTIC_VIEW_2 | MY_DB         | MY_SCHEMA   |         | MY_ROLE | ROLE            | NULL      |\n| 2025-04-10 08:29:38.040 -0700 | MY_SEMANTIC_VIEW_3 | MY_DB         | MY_SCHEMA   |         | MY_ROLE | ROLE            | NULL      |\n+-------------------------------+--------------------+---------------+-------------+---------+---------+-----------------+-----------+\n\nSHOW SEMANTIC VIEWS STARTS WITH 'MY_SEMANTIC_VIEW' LIMIT 3 FROM 'MY_SEMANTIC_VIEW_3';\n\n+-------------------------------+--------------------+---------------+-------------+---------+---------+-----------------+-----------+\n| created_on                    | name               | database_name | schema_name | comment | owner   | owner_role_type | extension |\n|-------------------------------+--------------------+---------------+-------------+---------+---------+-----------------+-----------|\n| 2025-04-10 08:47:33.161 -0700 | MY_SEMANTIC_VIEW_4 | MY_DB         | MY_SCHEMA   |         | MY_ROLE | ROLE            | NULL      |\n| 2025-04-10 08:47:46.294 -0700 | MY_SEMANTIC_VIEW_5 | MY_DB         | MY_SCHEMA   |         | MY_ROLE | ROLE            | NULL      |\n| 2025-04-10 08:47:58.480 -0700 | MY_SEMANTIC_VIEW_6 | MY_DB         | MY_SCHEMA   |         | MY_ROLE | ROLE            | NULL      |\n+-------------------------------+--------------------+---------------+-------------+---------+---------+-----------------+-----------+"
},
{
    "function_name": "SHOW SECRETS",
    "summary": "Lists the secrets for which you have rights to see.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-secrets",
    "title": "SHOW SECRETS",
    "description": "Lists the secrets for which you have rights to see. This command can be used to list the secrets for a specified database\nor schema (or the current database/schema for the session), or your entire account.",
    "syntax": "SHOW SECRETS [ LIKE '<pattern>' ]\n             [ IN { ACCOUNT | [ DATABASE ] <db_name> | [ SCHEMA ] <schema_name> | APPLICATION <application_name> | APPLICATION PACKAGE <application_package_name> } ]",
    "example": ""
},
{
    "function_name": "SHOW SCHEMAS",
    "summary": "Lists the schemas for which you have access privileges, including dropped schemas that are still within the Time Travel retention period and, therefore, can be undropped.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-schemas",
    "title": "SHOW SCHEMAS",
    "description": "Lists the schemas for which you have access privileges, including dropped schemas that are still within the Time Travel retention period\nand, therefore, can be undropped. The command can be used to list schemas for the current/specified database, or across your entire\naccount.",
    "syntax": "SHOW [ TERSE ] SCHEMAS\n  [ HISTORY ]\n  [ LIKE '<pattern>' ]\n  [ IN { ACCOUNT | DATABASE [ <db_name> ] | APPLICATION <application_name> | APPLICATION PACKAGE <application_package_name> } ]\n  [ STARTS WITH '<name_string>' ]\n  [ LIMIT <rows> [ FROM '<name_string>' ] ]\n  [ WITH PRIVILEGES <object_privilege> [ , <object_privilege> [ , ... ] ] ]",
    "example": "SHOW SCHEMAS;\n\n+---------------------------------+--------------------+------------+------------+---------------+--------+-----------------------------------------------------------+---------+----------------+-----------------+-------------------+\n| created_on                      | name               | is_default | is_current | database_name | owner  | comment                                                   | options | retention_time | owner_role_type | OBJECT_VISIBILITY |\n|---------------------------------+--------------------+------------+------------+---------------+--------+-----------------------------------------------------------+---------+----------------+-----------------+-------------------+\n| Fri, 13 May 2016 17:58:37 -0700 | INFORMATION_SCHEMA | N          | N          | MYTESTDB      |        | Views describing the contents of schemas in this database |         |              1 | ROLE            | NULL              |\n| Wed, 25 Feb 2015 16:16:54 -0800 | PUBLIC             | N          | Y          | MYTESTDB      | PUBLIC |                                                           |         |              1 | ROLE            | NULL              |\n+---------------------------------+--------------------+------------+------------+---------------+--------+-----------------------------------------------------------+---------+----------------+-----------------+-------------------+\n\nSHOW SCHEMAS HISTORY;\n\n+---------------------------------+--------------------+------------+------------+---------------+--------+-----------------------------------------------------------+---------+----------------+---------------------------------+-----------------+-------------------+\n| created_on                      | name               | is_default | is_current | database_name | owner  | comment                                                   | options | retention_time | dropped_on                      | owner_role_type | OBJECT_VISIBILITY |\n|---------------------------------+--------------------+------------+------------+---------------+--------+-----------------------------------------------------------+---------+----------------+---------------------------------+-----------------+-------------------+\n| Fri, 13 May 2016 17:59:50 -0700 | INFORMATION_SCHEMA | N          | N          | MYTESTDB      |        | Views describing the contents of schemas in this database |         |              1 | NULL                            |                 | NULL              |\n| Wed, 25 Feb 2015 16:16:54 -0800 | PUBLIC             | N          | Y          | MYTESTDB      | PUBLIC |                                                           |         |              1 | NULL                            | ROLE            | NULL              |\n| Tue, 17 Mar 2015 16:42:29 -0700 | MYSCHEMA           | N          | N          | MYTESTDB      | PUBLIC |                                                           |         |              1 | Fri, 13 May 2016 17:25:32 -0700 | ROLE            | NULL              |\n+---------------------------------+--------------------+------------+------------+---------------+--------+-----------------------------------------------------------+---------+----------------+---------------------------------+-----------------+-------------------+\n\nSHOW SCHEMAS WITH PRIVILEGES USAGE;\n\n+-------------------------------+----------------+------------+------------+-----------------------------------------------------------+--------------+---------+---------+----------------+-----------------+-------------------+\n| created_on                    | name           | is_default | is_current | database_name                                             | owner        | comment | options | retention_time | owner_role_type | OBJECT_VISIBILITY |\n|-------------------------------+----------------+------------+------------+-----------------------------------------------------------+--------------+---------+---------+----------------+-----------------+-------------------+\n| 2023-01-27 15:01:12.940 -0800 | PUBLIC         | N          | N          | BOOKS_DB                                                  | DATA_ADMIN   |         |         | 1              | ROLE            | NULL              |\n| 2023-09-15 15:22:51.164 -0700 | PUBLIC         | N          | N          | TEST_DB                                                   | ACCOUNTADMIN |         |         | 4              | ROLE            | NULL              |\n| 2023-01-13 10:58:49.584 -0800 | ACCOUNT_USAGE  | N          | N          | SNOWFLAKE                                                 |              |         |         | 1              |                 | NULL              |\n+-------------------------------+----------------+------------+------------+-----------------------------------------------------------+--------------+---------+---------+----------------+-----------------+-------------------+"
},
{
    "function_name": "SHOW ROW ACCESS POLICIES",
    "summary": "Lists the row access policies for which you have access privileges.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-row-access-policies",
    "title": "SHOW ROW ACCESS POLICIES",
    "description": "",
    "syntax": "SHOW ROW ACCESS POLICIES [ LIKE '<pattern>' ]\n                         [ LIMIT <rows> [ FROM '<name_string>' ] ]\n                         [ IN\n                              {\n                                ACCOUNT                                         |\n\n                                DATABASE                                        |\n                                DATABASE <database_name>                        |\n\n                                SCHEMA                                          |\n                                SCHEMA <schema_name>                            |\n                                <schema_name>\n\n                                APPLICATION <application_name>                  |\n                                APPLICATION PACKAGE <application_package_name>  |\n                              }\n                         ]",
    "example": "SHOW ROW ACCESS POLICIES;\n\n---------------------------------+------+---------------+-------------+-------------------+--------------+---------+---------+-----------------+\n          created_on             | name | database_name | schema_name |       kind        |    owner     | comment | options | owner_role_type |\n---------------------------------+------+---------------+-------------+-------------------+--------------+---------+---------+-----------------+\nFri, 23 Jun 1967 00:00:00 -0700  | P1   | RLS_AUTHZ_DB  | S_D_1       | ROW_ACCESS_POLICY | ACCOUNTADMIN |         | \"\"      | ROLE            |\nFri, 23 Jun 1967 00:00:00 -0700  | P2   | RLS_AUTHZ_DB  | S_D_2       | ROW_ACCESS_POLICY | ACCOUNTADMIN |         | \"\"      | ROLE            |\n---------------------------------+------+---------------+-------------+-------------------+--------------+---------+---------+-----------------+\n\n\n\nSHOW ROW ACCESS POLICIES;\n\n---------------------------------+------+---------------+-------------+-------------------+--------------+---------+---------+-----------------+\n          created_on             | name | database_name | schema_name |       kind        |    owner     | comment | options | owner_role_type |\n---------------------------------+------+---------------+-------------+-------------------+--------------+---------+---------+-----------------+"
},
{
    "function_name": "SHOW ROLES IN SERVICE",
    "summary": "Lists all the service roles associated with a service.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-roles-in-service",
    "title": "SHOW ROLES IN SERVICE",
    "description": "",
    "syntax": "SHOW ROLES IN SERVICE <name>",
    "example": "SHOW ROLES IN SERVICE echo_service;\n\n+-------------------------------+-------------------------+------------+\n| created_on                    |   name                      |  comment   |\n+-------------------------------+-------------------------+------------+\n| 2024-04-29 14:58:50.063 -0700 |   ALL_ENDPOINTS_USAGE   |            |\n+-------------------------------+-------------------------+------------+"
},
{
    "function_name": "SHOW ROLES",
    "summary": "Lists all the roles which you can view across your entire account, including the system-defined roles and any custom roles that exist.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-roles",
    "title": "SHOW ROLES",
    "description": "Lists all the roles which you can view across your entire account, including the system-defined roles and any custom roles that exist.",
    "syntax": "SHOW [ TERSE ] ROLES\n  [ LIKE '<pattern>' ]\n  [ IN CLASS <class_name> ]\n  [ STARTS WITH '<name_string>']\n  [ LIMIT <rows> [ FROM '<name_string>' ] ]",
    "example": "SHOW ROLES;\n\n---------------------------------+---------------+------------+------------+--------------+-------------------+------------------+---------------+---------------+--------------------------+\n           created_on            |     name      | is_default | is_current | is_inherited | assigned_to_users | granted_to_roles | granted_roles |     owner     |         comment          |\n---------------------------------+---------------+------------+------------+--------------+-------------------+------------------+---------------+---------------+--------------------------+\n Fri, 05 Dec 2014 16:25:06 -0800 | ACCOUNTADMIN  | Y          | Y          | N            | 1                 | 0                | 2             |               |                          |\n Mon, 15 Dec 2014 17:58:33 -0800 | ANALYST       | N          | N          | N            | 0                 | 6                | 0             | SECURITYADMIN | Data analyst             |\n Fri, 05 Dec 2014 16:25:06 -0800 | PUBLIC        | N          | N          | Y            | 0                 | 0                | 0             |               |                          |\n Fri, 05 Dec 2014 16:25:06 -0800 | SECURITYADMIN | N          | N          | Y            | 0                 | 1                | 0             |               |                          |\n Fri, 05 Dec 2014 16:25:06 -0800 | SYSADMIN      | N          | N          | Y            | 5                 | 1                | 2             |               |                          |\n---------------------------------+---------------+------------+------------+--------------+-------------------+------------------+---------------+---------------+--------------------------+\n\nSHOW ROLES LIMIT 10 FROM 'my_role2';"
},
{
    "function_name": "SHOW RESOURCE MONITORS",
    "summary": "Lists all the resource monitors in your account for which you have access privileges.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-resource-monitors",
    "title": "SHOW RESOURCE MONITORS",
    "description": "Lists all the resource monitors in your account for which you have access privileges.",
    "syntax": "SHOW RESOURCE MONITORS [ LIKE '<pattern>' ]",
    "example": ""
},
{
    "function_name": "SHOW REPLICATION GROUPS",
    "summary": "Displays information about replication groups and failover groups.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-replication-groups",
    "title": "SHOW REPLICATION GROUPS",
    "description": "",
    "syntax": "SHOW REPLICATION GROUPS [ IN ACCOUNT <account> ]",
    "example": "SHOW REPLICATION GROUPS IN ACCOUNT myaccount1;\n\n+------------------+-------------------------------+--------------+------+----------+---------+------------+-----------------------+---------------------------------------------+---------------------------+----------------------------------------------+-------------------+-------------------+----------------------+-----------------+-------------------------------+---------+-----------------------------------+\n| snowflake_region | created_on                    | account_name | name | type     | comment | is_primary | primary               | object_types                                | allowed_integration_types | allowed_accounts                             | organization_name | account_locator   | replication_schedule | secondary_state | next_scheduled_refresh        | owner   | is_listing_auto_fulfillment_group |\n+------------------+-------------------------------+--------------+------+----------+---------+------------+-----------------------+---------------------------------------------+---------------------------+----------------------------------------------+-------------------+-------------------+----------------------+-----------------+-------------------------------+---------+-----------------------------------+\n| AWS_US_EAST_1    | 2021-10-25 19:08:15.209 -0700 | MYACCOUNT1   | MYFG | FAILOVER |         | true       | MYORG.MYACCOUNT1.MYFG | DATABASES, ROLES, USERS, WAREHOUSES, SHARES |                           | MYORG.MYACCOUNT1.MYFG,MYORG.MYACCOUNT2.MYFG  | MYORG             | MYACCOUNT1LOCATOR | 10 MINUTE            |                 |                               | MYROLE  | false                             |\n+------------------+-------------------------------+--------------+------+----------+---------+------------+-----------------------+---------------------------------------------+---------------------------+----------------------------------------------+-------------------+-------------------+----------------------+-----------------+-------------------------------+---------+-----------------------------------+\n| AWS_US_WEST_2    | 2021-10-25 19:08:15.209 -0700 | MYACCOUNT2   | MYFG | FAILOVER |         | false      | MYORG.MYACCOUNT1.MYFG |                                             |                           |                                              | MYORG             | MYACCOUNT2LOCATOR | 10 MINUTE            | STARTED         | 2022-03-06 12:10:35.280 -0800 | NULL    | false                             |\n+------------------+-------------------------------+--------------+------+----------+---------+------------+-----------------------+---------------------------------------------+---------------------------+----------------------------------------------+-------------------+-------------------+----------------------+-----------------+-------------------------------+---------+-----------------------------------+"
},
{
    "function_name": "SHOW REPLICATION DATABASES",
    "summary": "Lists all the primary and secondary databases (that is to say, all the databases for which replication has been enabled) in your account and indicates the region in which each account is located.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-replication-databases",
    "title": "SHOW REPLICATION DATABASES",
    "description": "Lists all the primary and secondary databases (that is to say, all the databases for which replication has been enabled) in your account\nand indicates the",
    "syntax": "SHOW REPLICATION DATABASES [ LIKE '<pattern>' ]\n                           [ WITH PRIMARY <account_identifier>.<primary_db_name> ]",
    "example": "SHOW REPLICATION DATABASES LIKE 'mydb%';\n\nSHOW REPLICATION DATABASES WITH PRIMARY myorg.account1.mydb1;"
},
{
    "function_name": "SHOW REPLICATION ACCOUNTS",
    "summary": "Lists all the accounts in your organization that are enabled for replication and indicates the region in which each account is located.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-replication-accounts",
    "title": "SHOW REPLICATION ACCOUNTS",
    "description": "Lists all the accounts in your organization that are enabled for replication and indicates the",
    "syntax": "SHOW REPLICATION ACCOUNTS [ LIKE '<pattern>' ]",
    "example": "SHOW REPLICATION ACCOUNTS LIKE 'myaccount%';"
},
{
    "function_name": "SHOW RELEASE DIRECTIVES",
    "summary": "Lists the release directives defined for an application package in the Native Apps Framework.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-release-directives",
    "title": "SHOW RELEASE DIRECTIVES",
    "description": "",
    "syntax": "SHOW RELEASE DIRECTIVES [ LIKE '<pattern>' ]\n  IN APPLICATION PACKAGE <name>",
    "example": "SHOW RELEASE DIRECTIVES IN APPLICATION PACKAGE hello_snowflake_package;\n\n+---------+-------------+---------------------------------+-------------------------------+---------+-------+-------------------------------+------------------------+--------------------------+----------------+-------------------------------+\n| name    | target_type | target_name                     | created_on                    | version | patch | modified_on                   | active_regions         | pending_regions          | release_status | deployed_on                   |\n|---------+-------------+---------------------------------+-------------------------------+---------+-------+-------------------------------+------------------------+--------------------------+----------------+-------------------------------+\n| DEFAULT | DEFAULT     | NULL                            | 2023-04-02 14:55:17.304 -0700 | V2      |     0 | 2023-04-02 15:47:08.673 -0700 | PUBLIC.AWS_AP_SOUTH_1  | PUBLIC.AWS_AP_SOUTH_1    | IN PROGRESS    |                               |\n| NEW_RD  | ACCOUNT     | [PROVIDER_DEV.PROVIDER_AWS]     | 2023-04-02 16:30:44.443 -0700 | V1      |     1 | 2023-04-03 07:10:42.428 -0700 | ALL                    |                          | DEPLOYED       | 2023-04-03 07:10:42.428 -0700 |         |\n+---------+-------------+---------------------------------+-------------------------------+---------+-------+-------------------------------+------------------------+--------------------------+----------------+-------------------------------+"
},
{
    "function_name": "SHOW REGIONS",
    "summary": "Lists all the regions in which accounts can be created.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-regions",
    "title": "SHOW REGIONS",
    "description": "Lists all the",
    "syntax": "SHOW REGIONS [ LIKE '<pattern>' ]",
    "example": ""
},
{
    "function_name": "SHOW REFERENCES",
    "summary": "Lists the references defined for an application in the manifest file and the references the consumer has associated to the application.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-references",
    "title": "SHOW REFERENCES",
    "description": "",
    "syntax": "SHOW REFERENCES IN APPLICATION <name>",
    "example": ""
},
{
    "function_name": "SHOW PROJECTION POLICIES",
    "summary": "Lists projection policy information, including the creation date, database and schema names, owner, and any available comments.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-projection-policies",
    "title": "SHOW PROJECTION POLICIES",
    "description": "",
    "syntax": "SHOW PROJECTION POLICIES [ LIKE '<pattern>' ]\n                         [ IN\n                              {\n                                ACCOUNT                  |\n\n                                DATABASE [ <database_name> ] |\n\n                                SCHEMA [ <schema_name> ]     |\n                              }\n                         ]",
    "example": ""
},
{
    "function_name": "SHOW PROCEDURES",
    "summary": "Lists all stored procedures that you have privileges to access, including built-in and user-defined procedures.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-procedures",
    "title": "SHOW PROCEDURES",
    "description": "Lists all stored procedures that you have privileges to access, including built-in and user-defined procedures.",
    "syntax": "SHOW PROCEDURES [ LIKE '<pattern>' ]\n  [ IN\n    {\n      ACCOUNT                                         |\n\n      CLASS <class_name>                              |\n\n      DATABASE                                        |\n      DATABASE <database_name>                        |\n\n      SCHEMA                                          |\n      SCHEMA <schema_name>                            |\n      <schema_name>\n\n      APPLICATION <application_name>                  |\n      APPLICATION PACKAGE <application_package_name>  |\n    }\n  ]",
    "example": "SHOW PROCEDURES;\n\nSHOW PROCEDURES LIKE 'area_of_%';\n+-------------------------------+----------------+--------------------+------------+--------------+---------+-------------------+-------------------+------------------------------------+------------------------+-----------------------+-------------------+----------------------+-----------+\n| created_on                    | name           | schema_name        | is_builtin | is_aggregate | is_ansi | min_num_arguments | max_num_arguments | arguments                          | description            | catalog_name          | is_table_function | valid_for_clustering | is_secure |\n|-------------------------------+----------------+--------------------+------------+--------------+---------+-------------------+-------------------+------------------------------------+------------------------+-----------------------+-------------------+----------------------+-----------|\n| 1967-06-23 00:00:00.123 -0700 | AREA_OF_CIRCLE | TEMPORARY_DOC_TEST | N          | N            | N       |                 1 |                 1 | AREA_OF_CIRCLE(FLOAT) RETURN FLOAT | user-defined procedure | TEMPORARY_DOC_TEST_DB | N                 | N                    | N         |\n+-------------------------------+----------------+--------------------+------------+--------------+---------+-------------------+-------------------+------------------------------------+------------------------+-----------------------+-------------------+----------------------+-----------+"
},
{
    "function_name": "SHOW PRIVILEGES",
    "summary": "Lists the privileges granted to an application.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-privileges",
    "title": "SHOW PRIVILEGES",
    "description": "",
    "syntax": "SHOW PRIVILEGES IN APPLICATION <name>",
    "example": ""
},
{
    "function_name": "SHOW PRIVACY POLICIES",
    "summary": "Lists the privacy policies for which you have access privileges.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-privacy-policies",
    "title": "SHOW PRIVACY POLICIES",
    "description": "",
    "syntax": "SHOW PRIVACY POLICIES [ LIKE '<pattern>' ]\n           [ IN\n                {\n                  ACCOUNT\n                  | DATABASE [ <database_name> ]\n                  | SCHEMA [ <schema_name> ]\n                }\n           ]",
    "example": "USE DATABASE privacy_policy_db;\nSHOW PRIVACY POLICIES;\n\n+---------------------------------+----------------+-------------------------------------+-------------------------------------+----------------+--------------+---------+-----------------+---------+\n| created_on                      | name           | database_name                       | schema_name                         | kind           | owner        | comment | owner_role_type | options |\n|---------------------------------+----------------+-------------------------------------+-------------------------------------+----------------+--------------+---------+-----------------+---------|\n| Fri, 23 Jun 2021 07:00:00 +0000 | MY_PRIV_POLICY | PRIVACY_POLICY_DB                   | PRIVACY_POLICY_SH                   | PRIVACY_POLICY | ACCOUNTADMIN |         | ROLE            |         |\n+---------------------------------+----------------+-------------------------------------+-------------------------------------+----------------+--------------+---------+-----------------+---------+"
},
{
    "function_name": "SHOW PRIMARY KEYS",
    "summary": "Lists primary keys for one or more tables.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-primary-keys",
    "title": "SHOW PRIMARY KEYS",
    "description": "Lists primary keys for one or more tables. You can specify the following options:",
    "syntax": "SHOW [ TERSE ] PRIMARY KEYS\n    [ IN { ACCOUNT | DATABASE [ <database_name> ] | SCHEMA [ <schema_name> ] | TABLE | [ TABLE ] <table_name> } ]",
    "example": "SHOW PRIMARY KEYS;\n\nSHOW PRIMARY KEYS IN ACCOUNT;\n\nSHOW PRIMARY KEYS IN DATABASE;\n\nSHOW PRIMARY KEYS IN DATABASE my_database;\n\nSHOW PRIMARY KEYS IN SCHEMA;\n\nSHOW PRIMARY KEYS IN SCHEMA my_schema;\n\nSHOW PRIMARY KEYS IN SCHEMA my_database.my_schema;\n\nSHOW PRIMARY KEYS IN my_table;\n\nSHOW PRIMARY KEYS IN my_database.my_schema.my_table;"
},
{
    "function_name": "SHOW PIPES",
    "summary": "Lists the pipes for which you have access privileges.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-pipes",
    "title": "SHOW PIPES",
    "description": "Lists the pipes for which you have access privileges. This command can be used to list the pipes for a specified database or schema\n(or the current database/schema for the session), or your entire account.",
    "syntax": "SHOW PIPES [ LIKE '<pattern>' ]\n           [ IN\n                {\n                  ACCOUNT                                         |\n\n                  DATABASE                                        |\n                  DATABASE <database_name>                        |\n\n                  SCHEMA                                          |\n                  SCHEMA <schema_name>                            |\n                  <schema_name>\n\n                  APPLICATION <application_name>                  |\n                  APPLICATION PACKAGE <application_package_name>  |\n                }\n           ]",
    "example": "use database mydb;\n\nshow pipes;"
},
{
    "function_name": "SHOW PASSWORD POLICIES",
    "summary": "Lists password policy information, including the creation date, database and schema names, owner, and any available comments.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-password-policies",
    "title": "SHOW PASSWORD POLICIES",
    "description": "Lists password policy information, including the creation date, database and schema names, owner, and any available comments.",
    "syntax": "SHOW PASSWORD POLICIES [ LIKE '<pattern>' ]\n                       [ IN\n                            {\n                              ACCOUNT                                         |\n\n                              DATABASE                                        |\n                              DATABASE <database_name>                        |\n\n                              SCHEMA                                          |\n                              SCHEMA <schema_name>                            |\n\n                              APPLICATION <application_name>                  |\n                              APPLICATION PACKAGE <application_package_name>  |\n                            }\n                         |\n                         ON\n                            {\n                              ACCOUNT           |\n                              USER <user_name>  |\n                            }\n                       ]\n                       [ STARTS WITH '<name_string>' ]\n                       [ LIMIT <rows> ]",
    "example": ""
},
{
    "function_name": "SHOW PARAMETERS",
    "summary": "Lists all the account, session, and object parameters that can be set, as well as the current and default values for each parameter.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-parameters",
    "title": "SHOW PARAMETERS",
    "description": "Lists all the account, session, and object parameters that can be set, as well as the current and default values for each parameter:",
    "syntax": "SHOW PARAMETERS\n  [ LIKE '<pattern>' ]\n  [ { IN | FOR } {\n        { SESSION | ACCOUNT }\n      | { USER | WAREHOUSE | DATABASE | SCHEMA | TASK } [ <name> ]\n      | TABLE [ <table_or_view_name> ]\n    } ]",
    "example": "SHOW PARAMETERS;\n\n+-------------------------------------+----------------------------------+----------------------------------+---------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| key                                 | value                            | default                          | level   | description                                                                                                                                                                         |\n|-------------------------------------+----------------------------------+----------------------------------+---------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| ABORT_DETACHED_QUERY                | false                            | false                            | SESSION | If true, Snowflake will automatically abort queries when it detects that the client has disappeared.                                                                                |\n| AUTOCOMMIT                          | true                             | true                             | SESSION | The autocommit property determines whether is statement should to be implicitly                                                                                                     |\n|                                     |                                  |                                  |         | wrapped within a transaction or not. If autocommit is set to true, then a                                                                                                           |\n|                                     |                                  |                                  |         | statement that requires a transaction is executed within a transaction                                                                                                              |\n|                                     |                                  |                                  |         | implicitly. If autocommit is off then an explicit commit or rollback is required                                                                                                    |\n|                                     |                                  |                                  |         | to close a transaction. The default autocommit value is true.                                                                                                                       |\n| AUTOCOMMIT_API_SUPPORTED            | true                             | true                             |         | Whether autocommit feature is enabled for this client. This parameter is for                                                                                                        |\n|                                     |                                  |                                  |         | Snowflake use only.                                                                                                                                                                 |\n| BINARY_INPUT_FORMAT                 | HEX                              | HEX                              |         | input format for binary                                                                                                                                                             |\n| BINARY_OUTPUT_FORMAT                | HEX                              | HEX                              |         | display format for binary                                                                                                                                                           |\n| CLIENT_SESSION_KEEP_ALIVE           | false                            | false                            |         | If true, client session will not expire automatically                                                                                                                               |\n| DATE_INPUT_FORMAT                   | AUTO                             | AUTO                             |         | input format for date                                                                                                                                                               |\n| DATE_OUTPUT_FORMAT                  | YYYY-MM-DD                       | YYYY-MM-DD                       |         | display format for date                                                                                                                                                             |\n| ERROR_ON_NONDETERMINISTIC_MERGE     | true                             | true                             |         | raise an error when attempting to merge-update a row that joins many rows                                                                                                           |\n| ERROR_ON_NONDETERMINISTIC_UPDATE    | false                            | false                            |         | raise an error when attempting to update a row that joins many rows                                                                                                                 |\n| LOCK_TIMEOUT                        | 43200                            | 43200                            |         | Number of seconds to wait while trying to lock a resource, before timing out                                                                                                        |\n|                                     |                                  |                                  |         | and aborting the statement. A value of 0 turns off lock waiting i.e. the                                                                                                            |\n|                                     |                                  |                                  |         | statement must acquire the lock immediately or abort. If multiple resources                                                                                                         |\n|                                     |                                  |                                  |         | need to be locked by the statement, the timeout applies separately to each                                                                                                          |\n|                                     |                                  |                                  |         | lock attempt.                                                                                                                                                                       |\n| QUERY_TAG                           |                                  |                                  |         | String (up to 2000 characters) used to tag statements executed by the session                                                                                                       |\n| QUOTED_IDENTIFIERS_IGNORE_CASE      | false                            | false                            |         | If true, the case of quoted identifiers is ignored                                                                                                                                  |\n| ROWS_PER_RESULTSET                  | 0                                | 0                                |         | maxium number of rows in a result set                                                                                                                                               |\n| STATEMENT_QUEUED_TIMEOUT_IN_SECONDS | 0                                | 0                                |         | Timeout in seconds for queued statements: statements will automatically be canceled if they are queued on a warehouse for longer than this amount of time; disabled if set to zero. |\n| STATEMENT_TIMEOUT_IN_SECONDS        | 0                                | 0                                |         | Timeout in seconds for statements: statements will automatically be canceled if they run for longer than this amount of time; disabled if set to zero.                              |\n| TIMESTAMP_DAY_IS_ALWAYS_24H         | false                            | true                             | SYSTEM  | If set, arithmetic on days always uses 24 hours per day,                                                                                                                            |\n|                                     |                                  |                                  |         | possibly not preserving the time (due to DST changes)                                                                                                                               |\n| TIMESTAMP_INPUT_FORMAT              | AUTO                             | AUTO                             |         | input format for timestamp                                                                                                                                                          |\n| TIMESTAMP_LTZ_OUTPUT_FORMAT         |                                  |                                  |         | Display format for TIMESTAMP_LTZ values. If empty, TIMESTAMP_OUTPUT_FORMAT is used.                                                                                                 |\n| TIMESTAMP_NTZ_OUTPUT_FORMAT         | YYYY-MM-DD HH24:MI:SS.FF3        | YYYY-MM-DD HH24:MI:SS.FF3        | SYSTEM  | Display format for TIMESTAMP_NTZ values. If empty, TIMESTAMP_OUTPUT_FORMAT is used.                                                                                                 |\n| TIMESTAMP_OUTPUT_FORMAT             | YYYY-MM-DD HH24:MI:SS.FF3 TZHTZM | YYYY-MM-DD HH24:MI:SS.FF3 TZHTZM | SYSTEM  | Default display format for all timestamp types.                                                                                                                                     |\n| TIMESTAMP_TYPE_MAPPING              | TIMESTAMP_NTZ                    | TIMESTAMP_NTZ                    | SYSTEM  | If TIMESTAMP type is used, what specific TIMESTAMP* type it should map to:                                                                                                          |\n|                                     |                                  |                                  |         |   TIMESTAMP_LTZ (default), TIMESTAMP_NTZ or TIMESTAMP_TZ                                                                                                                            |\n| TIMESTAMP_TZ_OUTPUT_FORMAT          |                                  |                                  |         | Display format for TIMESTAMP_TZ values. If empty, TIMESTAMP_OUTPUT_FORMAT is used.                                                                                                  |\n| TIMEZONE                            | America/Los_Angeles              | America/Los_Angeles              |         | time zone                                                                                                                                                                           |\n| TIME_INPUT_FORMAT                   | AUTO                             | AUTO                             |         | input format for time                                                                                                                                                               |\n| TIME_OUTPUT_FORMAT                  | HH24:MI:SS                       | HH24:MI:SS                       |         | display format for time                                                                                                                                                             |\n| TRANSACTION_ABORT_ON_ERROR          | false                            | false                            |         | If this parameter is true, and a statement issued within a non-autocommit                                                                                                           |\n|                                     |                                  |                                  |         | transaction returns with an error, then the non-autocommit transaction is                                                                                                           |\n|                                     |                                  |                                  |         | aborted. All statements issued inside that transaction will fail until an                                                                                                           |\n|                                     |                                  |                                  |         | commit or rollback statement is executed to close that transaction.                                                                                                                 |\n| TRANSACTION_DEFAULT_ISOLATION_LEVEL | READ COMMITTED                   | READ COMMITTED                   |         | The default isolation level when starting a starting a transaction, when no                                                                                                         |\n|                                     |                                  |                                  |         | isolation level was specified                                                                                                                                                       |\n| TWO_DIGIT_CENTURY_START             | 1970                             | 1970                             |         | For 2-digit dates, defines a century-start year.                                                                                                                                    |\n|                                     |                                  |                                  |         | For example, when set to 1980:                                                                                                                                                      |\n|                                     |                                  |                                  |         |   - parsing a string '79' will produce 2079                                                                                                                                         |\n|                                     |                                  |                                  |         |   - parsing a string '80' will produce 1980                                                                                                                                         |\n| UNSUPPORTED_DDL_ACTION              | ignore                           | ignore                           |         | The action to take upon encountering an unsupported ddl statement                                                                                                                   |\n| USE_CACHED_RESULT                   | true                             | true                             |         | If enabled, query results can be reused between successive invocations of the same query as long as the original result has not expired                                             |\n+-------------------------------------+----------------------------------+----------------------------------+---------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n\nSHOW PARAMETERS IN WAREHOUSE testwh;\n\n+-------------------------------------+--------+---------+-------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| key                                 | value  | default | level | description                                                                                                                                                                                                                   |\n|-------------------------------------+--------+---------+-------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| MAX_CONCURRENCY_LEVEL               | 8      | 8       |       | Concurrency level for SQL statements (i.e. queries and DML) executed by a warehouse cluster (used to determine when statements are queued or additional clusters are started). Small SQL statements count as a fraction of 1. |\n| STATEMENT_QUEUED_TIMEOUT_IN_SECONDS | 0      | 0       |       | Timeout in seconds for queued statements: statements will automatically be canceled if they are queued on a warehouse for longer than this amount of time; disabled if set to zero.                                           |\n| STATEMENT_TIMEOUT_IN_SECONDS        | 172800 | 172800  |       | Timeout in seconds for statements: statements are automatically canceled if they run for longer; if set to zero, max value (604800) is enforced.                                                                              |\n+-------------------------------------+--------+---------+-------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n\nUSE DATABASE testdb;\n\nSHOW PARAMETERS IN DATABASE;\n\n+-----------------------------+-------+---------+-------+------------------------------------------------------------------+\n| key                         | value | default | level | description                                                      |\n|-----------------------------+-------+---------+-------+------------------------------------------------------------------|\n| DATA_RETENTION_TIME_IN_DAYS | 1     | 1       |       | number of days to retain the old version of deleted/updated data |\n+-----------------------------+-------+---------+-------+------------------------------------------------------------------+"
},
{
    "function_name": "SHOW PACKAGES POLICIES",
    "summary": "Lists packages policy information.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-packages-policies",
    "title": "SHOW PACKAGES POLICIES",
    "description": "Lists packages policy information.",
    "syntax": "SHOW PACKAGES POLICIES [ IN\n                            {\n                              SCHEMA                   |\n                              SCHEMA <schema_name>     |\n                              <schema_name>\n                            }\n                       ]",
    "example": ""
},
{
    "function_name": "SHOW ORGANIZATION USERS",
    "summary": "Lists organization users.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-organization-users",
    "title": "SHOW ORGANIZATION USERS",
    "description": "Lists",
    "syntax": "SHOW ORGANIZATION USERS [ IN ORGANIZATION USER GROUP <org_user_group> ]",
    "example": "USE ROLE GLOBALORGADMIN;\n\nSHOW ORGANIZATION USERS;\n\nUSE ROLE ACCOUNTADMIN;\n\nSHOW ORGANIZATION USERS IN ORGANIZATION USER GROUP data_stewards;"
},
{
    "function_name": "SHOW ORGANIZATION USER GROUPS",
    "summary": "Lists organization user groups.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-organization-user-groups",
    "title": "SHOW ORGANIZATION USER GROUPS",
    "description": "Lists",
    "syntax": "SHOW ORGANIZATION USER GROUPS",
    "example": "SHOW ORGANIZATION USER GROUPS;"
},
{
    "function_name": "SHOW ORGANIZATION PROFILES",
    "summary": "Lists the organization profiles for which you have access privileges.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-organization-profiles",
    "title": "SHOW ORGANIZATION PROFILES",
    "description": "",
    "syntax": "SHOW ORGANIZATION PROFILES",
    "example": "SHOW ORGANIZATION PROFILES;\n\n+-------------------------+-----------------+---------------------+---------------------+---------------------+---------------------------+----------------------------------+---------------------+---------------------+---------------------+\n|created_on               |name             |system_generated     |state                |organization_name    |title                      |description                       |owner_contact        |approver_contact     |owner                |\n+-------------------------+-----------------+---------------------+---------------------+---------------------+---------------------------+----------------------------------+---------------------+---------------------+---------------------+\n| 2025-01-01 01:01:01.000 |ORGPROFILE       |FALSE                |ACTIVE               |TESTORG              |My Organization Profile    |Organization profile description  |test@test.com        |test@test.com        |ACCOUNTADMIN         |\n+-------------------------+-----------------+---------------------+---------------------+---------------------+---------------------------+----------------------------------+---------------------+---------------------+---------------------+"
},
{
    "function_name": "SHOW ORGANIZATION ACCOUNTS",
    "summary": "Lists the organization account of the organization.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-organization-accounts",
    "title": "SHOW ORGANIZATION ACCOUNTS",
    "description": "",
    "syntax": "SHOW ORGANIZATION ACCOUNTS [ LIKE '<pattern>' ]",
    "example": "SHOW ORGANIZATION ACCOUNTS;"
},
{
    "function_name": "SHOW OBJECTS OWNED BY APPLICATION",
    "summary": "Lists the objects owned by an app that exists outside the app.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-objects-owned-by-application",
    "title": "SHOW OBJECTS OWNED BY APPLICATION",
    "description": "",
    "syntax": "SHOW OBJECTS OWNED BY APPLICATION <app_name>",
    "example": "SHOW OBJECTS OWNED BY APPLICATION hello_snowflake_app;\n\n+---------------------------------+----------------------+---------------------+\n| created_on                      | name                 | object_type         |\n|---------------------------------|----------------------|---------------------|\n| 2024-11-20 17:56:08.887 -0800   | HELLO_SNOWFLAKE_APP  | COMPUTE_POOL        |\n+---------------------------------+----------------------+---------------------+"
},
{
    "function_name": "SHOW OBJECTS",
    "summary": "Lists the tables and views for which you have access privileges.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-objects",
    "title": "SHOW OBJECTS",
    "description": "Lists the tables and views for which you have access privileges. This command can be used to list the tables and views for a specified\ndatabase or schema (or the current database/schema for the session), or your entire account.",
    "syntax": "SHOW [ TERSE ] OBJECTS [ LIKE '<pattern>' ]\n                       [ IN\n                             {\n                               ACCOUNT                                         |\n\n                               DATABASE                                        |\n                               DATABASE <database_name>                        |\n\n                               SCHEMA                                          |\n                               SCHEMA <schema_name>                            |\n                               <schema_name>\n\n                               APPLICATION <application_name>                  |\n                               APPLICATION PACKAGE <application_package_name>  |\n                             }\n                       ]\n                       [ STARTS WITH '<name_string>' ]\n                       [ LIMIT <rows> [ FROM '<name_string>' ] ]",
    "example": "SHOW OBJECTS IN DATABASE STARTS WITH 'HT_';\n\n+-------------------------------+------------------------+---------------+----------------+-------+---------+------------+---------+-----------+--------------+----------------+-----------------+--------+-----------+------------+\n| created_on                    | name                   | database_name | schema_name    | kind  | comment | cluster_by |    rows |     bytes | owner        | retention_time | owner_role_type | budget | is_hybrid | is_dynamic |\n|-------------------------------+------------------------+---------------+----------------+-------+---------+------------+---------+-----------+--------------+----------------+-----------------+--------+-----------+------------|\n| 2024-05-13 19:08:41.946 -0700 | HT_PRECIP              | HYBRID1_DB    | HYBRID1_SCHEMA | TABLE |         |            |       0 |         0 | HYBRID1_ROLE | 1              | ROLE            | NULL   | Y         | N          |\n| 2024-08-23 11:44:13.694 -0700 | HT_SENSOR_DATA_DEVICE1 | HYBRID1_DB    | HYBRID1_SCHEMA | TABLE |         |            | 2678400 | 133920000 | HYBRID1_ROLE | 1              | ROLE            | NULL   | Y         | N          |\n| 2024-05-13 16:37:29.217 -0700 | HT_WEATHER             | HYBRID1_DB    | HYBRID1_SCHEMA | TABLE |         |            |      55 |      2985 | HYBRID1_ROLE | 1              | ROLE            | NULL   | Y         | N          |\n| 2024-07-18 12:17:27.381 -0700 | HT_WEATHER             | HYBRID1_DB    | PUBLIC         | TABLE |         |            |      55 |      3040 | ACCOUNTADMIN | 1              | ROLE            | NULL   | Y         | N          |\n+-------------------------------+------------------------+---------------+----------------+-------+---------+------------+---------+-----------+--------------+----------------+-----------------+--------+-----------+------------+"
},
{
    "function_name": "SHOW NOTIFICATION INTEGRATIONS",
    "summary": "Lists the notification integrations in your account.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-notification-integrations",
    "title": "SHOW NOTIFICATION INTEGRATIONS",
    "description": "Lists the notification integrations in your account.",
    "syntax": "SHOW NOTIFICATION INTEGRATIONS [ LIKE '<pattern>' ]",
    "example": "SHOW NOTIFICATION INTEGRATIONS;\n\n+-----------------------------+-----------------------------+--------------+---------+---------+-------------------------------+-----------+\n| name                        | type                        | category     | enabled | comment | created_on                    | direction |\n|-----------------------------+-----------------------------+--------------+---------+---------+-------------------------------+-----------|\n| MY_AZURE_INBOUND_QUEUE_INT  | QUEUE - AZURE_STORAGE_QUEUE | NOTIFICATION | true    | NULL    | 2025-03-08 11:34:55.861 -0800 | INBOUND   |\n| MY_GCP_INBOUND_QUEUE_INT    | QUEUE - GCP_PUBSUB          | NOTIFICATION | true    | NULL    | 2025-03-08 11:35:35.163 -0800 | INBOUND   |\n| MY_GCP_OUTBOUND_QUEUE_INT   | QUEUE - GCP_PUBSUB          | NOTIFICATION | true    | NULL    | 2025-03-08 11:37:06.487 -0800 | OUTBOUND  |\n| MY_AWS_OUTBOUND_QUEUE_INT   | QUEUE - AWS_SNS             | NOTIFICATION | true    | NULL    | 2025-03-08 11:36:13.072 -0800 | OUTBOUND  |\n| MY_EMAIL_INT                | EMAIL                       | NOTIFICATION | true    | NULL    | 2025-03-08 11:38:55.866 -0800 | OUTBOUND  |\n| MY_AZURE_OUTBOUND_QUEUE_INT | QUEUE - AZURE_EVENT_GRID    | NOTIFICATION | true    | NULL    | 2025-03-08 11:36:40.822 -0800 | OUTBOUND  |\n| MY_WEBHOOK_INT              | WEBHOOK                     | NOTIFICATION | true    | NULL    | 2025-03-08 11:40:17.336 -0800 | OUTBOUND  |\n+-----------------------------+-----------------------------+--------------+---------+---------+-------------------------------+-----------+"
},
{
    "function_name": "SHOW NOTEBOOKS",
    "summary": "Lists the notebooks for which you have access privileges.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-notebooks",
    "title": "SHOW NOTEBOOKS",
    "description": "",
    "syntax": "SHOW NOTEBOOKS [ LIKE '<pattern>' ]\n               [ IN\n                     {\n                       ACCOUNT                  |\n\n                       DATABASE                 |\n                       DATABASE <database_name> |\n\n                       SCHEMA                   |\n                       SCHEMA <schema_name>     |\n                       <schema_name>\n                     }\n               ]\n               [ STARTS WITH '<name_string>' ]\n               [ LIMIT <rows> ]\n               [ LIMIT <rows> [ FROM '<name_string>' ] ]",
    "example": "SHOW NOTEBOOKS;\n\nSHOW NOTEBOOKS STARTS WITH 'test';\n\n+--------------------------------+--------------+---------------+----------------------------------------------------------------------------------+--------+-----------------+----------------------+-----------------+------------------------------+\n| created_on                     | name         | database_name | schema_name | comment                                                            | owner  | query_warehouse | url_id               | owner_role_type | code_warehouse               |\n+--------------------------------+--------------+---------------+----------------------------------------------------------------------------------+--------+-----------------+----------------------+-----------------+------------------------------+\n|  2024-03-20 06:37:08.402 +0000 | test_notebook| PUBLIC        | PUBLIC      | {\"lastUpdatedUser\":\"309334439262\",\"lastUpdatedTime\":1711566800002} | PUBLIC | HLEVE1          | 2mbdchin3kn2tlzgqtca | ROLE            | SYSTEM$STREAMLIT_NOTEBOOK_WH |\n+--------------------------------+--------------+---------------+-------------+--------------------------------------------------------------------+--------+-----------------+----------------------+-----------------+------------------------------+"
},
{
    "function_name": "SHOW NETWORK RULES",
    "summary": "Lists all network rules defined in the system.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-network-rules",
    "title": "SHOW NETWORK RULES",
    "description": "Lists all network rules defined in the system.",
    "syntax": "SHOW NETWORK RULES [ LIKE '<pattern>' ]\n                   [ IN { ACCOUNT | DATABASE [ <db_name> ] | [ SCHEMA ] [ <schema_name> ] } ]\n                   [ STARTS WITH '<name_string>' ]\n                   [ LIMIT <rows> [ FROM '<name_string>' ] ]",
    "example": "SHOW NETWORK RULES;"
},
{
    "function_name": "SHOW NETWORK POLICIES",
    "summary": "Lists all network policies defined in the system.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-network-policies",
    "title": "SHOW NETWORK POLICIES",
    "description": "Lists all network policies defined in the system.",
    "syntax": "SHOW NETWORK POLICIES",
    "example": "SHOW NETWORK POLICIES;\n\n+-------------------------------+----------+---------+----------------------------+----------------------------+---------------------------------------------------------------------+\n| created_on                    | name     | comment | entries_in_allowed_ip_list | entries_in_blocked_ip_list | entries_in_allowed_network_rules | entries_in_blocked_network_rules |\n|-------------------------------+----------+---------+----------------------------+----------------------------+----------------------------------+----------------------------------|\n| 2016-04-29 13:22:34.034 -0700 | Policy1  |         |                          2 |                          1 |                                 0|                                0 |\n| 2016-04-28 17:31:59.269 -0700 | Policy2  |         |                          1 |                          0 |                                 0|                                0 |\n+-------------------------------+----------+---------+----------------------------+----------------------------+----------------------------------+----------------------------------+"
},
{
    "function_name": "SHOW MODELS",
    "summary": "Lists the machine learning models that you have privileges to access.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-models",
    "title": "SHOW MODELS",
    "description": "Lists the machine learning models that you have privileges to access.",
    "syntax": "SHOW MODELS [ LIKE '<pattern>' ]\n            [ IN { DATABASE [ <db_name> ] | SCHEMA [ <schema_name> ] } ]",
    "example": ""
},
{
    "function_name": "SHOW MODEL MONITORS",
    "summary": "Lists all model monitor that you can access in the current or specified schema and displays information about each one.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-model-monitors",
    "title": "SHOW MODEL MONITORS",
    "description": "Lists all",
    "syntax": "SHOW MODEL MONITORS\n[ LIKE <pattern> ]\n[ IN\n    {\n      ACCOUNT                  |\n\n      DATABASE                 |\n      DATABASE <database_name> |\n\n      SCHEMA                   |\n      SCHEMA <schema_name>     |\n      <schema_name>\n    }\n ]",
    "example": ""
},
{
    "function_name": "SHOW MFA METHODS",
    "summary": "Lists the second factors of authentication that a user enrolled in multi-factor authentication uses to sign in to Snowflake.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-mfa-methods",
    "title": "SHOW MFA METHODS",
    "description": "Lists the",
    "syntax": "SHOW MFA METHODS [ FOR USER <user> ]",
    "example": "USE ROLE ACCOUNTADMIN;\n\nSHOW MFA METHODS FOR USER joe;\n\nSHOW MFA METHODS;"
},
{
    "function_name": "SHOW MATERIALIZED VIEWS",
    "summary": "Lists the materialized views that you have privileges to access.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-materialized-views",
    "title": "SHOW MATERIALIZED VIEWS",
    "description": "",
    "syntax": "SHOW MATERIALIZED VIEWS [ LIKE '<pattern>' ]\n                        [ IN\n                             {\n                               ACCOUNT                                         |\n\n                               DATABASE                                        |\n                               DATABASE <database_name>                        |\n\n                               SCHEMA                                          |\n                               SCHEMA <schema_name>                            |\n                               <schema_name>\n\n                               APPLICATION <application_name>                  |\n                               APPLICATION PACKAGE <application_package_name>  |\n                             }\n                        ]",
    "example": "SHOW MATERIALIZED VIEWS;\n\nSHOW MATERIALIZED VIEWS LIKE 'mv1%';\n\n+-------------------------------+------+----------+---------------+-------------+------------+------+-------+----------------------+--------------------+-------------------+-------------------------------+--------------+----------+---------+----------------+-----------+---------+--------------------------------------------+-----------+----------------------+-----------------+\n| created_on                    | name | reserved | database_name | schema_name | cluster_by | rows | bytes | source_database_name | source_schema_name | source_table_name | refreshed_on                  | compacted_on | owner    | invalid | invalid_reason | behind_by | comment | text                                       | is_secure | automatic_clustering | owner_role_type |\n|-------------------------------+------+----------+---------------+-------------+------------+------+-------+----------------------+--------------------+-------------------+-------------------------------+--------------+----------+---------+----------------+-----------+---------+--------------------------------------------+-----------|----------------------+-----------------|\n| 2018-10-05 17:13:17.579 -0700 | MV1  |          | TEST_DB1      | PUBLIC      |            |    0 |     0 | TEST_DB1             | PUBLIC             | INVENTORY         | 2018-10-05 17:13:50.373 -0700 | NULL         | SYSADMIN | false   | NULL           | 0s        |         | CREATE OR REPLACE MATERIALIZED VIEW mv1 AS | false     | OFF                  | ROLE            |\n|                               |      |          |               |             |            |      |       |                      |                    |                   |                               |              |          |         |                |           |         |       SELECT ID, price FROM inventory;     |           |                      |                 |          |\n+-------------------------------+------+----------+---------------+-------------+------------+------+-------+----------------------+--------------------+-------------------+-------------------------------+--------------+----------+---------+----------------+-----------+---------+--------------------------------------------+-----------+----------------------+-----------------+"
},
{
    "function_name": "SHOW MASKING POLICIES",
    "summary": "Lists masking policy information, including the creation date, database and schema names, owner, and any available comments.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-masking-policies",
    "title": "SHOW MASKING POLICIES",
    "description": "",
    "syntax": "SHOW MASKING POLICIES  [ LIKE '<pattern>' ]\n                       [ IN\n                            {\n                              ACCOUNT                                         |\n\n                              DATABASE                                        |\n                              DATABASE <database_name>                        |\n\n                              SCHEMA                                          |\n                              SCHEMA <schema_name>                            |\n                              <schema_name>\n\n                              APPLICATION <application_name>                  |\n                              APPLICATION PACKAGE <application_package_name>  |\n                            }\n                       ]",
    "example": ""
},
{
    "function_name": "SHOW MANAGED ACCOUNTS",
    "summary": "Lists the managed accounts created for your account.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-managed-accounts",
    "title": "SHOW MANAGED ACCOUNTS",
    "description": "",
    "syntax": "SHOW MANAGED ACCOUNTS [ LIKE '<pattern>' ]",
    "example": "SHOW MANAGED ACCOUNTS;\n\n+--------------+-------+-----------+---------+-------------------------------+--------------------------------------------+----------------------------------------+-----------+---------+----------------+\n| name         | cloud | region    | locator | created_on                    | url                                        |  account_locator_url                   | is_reader | comment |  region_group  |\n|--------------+-------+-----------+---------+-------------------------------+--------------------------------------------+----------------------------------------+-----------+---------|----------------|\n| ACCT1        | aws   | us-west-2 | RE47190 | 2018-05-30 14:38:54.479 -0700 | https://bazco-acct1.snowflakecomputing.com  |  https://re47190.snowflakecomputing.com | true    |         |     PUBLIC     |\n+--------------+-------+-----------+---------+-------------------------------+--------------------------------------------+----------------------------------------+-----------+---------+----------------+"
},
{
    "function_name": "SHOW LOCKS",
    "summary": "Lists all running transactions that have locks on resources.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-locks",
    "title": "SHOW LOCKS",
    "description": "Lists all running transactions that have locks on resources. The command can be used to show locks for the current user in all the\nuser’s sessions or all users in the account.",
    "syntax": "SHOW LOCKS [ IN ACCOUNT ]",
    "example": "SHOW LOCKS;\n\n+---------------------------+------------+---------------------+-------------------------------+---------+-------------------------------+--------------------------------------+\n| resource                  | type       |         transaction | transaction_started_on        | status  | acquired_on                   | query_id                             |\n|---------------------------+------------+---------------------+-------------------------------+---------+-------------------------------+--------------------------------------|\n| CALIBAN_DB.PUBLIC.WEATHER | PARTITIONS | 1721330303831000000 | 2024-07-18 12:18:23.831 -0700 | HOLDING | 2024-07-18 12:18:49.832 -0700 | 01b5c1c6-0002-8691-0000-a9950068a0c6 |\n+---------------------------+------------+---------------------+-------------------------------+---------+-------------------------------+--------------------------------------+\n\nSHOW LOCKS;\n\n+---------------------+------+---------------------+-------------------------------+---------+-------------+--------------------------------------+\n| resource            | type |         transaction | transaction_started_on        | status  | acquired_on | query_id                             |\n|---------------------+------+---------------------+-------------------------------+---------+-------------+--------------------------------------|\n| 1721165584820000000 | ROW  | 1721165584820000000 | 2024-07-16 14:33:04.820 -0700 | HOLDING | NULL        |                                      |\n| 1721165584820000000 | ROW  | 1721165674582000000 | 2024-07-16 14:34:34.582 -0700 | WAITING | NULL        | 01b5b715-0002-852b-0000-a99500665352 |\n+---------------------+------+---------------------+-------------------------------+---------+-------------+--------------------------------------+"
},
{
    "function_name": "SHOW LISTINGS",
    "summary": "Lists the listings that you have privileges to access.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-listings",
    "title": "SHOW LISTINGS",
    "description": "Lists the",
    "syntax": "SHOW LISTINGS [ LIKE '<pattern>' ]\n              [ STARTS WITH '<name_string>' ]\n              [ LIMIT <rows> [ FROM '<name_string>' ] ]",
    "example": "SHOW LISTINGS LIKE 'MYLISTING%'\n\nSHOW LISTINGS LIMIT 10 FROM 'MYLISTING%'"
},
{
    "function_name": "SHOW JOIN POLICIES",
    "summary": "Lists information about existing join policies, including the creation date, database and schema names, owner, and any available comments.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-join-policies",
    "title": "SHOW JOIN POLICIES",
    "description": "",
    "syntax": "SHOW JOIN POLICIES  [ LIKE '<pattern>' ]\n                           [ IN\n                               {\n                                 ACCOUNT |\n                                 DATABASE [ <database_name> ] |\n                                 SCHEMA [ <schema_name> ] |\n                               }\n                           ]",
    "example": ""
},
{
    "function_name": "SHOW INTEGRATIONS",
    "summary": "Lists the integrations in your account.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-integrations",
    "title": "SHOW INTEGRATIONS",
    "description": "Lists the integrations in your account.",
    "syntax": "SHOW [ { API | CATALOG | EXTERNAL ACCESS | NOTIFICATION | SECURITY | STORAGE } ] INTEGRATIONS [ LIKE '<pattern>' ]",
    "example": "SHOW NOTIFICATION INTEGRATIONS;\n\nSHOW INTEGRATIONS LIKE 'line%';"
},
{
    "function_name": "SHOW INDEXES",
    "summary": "Lists all the indexes in your account for which you have access privileges.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-indexes",
    "title": "SHOW INDEXES",
    "description": "",
    "syntax": "SHOW [ TERSE ] INDEXES\n  [ LIKE '<pattern>' ]\n  [ IN { ACCOUNT | DATABASE [ <database_name> ] | SCHEMA [ <schema_name> ] | TABLE | TABLE <table_name> } ]\n  [ STARTS WITH '<name_string>' ]\n  [ LIMIT <rows> [ FROM '<name_string>' ] ]",
    "example": "SHOW TERSE INDEXES LIKE '%DEVICE%';\n\n+-------------------------------+---------------------------------------+-----------------+---------------+-------------+\n| created_on                    | name                                  | kind            | database_name | schema_name |\n|-------------------------------+---------------------------------------+-----------------+---------------+-------------|\n| 2024-08-29 12:24:49.197 -0700 | SYS_INDEX_SENSOR_DATA_DEVICE1_PRIMARY | KEY_VALUE_INDEX | HT_SENSORS    | HT_SCHEMA   |\n| 2024-08-29 12:24:49.197 -0700 | DEVICE_IDX                            | KEY_VALUE_INDEX | HT_SENSORS    | HT_SCHEMA   |\n| 2024-08-29 14:03:36.537 -0700 | SYS_INDEX_SENSOR_DATA_DEVICE2_PRIMARY | KEY_VALUE_INDEX | HT_SENSORS    | HT_SCHEMA   |\n| 2024-08-29 14:03:36.537 -0700 | DEVICE_IDX                            | KEY_VALUE_INDEX | HT_SENSORS    | HT_SCHEMA   |\n+-------------------------------+---------------------------------------+-----------------+---------------+-------------+\n\nSHOW INDEXES\n  ->> SELECT \"name\",\n             \"is_unique\",\n             \"table\",\n             \"columns\",\n             \"included_columns\",\n             \"database_name\",\n             \"schema_name\"\n        FROM $1\n        WHERE \"included_columns\" != '[]';\n\n+------------+-----------+---------------------+-------------+------------------+---------------+-------------+\n| name       | is_unique | table               | columns     | included_columns | database_name | schema_name |\n|------------+-----------+---------------------+-------------+------------------+---------------+-------------|\n| DEVICE_IDX | N         | SENSOR_DATA_DEVICE2 | [DEVICE_ID] | [TEMPERATURE]    | HT_SENSORS    | HT_SCHEMA   |\n+------------+-----------+---------------------+-------------+------------------+---------------+-------------+"
},
{
    "function_name": "SHOW IMAGES IN IMAGE REPOSITORY",
    "summary": "Lists the images in an image repository.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-images-in-image-repository",
    "title": "SHOW IMAGES IN IMAGE REPOSITORY",
    "description": "",
    "syntax": "SHOW IMAGES IN IMAGE REPOSITORY <name>",
    "example": "SHOW IMAGES IN IMAGE REPOSITORY tutorial_db.data_schema.tutorial_repository;\n\n+-------------------------------+-----------------------+--------+-------------------------------------------------------------------------+--------------------------------------------------------------------------+\n| created_on                    | image_name            | tags   | digest                                                                  | image_path                                                               |\n|-------------------------------+-----------------------+--------+-------------------------------------------------------------------------+--------------------------------------------------------------------------|\n| 2024-04-18 13:51:35.000 -0700 | my_echo_service_image | latest | sha256:70421668b2635b2996c6d5bc80627cf6d98c0716948b5f60d198d6411d4b4681 | tutorial_db/data_schema/tutorial_repository/my_echo_service_image:latest |\n+-------------------------------+-----------------------+--------+-------------------------------------------------------------------------+--------------------------------------------------------------------------+"
},
{
    "function_name": "SHOW IMAGE REPOSITORIES",
    "summary": "Lists the image repositories for which you have access privileges.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-image-repositories",
    "title": "SHOW IMAGE REPOSITORIES",
    "description": "",
    "syntax": "SHOW IMAGE REPOSITORIES [ LIKE '<pattern>' ]\n           [ IN\n                {\n                  ACCOUNT                  |\n\n                  DATABASE                 |\n                  DATABASE <database_name> |\n\n                  SCHEMA                   |\n                  SCHEMA <schema_name>     |\n                  <schema_name>\n                }\n           ]",
    "example": "SHOW IMAGE REPOSITORIES;\n\nSHOW IMAGE REPOSITORIES IN SCHEMA;\n\nSHOW IMAGE REPOSITORIES IN SCHEMA sc1;\n\nSHOW IMAGE REPOSITORIES IN DATABASE;\n\nSHOW IMAGE REPOSITORIES IN DATABASE db1;\n\nSHOW IMAGE REPOSITORIES IN ACCOUNT;\n\n+-------------------------------+---------------------+---------------+-------------+-----------------------------------------------------------------------------------------------------------------------+-----------+-----------------+---------+---------------+\n| created_on                    | name                | database_name | schema_name | repository_url                                                                                                        | owner     | owner_role_type | comment | encryption    |\n|-------------------------------+---------------------+---------------+-------------+-----------------------------------------------------------------------------------------------------------------------+-----------+-----------------+---------+---------------|\n| 2024-04-18 13:41:53.481 -0700 | TUTORIAL_REPOSITORY | TUTORIAL_DB   | DATA_SCHEMA | orgname-acctname.registry-dev.snowflakecomputing.com/tutorial_db/data_schema/tutorial_repository                      | TEST_ROLE | ROLE            |         | SNOWFLAKE_SSE |\n+-------------------------------+---------------------+---------------+-------------+-----------------------------------------------------------------------------------------------------------------------+-----------+-----------------+---------+---------------+"
},
{
    "function_name": "SHOW ICEBERG TABLES",
    "summary": "Lists the Apache Iceberg™ tables for which you have access privileges.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-iceberg-tables",
    "title": "SHOW ICEBERG TABLES",
    "description": "Lists the",
    "syntax": "SHOW [ TERSE ] [ ICEBERG ] TABLES [ LIKE '<pattern>' ]\n                                  [ IN\n                                        {\n                                          ACCOUNT                  |\n\n                                          DATABASE                 |\n                                          DATABASE <database_name> |\n\n                                          SCHEMA                   |\n                                          SCHEMA <schema_name>     |\n                                          <schema_name>\n                                        }\n                                  ]\n                                  [ STARTS WITH '<name_string>' ]\n                                  [ LIMIT <rows> [ FROM '<name_string>' ] ]",
    "example": "SHOW ICEBERG TABLES LIKE 'glue%' IN tpch.public;"
},
{
    "function_name": "SHOW HYBRID TABLES",
    "summary": "Lists the hybrid tables for which you have access privileges.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-hybrid-tables",
    "title": "SHOW HYBRID TABLES",
    "description": "",
    "syntax": "SHOW [ TERSE ] [ HYBRID ] TABLES [ LIKE '<pattern>' ]\n                                 [ IN { ACCOUNT | DATABASE [ <db_name> ] | SCHEMA [ <schema_name> ] } ]\n                                 [ STARTS WITH '<name_string>' ]\n                                 [ LIMIT <rows> [ FROM '<name_string>' ] ]",
    "example": "SHOW HYBRID TABLES LIKE 'product_%' IN mydb.myschema;"
},
{
    "function_name": "SHOW GRANTS",
    "summary": "Lists all access control privileges that have been explicitly granted to roles, users, and shares.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-grants",
    "title": "SHOW GRANTS",
    "description": "Lists all access control privileges that have been explicitly granted to roles, users, and shares.",
    "syntax": "SHOW GRANTS [ LIMIT <rows> ]\n\nSHOW GRANTS ON ACCOUNT [ LIMIT <rows> ]\n\nSHOW GRANTS ON <object_type> <object_name> [ LIMIT <rows> ]\n\nSHOW GRANTS TO {\n  APPLICATION <app_name>\n  | APPLICATION ROLE [ <app_name>. ]<app_role_name>\n  | SERVICE ROLE <service_name>!<service_role_name>\n  | <class_name> ROLE <instance_name>!<instance_role_name>\n  | ROLE <role_name>\n  | SHARE <share_name> [ IN APPLICATION PACKAGE <app_package_name> ]\n  | USER <user_name>\n} [ LIMIT <rows> ]\n\nSHOW GRANTS OF {\n  APPLICATION ROLE <app_role_name>\n  | SERVICE ROLE <service_name>!<service_role_name>\n  | ROLE <role_name>\n} [ LIMIT <rows> ]\n\nSHOW GRANTS OF SHARE <share_name> [ LIMIT <rows> ]\n\nSHOW FUTURE GRANTS IN SCHEMA { <schema_name> } [ LIMIT <rows> ]\n\nSHOW FUTURE GRANTS IN DATABASE { <database_name> } [ LIMIT <rows> ]\n\nSHOW FUTURE GRANTS TO ROLE <role_name> [ LIMIT <rows> ]\n\nSHOW FUTURE GRANTS TO DATABASE ROLE <database_role_name>",
    "example": "SHOW GRANTS ON DATABASE sales;\n\n+---------------------------------+-----------+------------+------------+------------+--------------+--------------+----------------------+--------------+\n| created_on                      | privilege | granted_on | name       | granted_to | grantee_name | grant_option | granted_by_role_type | granted_by   |\n+---------------------------------+-----------+------------+------------+------------+--------------+--------------+----------------------+--------------+\n| Thu, 07 Jul 2016 05:22:29 -0700 | OWNERSHIP | DATABASE   | REALESTATE | ROLE       | ACCOUNTADMIN | true         | ROLE                 | ACCOUNTADMIN |\n| Thu, 07 Jul 2016 12:14:12 -0700 | USAGE     | DATABASE   | REALESTATE | ROLE       | PUBLIC       | false        | ROLE                 | ACCOUNTADMIN |\n+---------------------------------+-----------+------------+------------+------------+--------------+--------------+----------------------+--------------+\n\nSHOW GRANTS TO ROLE analyst;\n\n+---------------------------------+------------------+------------+------------+------------+--------------+--------------+------------+\n| created_on                      | privilege        | granted_on | name       | granted_to | grantee_name | grant_option | granted_by |\n|---------------------------------+------------------+------------+------------+------------+--------------+--------------+------------+\n| Wed, 17 Dec 2014 18:19:37 -0800 | CREATE WAREHOUSE | ACCOUNT    | DEMOENV    | ROLE       |  ANALYST     | false        | SYSADMIN   |\n+---------------------------------+------------------+------------+------------+------------+--------------+--------------+------------+\n\nSHOW GRANTS TO ROLE public;\n\n+---------------------------------+-----------+---------------+-----------------------------------+------------+--------------+--------------+------------+\n| created_on                      | privilege | granted_on    | name                              | granted_to | grantee_name | grant_option | granted_by |\n|---------------------------------+-----------+---------------+-----------------------------------+------------+--------------+--------------+------------|\n| ...                             |           |               |                                   |            |              |              |            |\n|---------------------------------+-----------+---------------+-----------------------------------+------------+--------------+--------------+------------+\n| 2023-08-18 13:33:01.156 -0700   | USAGE     | DATABASE_ROLE | ALERT_VIEWER                      | ROLE       | PUBLIC       | false        |            |\n+---------------------------------+-----------+---------------+-----------------------------------+------------+--------------+--------------+------------+\n| 2023-08-18 13:33:01.156 -0700   | USAGE     | DATABASE_ROLE | CLASSIFICATION_VIEWER             | ROLE       | PUBLIC       | false        |            |\n+---------------------------------+-----------+---------------+-----------------------------------+------------+--------------+--------------+------------+\n| 2023-08-18 13:33:01.156 -0700   | USAGE     | DATABASE_ROLE | CORE_VIEWER                       | ROLE       | PUBLIC       | false        |            |\n+---------------------------------+-----------+---------------+-----------------------------------+------------+--------------+--------------+------------+\n| 2023-08-18 13:33:01.156 -0700   | USAGE     | DATABASE_ROLE | DATA_PRIVACY_VIEWER               | ROLE       | PUBLIC       | false        |            |\n+---------------------------------+-----------+---------------+-----------------------------------+------------+--------------+-------- -----+------------+\n| 2023-08-18 13:33:01.156 -0700   | USAGE     | DATABASE_ROLE | ML_USER                           | ROLE       | PUBLIC       | false        |            |\n+---------------------------------+-----------+---------------+-----------------------------------+------------+--------------+--------------+------------+\n| 2023-08-18 13:33:01.156 -0700   | USAGE     | DATABASE_ROLE | MONITORING_VIEWER                 | ROLE       | PUBLIC       | false        |            |\n+---------------------------------+-----------+---------------+-----------------------------------+------------+--------------+--------------+------------+\n| 2023-08-18 13:33:01.156 -0700   | USAGE     | DATABASE_ROLE | NOTIFICATION_VIEWER               | ROLE       | PUBLIC       | false        |            |\n+---------------------------------+-----------+---------------+-----------------------------------+------------+--------------+--------------+------------+\n| 2023-08-18 13:33:01.156 -0700   | USAGE     | DATABASE_ROLE | SNOWFLAKE_TEMPLATE_SNOWGIT_VIEWER | ROLE       | PUBLIC       | false        |            |\n+---------------------------------+-----------+---------------+-----------------------------------+------------+--------------+--------------+------------+\n| 2023-08-18 13:33:01.156 -0700   | USAGE     | DATABASE_ROLE | SPCS_REGISTRY_VIEWER              | ROLE       | PUBLIC       | false        |            |\n+---------------------------------+-----------+---------------+-----------------------------------+------------+--------------+--------------+------------+\n| ...                             |           |               |                                   |            |              |              |            |\n+---------------------------------+-----------+---------------+-----------------------------------+------------+--------------+--------------+------------+\n\nSHOW GRANTS TO USER user1;\n\n+-------------------------------+-----------+------------+---------------------------+-----------+------------+--------------+--------------+---------------+\n| created_on                    | privilege | granted_on | name                      |  role     | granted_to | grantee_name | grant_option | granted_by    |\n|-------------------------------+-----------+------------+---------------------------+-----------+------------+--------------+------------------------------|\n| 2025-05-07 09:08:43.773 -0800 | USAGE     | DATABASE   | test_db                   | null      | USER       | user1        | false        | SECURITYADMIN |\n| 2025-05-07 09:08:55.253 -0800 | USAGE     | SCHEMA     | test_db.test_sch          | null      | USER       | user1        | false        | SECURITYADMIN |\n| 2025-05-07 09:08:55.253 -0800 | SELECT    | TABLE      | test_db.test_sch.test_tbl | null      | USER       | user1        | false        | SECURITYADMIN |\n| 2025-05-07 09:08:34.838 -0800 | USAGE     | WAREHOUSE  | test_wh                   | null      | USER       | user1        | false        | SECURITYADMIN |\n+-------------------------------+-----------+------------+---------------------------+-----------+------------+--------------+--------------+---------------+\n\nSHOW GRANTS OF ROLE analyst;\n\n+---------------------------------+---------+------------+--------------+---------------+\n| created_on                      | role    | granted_to | grantee_name | granted_by    |\n|---------------------------------+---------+------------+--------------+---------------|\n| Tue, 05 Jul 2016 16:16:34 -0700 | ANALYST | ROLE       | ANALYST_US   | SECURITYADMIN |\n| Tue, 05 Jul 2016 16:16:34 -0700 | ANALYST | ROLE       | DBA          | SECURITYADMIN |\n| Fri, 08 Jul 2016 10:21:30 -0700 | ANALYST | USER       | JOESM        | SECURITYADMIN |\n+---------------------------------+---------+------------+--------------+---------------+\n\nSHOW FUTURE GRANTS IN SCHEMA sales.public;\n\n+-------------------------------+-----------+----------+---------------------------+----------+-----------------------+--------------+\n| created_on                    | privilege | grant_on | name                      | grant_to | grantee_name          | grant_option |\n|-------------------------------+-----------+----------+---------------------------+----------+-----------------------+--------------|\n| 2018-12-21 09:22:26.946 -0800 | INSERT    | TABLE    | SALES.PUBLIC.<TABLE>      | ROLE     | ROLE1                 | false        |\n| 2018-12-21 09:22:26.946 -0800 | SELECT    | TABLE    | SALES.PUBLIC.<TABLE>      | ROLE     | ROLE1                 | false        |\n+-------------------------------+-----------+----------+---------------------------+----------+-----------------------+--------------+\n\nSHOW GRANTS TO SNOWFLAKE.CORE.BUDGET ROLE cost.budgets.my_budget!ADMIN;\n\n+-------------------------------+-----------+------------+----------------------------------------------------------------------------------------------------------------------------------------+\n| created_on                    | privilege | granted_on | name                                                                                                                                   |\n+-------------------------------+-----------+------------+----------------------------------------------------------------------------------------------------------------------------------------+\n| 2023-10-31 15:57:41.489 +0000 | USAGE     | ROLE       | SNOWFLAKE.CORE.BUDGET!ADMIN                                                                                                            |\n| 2023-09-25 22:56:12.798 +0000 | USAGE     | PROCEDURE  | SNOWFLAKE.CORE.BUDGET!ACTIVATE():VARCHAR(16777216)                                                                                     |\n| 2023-09-25 22:56:13.304 +0000 | USAGE     | PROCEDURE  | SNOWFLAKE.CORE.BUDGET!ADD_RESOURCE(TARGET_REF VARCHAR):VARCHAR(16777216)                                                               |\n| 2023-09-25 22:56:12.863 +0000 | USAGE     | PROCEDURE  | SNOWFLAKE.CORE.BUDGET!GET_ACTIVATION_DATE():DATE                                                                                       |\n| 2023-09-25 22:56:12.412 +0000 | USAGE     | PROCEDURE  | SNOWFLAKE.CORE.BUDGET!GET_BUDGET_NAME():VARCHAR(16777216)                                                                              |\n| 2023-09-25 22:56:11.510 +0000 | USAGE     | PROCEDURE  | SNOWFLAKE.CORE.BUDGET!GET_CONFIG():TABLE: ()                                                                                           |\n| 2023-09-25 22:56:13.432 +0000 | USAGE     | PROCEDURE  | SNOWFLAKE.CORE.BUDGET!GET_LINKED_RESOURCES():TABLE: ()                                                                                 |\n| 2023-09-25 22:56:11.582 +0000 | USAGE     | PROCEDURE  | SNOWFLAKE.CORE.BUDGET!GET_MEASUREMENT_TABLE():TABLE: ()                                                                                |\n| 2023-09-25 22:56:12.153 +0000 | USAGE     | PROCEDURE  | SNOWFLAKE.CORE.BUDGET!GET_NOTIFICATION_EMAIL():VARCHAR(16777216)                                                                       |\n| 2023-09-25 22:56:12.016 +0000 | USAGE     | PROCEDURE  | SNOWFLAKE.CORE.BUDGET!GET_NOTIFICATION_INTEGRATION_NAME():VARCHAR(16777216)                                                            |\n| 2023-09-25 22:56:12.286 +0000 | USAGE     | PROCEDURE  | SNOWFLAKE.CORE.BUDGET!GET_NOTIFICATION_MUTE_FLAG():VARCHAR(16777216)                                                                   |\n| 2023-09-25 22:56:13.068 +0000 | USAGE     | PROCEDURE  | SNOWFLAKE.CORE.BUDGET!GET_SERVICE_TYPE_USAGE(SERVICE_TYPE VARCHAR):TABLE: ()                                                           |\n| 2023-09-25 22:56:13.245 +0000 | USAGE     | PROCEDURE  | SNOWFLAKE.CORE.BUDGET!GET_SERVICE_TYPE_USAGE(SERVICE_TYPE VARCHAR, TIME_DEPART VARCHAR, USER_TIMEZONE VARCHAR, TIME_LOWER_BOUND VARCHA |\n| 2023-09-25 22:56:12.595 +0000 | USAGE     | PROCEDURE  | SNOWFLAKE.CORE.BUDGET!GET_SPENDING_HISTORY():TABLE: ()                                                                                 |\n| 2023-09-25 22:56:12.732 +0000 | USAGE     | PROCEDURE  | SNOWFLAKE.CORE.BUDGET!GET_SPENDING_HISTORY(TIME_LOWER_BOUND VARCHAR, TIME_UPPER_BOUND VARCHAR):TABLE: ()                               |\n| 2023-09-25 22:56:11.716 +0000 | USAGE     | PROCEDURE  | SNOWFLAKE.CORE.BUDGET!GET_SPENDING_LIMIT():NUMBER(38,0)                                                                                |\n| 2023-09-25 22:56:13.367 +0000 | USAGE     | PROCEDURE  | SNOWFLAKE.CORE.BUDGET!REMOVE_RESOURCE(TARGET_REF VARCHAR):VARCHAR(16777216)                                                            |\n| 2023-09-25 22:56:11.856 +0000 | USAGE     | PROCEDURE  | SNOWFLAKE.CORE.BUDGET!SET_EMAIL_NOTIFICATIONS(NOTIFICATION_CHANNEL_NAME VARCHAR, EMAIL VARCHAR):VARCHAR(16777216)                      |\n| 2023-09-25 22:56:12.349 +0000 | USAGE     | PROCEDURE  | SNOWFLAKE.CORE.BUDGET!SET_NOTIFICATION_MUTE_FLAG(USER_MUTE_FLAG BOOLEAN):VARCHAR(16777216)                                             |\n| 2023-09-25 22:56:11.780 +0000 | USAGE     | PROCEDURE  | SNOWFLAKE.CORE.BUDGET!SET_SPENDING_LIMIT(SPENDING_LIMIT FLOAT):VARCHAR(16777216)                                                       |\n| 2023-09-25 22:56:12.475 +0000 | USAGE     | PROCEDURE  | SNOWFLAKE.CORE.BUDGET!SET_TASK_SCHEDULE(NEW_SCHEDULE VARCHAR):VARCHAR(16777216)                                                        |\n+-------------------------------+-----------+------------+----------------------------------------------------------------------------------------------------------------------------------------+"
},
{
    "function_name": "SHOW GLOBAL ACCOUNTS",
    "summary": "Lists all the accounts in your organization that are enabled for replication and indicates the Snowflake Region in which each account is located.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-global-accounts",
    "title": "SHOW GLOBAL ACCOUNTS",
    "description": "",
    "syntax": "SHOW GLOBAL ACCOUNTS [ LIKE '<pattern>' ]",
    "example": "SHOW GLOBAL ACCOUNTS LIKE 'myaccount%';"
},
{
    "function_name": "SHOW GIT TAGS",
    "summary": "Lists the tags in the specified Snowflake Git repository clone.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-git-tags",
    "title": "SHOW GIT TAGS",
    "description": "Lists the tags in the specified Snowflake",
    "syntax": "SHOW GIT TAGS [ LIKE '<pattern>' ] IN [ GIT REPOSITORY ] <repository_name>",
    "example": "SHOW GIT TAGS IN snowflake_extensions;\n\n-----------------------------------------------------------------------------------------------------------------------------------------------\n| name    | path          | commit_hash                              | author                                     | message                   |\n-----------------------------------------------------------------------------------------------------------------------------------------------\n| example | /tags/example | 16e262d401297cd097d5d6c266c80ff9f7e1e4be | Gladys Kravits (gladyskravits@example.com) | Example code for preview. |\n-----------------------------------------------------------------------------------------------------------------------------------------------"
},
{
    "function_name": "SHOW GIT REPOSITORIES",
    "summary": "Lists the Git repository clones that you have privileges to access.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-git-repositories",
    "title": "SHOW GIT REPOSITORIES",
    "description": "Lists the",
    "syntax": "SHOW GIT REPOSITORIES [ LIKE '<pattern>' ]\n  [ IN\n      {\n        ACCOUNT                  |\n\n        DATABASE                 |\n        DATABASE <database_name> |\n\n        SCHEMA                   |\n        SCHEMA <schema_name>     |\n        <schema_name>\n      }\n  ]\n  [ LIMIT <rows> [ FROM '<name_string>' ] ]",
    "example": "SHOW GIT REPOSITORIES;\n\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n| CREATED_ON                    | NAME                 | DATABASE_NAME | SCHEMA_NAME | ORIGIN                                                  | API_INTEGRATION     | GIT_CREDENTIALS              | OWNER        | OWNER_ROLE_TYPE | COMMENT |\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n| 2023-06-28 08:46:10.886 -0700 | SNOWFLAKE_EXTENSIONS | MY_DB         | MAIN        | https://github.com/my-account/snowflake-extensions.git  | GIT_API_INTEGRATION | MY_DB.MAIN.EXTENSIONS_SECRET | ACCOUNTADMIN | ROLE            |         |\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n| 2023-06-28 08:46:10.886 -0700 | SNOWFLAKE_AI         | MY_DB         | MAIN        | https://github.com/my-account/snowflake-AI.git          | GIT_API_INTEGRATION | MY_DB.MAIN.AI_SECRET         | ACCOUNTADMIN | ROLE            |         |\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------"
},
{
    "function_name": "SHOW GIT BRANCHES",
    "summary": "Lists the branches in the specified Snowflake Git repository clone.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-git-branches",
    "title": "SHOW GIT BRANCHES",
    "description": "Lists the branches in the specified Snowflake Git repository clone.",
    "syntax": "SHOW GIT BRANCHES [ LIKE '<pattern>' ] IN [ GIT REPOSITORY ] <repository_name>",
    "example": "SHOW GIT BRANCHES IN snowflake_extensions;\n\n--------------------------------------------------------------------------------\n| name | path           | checkouts | commit_hash                              |\n--------------------------------------------------------------------------------\n| main | /branches/main |           | 0f81b1487dfc822df9f73ac6b3096b9ea9e42d69 |\n--------------------------------------------------------------------------------"
},
{
    "function_name": "SHOW FUNCTIONS IN MODEL",
    "summary": "Lists functions defined in machine learning models.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-functions-in-model",
    "title": "SHOW FUNCTIONS IN MODEL",
    "description": "Lists functions defined in machine learning models.",
    "syntax": "SHOW FUNCTIONS [ LIKE '<pattern>' ] IN MODEL <model_name>\n               [ VERSION <version_name> ]",
    "example": ""
},
{
    "function_name": "SHOW FUNCTIONS",
    "summary": "Lists all functions that you have privileges to access, including built-in, user-defined, and external functions.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-functions",
    "title": "SHOW FUNCTIONS",
    "description": "Lists all functions that you have privileges to access, including built-in, user-defined, and external functions.",
    "syntax": "SHOW FUNCTIONS [ LIKE '<pattern>' ]\n  [ IN\n    {\n      ACCOUNT                       |\n\n      CLASS <class_name>            |\n\n      DATABASE                      |\n      DATABASE <database_name>      |\n\n      SCHEMA                        |\n      SCHEMA <schema_name>          |\n      <schema_name>\n    }\n  ]",
    "example": "SHOW FUNCTIONS;\n\nSHOW FUNCTIONS LIKE 'SQUARE';\n\n------------+--------+-------------+------------+--------------+---------+-------------------+-------------------+----------------------------------------------------------------------+------------------------------------------------------------+----------+---------------+----------------+\n created_on | name   | schema_name | is_builtin | is_aggregate | is_ansi | min_num_arguments | max_num_arguments |                               arguments                              |                      description                           | language | is_memoizable | is_data_metric |\n------------+--------+-------------+------------+--------------+---------+-------------------+-------------------+----------------------------------------------------------------------+------------------------------------------------------------+----------+---------------+----------------+\n            | SQUARE |             | Y          | N            | Y       | 1                 | 1                 | SQUARE(NUMBER(38,0)) RETURN NUMBER(38,0), SQUARE(FLOAT) RETURN FLOAT | Compute the square of the input expression.                | SQL      | N             | N              |\n------------+--------+-------------+------------+--------------+---------+-------------------+-------------------+----------------------------------------------------------------------+------------------------------------------------------------+----------+---------------+----------------+"
},
{
    "function_name": "SHOW FILE FORMATS",
    "summary": "Lists the file formats for which you have access privileges.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-file-formats",
    "title": "SHOW FILE FORMATS",
    "description": "Lists the file formats for which you have access privileges. This command can be used to list the file formats for a specified\ndatabase or schema (or the current database/schema for the session), or your entire account.",
    "syntax": "",
    "example": "USE DATABASE testdb;\n\nSHOW FILE FORMATS;\n\n+---------------------------------+-----------+---------------+-------------+------+--------------+---------+-----------------+\n| created_on                      | name      | database_name | schema_name | type | owner        | comment | owner_role_type |\n+---------------------------------+-----------+---------------+-------------+------+--------------+---------+-----------------+\n| Wed, 29 Apr 2015 18:59:03 -0700 | MY_FORMAT | TESTDB        | PUBLIC      | CSV  | ACCOUNTADMIN |         | ROLE            |\n| Mon, 27 Apr 2015 17:49:12 -0700 | CSV       | TESTDB        | PUBLIC      | CSV  | ACCOUNTADMIN |         | ROLE            |\n| Mon, 27 Apr 2015 17:49:12 -0700 | VSV       | TESTDB        | PUBLIC      | CSV  | ACCOUNTADMIN |         | ROLE            |\n| Mon, 27 Apr 2015 17:49:12 -0700 | TSV       | TESTDB        | PUBLIC      | CSV  | ACCOUNTADMIN |         | ROLE            |\n+---------------------------------+-----------+---------------+-------------+------+--------------+---------+-----------------+\n\nSHOW FILE FORMATS IN DATABASE testdb;\n\n+---------------------------------+-----------+---------------+-------------+------+--------------+---------+-----------------+\n| created_on                      | name      | database_name | schema_name | type | owner        | comment | owner_role_type |\n+---------------------------------+-----------+---------------+-------------+------+--------------+---------+-----------------+\n| Wed, 29 Apr 2015 18:59:03 -0700 | MY_FORMAT | TESTDB        | PUBLIC      | CSV  | ACCOUNTADMIN |         | ROLE            |\n| Mon, 27 Apr 2015 17:49:12 -0700 | CSV       | TESTDB        | PUBLIC      | CSV  | ACCOUNTADMIN |         | ROLE            |\n| Mon, 27 Apr 2015 17:49:12 -0700 | VSV       | TESTDB        | PUBLIC      | CSV  | ACCOUNTADMIN |         | ROLE            |\n| Mon, 27 Apr 2015 17:49:12 -0700 | TSV       | TESTDB        | PUBLIC      | CSV  | ACCOUNTADMIN |         | ROLE            |\n+---------------------------------+-----------+---------------+-------------+------+--------------+---------+-----------------+\n\nSHOW FILE FORMATS IN SCHEMA testdb.public;\n\n+---------------------------------+-----------+---------------+-------------+------+--------------+---------+-----------------+\n| created_on                      | name      | database_name | schema_name | type | owner        | comment | owner_role_type |\n+---------------------------------+-----------+---------------+-------------+------+--------------+---------+-----------------+\n| Wed, 29 Apr 2015 18:59:03 -0700 | MY_FORMAT | TESTDB        | PUBLIC      | CSV  | ACCOUNTADMIN |         | ROLE            |\n| Mon, 27 Apr 2015 17:49:12 -0700 | CSV       | TESTDB        | PUBLIC      | CSV  | ACCOUNTADMIN |         | ROLE            |\n| Mon, 27 Apr 2015 17:49:12 -0700 | VSV       | TESTDB        | PUBLIC      | CSV  | ACCOUNTADMIN |         | ROLE            |\n| Mon, 27 Apr 2015 17:49:12 -0700 | TSV       | TESTDB        | PUBLIC      | CSV  | ACCOUNTADMIN |         | ROLE            |\n+---------------------------------+-----------+---------------+-------------+------+--------------+---------+-----------------+"
},
{
    "function_name": "SHOW FEATURE POLICIES",
    "summary": "Lists the feature policies for which you have access privileges.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-feature-policies",
    "title": "SHOW FEATURE POLICIES",
    "description": "Lists the",
    "syntax": "SHOW FEATURE POLICIES\n  [ IN\n    {\n      ACCOUNT                                        |\n      APPLICATION {app_name}                         |\n      APPLICATION PACKAGE {app_package_name}         |\n      DATABASE {database_name}                       |\n      SCHEMA {schema_name}                           |\n    }\n  ]\n\nSHOW FEATURE POLICIES ON ACCOUNT\n\nSHOW FEATURE POLICIES ON APPLICATION <application_name>",
    "example": "SHOW FEATURE POLICIES;\n\nSHOW FEATURE POLICIES IN APPLICATION hello_snowflake_app;\n\nSHOW FEATURE POLICIES ON ACCOUNT"
},
{
    "function_name": "SHOW FAILOVER GROUPS",
    "summary": "Lists the primary and secondary failover groups in your account, as well as the failover groups in other accounts that are associated with your account.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-failover-groups",
    "title": "SHOW FAILOVER GROUPS",
    "description": "",
    "syntax": "SHOW FAILOVER GROUPS [ IN ACCOUNT <account> ]",
    "example": "SHOW FAILOVER GROUPS IN ACCOUNT myaccount1;\n\n+------------------+-------------------------------+--------------+------+----------+---------+------------+-----------------------+---------------------------------------------+---------------------------+----------------------------------------------+-------------------+-------------------+----------------------+-----------------+-------------------------------+------------+-----------------------------------+\n| snowflake_region | created_on                    | account_name | name | type     | comment | is_primary | primary               | object_types                                | allowed_integration_types |  allowed_accounts                            | organization_name | account_locator   | replication_schedule | secondary_state | next_scheduled_refresh        | owner      | is_listing_auto_fulfillment_group |\n+------------------+-------------------------------+--------------+------+----------+---------+------------+-----------------------+---------------------------------------------+---------------------------+----------------------------------------------+-------------------+-------------------+----------------------+-----------------+-------------------------------+------------+-----------------------------------+\n| AWS_US_EAST_1    | 2021-10-25 19:08:15.209 -0700 | MYACCOUNT1   | MYFG | FAILOVER |         | true       | MYORG.MYACCOUNT1.MYFG | DATABASES, ROLES, USERS, WAREHOUSES, SHARES |                           | MYORG.MYACCOUNT1.MYFG,MYORG.MYACCOUNT2.MYFG  | MYORG             | MYACCOUNT1LOCATOR | 10 MINUTE            | NULL            |                               | MYROLE     | false                             |\n+------------------+-------------------------------+--------------+------+----------+---------+------------+-----------------------+---------------------------------------------+---------------------------+----------------------------------------------+-------------------+-------------------+----------------------+-----------------+-------------------------------+------------+-----------------------------------+\n| AWS_US_WEST_2    | 2021-10-25 19:08:15.209 -0700 | MYACCOUNT2   | MYFG | FAILOVER |         | false      | MYORG.MYACCOUNT1.MYFG |                                             |                           |                                              | MYORG             | MYACCOUNT2LOCATOR | 10 MINUTE            | STARTED         | 2022-03-06 12:10:35.280 -0800 | NULL       | false                             |\n+------------------+-------------------------------+--------------+------+----------+---------+------------+-----------------------+---------------------------------------------+---------------------------+----------------------------------------------+-------------------+-------------------+----------------------+-----------------+-------------------------------+------------+-----------------------------------+"
},
{
    "function_name": "SHOW EXTERNAL VOLUMES",
    "summary": "Lists the external volumes in your account for which you have access privileges.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-external-volumes",
    "title": "SHOW EXTERNAL VOLUMES",
    "description": "Lists the",
    "syntax": "SHOW EXTERNAL VOLUMES [ LIKE '<pattern>' ]",
    "example": "SHOW EXTERNAL VOLUMES;\n\nSHOW EXTERNAL VOLUMES LIKE 'aws%';"
},
{
    "function_name": "SHOW EXTERNAL TABLES",
    "summary": "Lists the external tables for which you have access privileges.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-external-tables",
    "title": "SHOW EXTERNAL TABLES",
    "description": "Lists the external tables for which you have access privileges. The command can be used to list external tables for the current/specified\ndatabase or schema, or across your entire account.",
    "syntax": "SHOW [ TERSE ] EXTERNAL TABLES [ LIKE '<pattern>' ]\n                               [ IN\n                                        {\n                                          ACCOUNT                                         |\n\n                                          DATABASE                                        |\n                                          DATABASE <database_name>                        |\n\n                                          SCHEMA                                          |\n                                          SCHEMA <schema_name>                            |\n                                          <schema_name>\n\n                                          APPLICATION <application_name>                  |\n                                          APPLICATION PACKAGE <application_package_name>  |\n                                        }\n                               ]\n                               [ STARTS WITH '<name_string>' ]\n                               [ LIMIT <rows> [ FROM '<name_string>' ] ]",
    "example": "SHOW EXTERNAL TABLES LIKE 'line%' IN tpch.public;"
},
{
    "function_name": "SHOW EXTERNAL FUNCTIONS",
    "summary": "Lists all the external functions created for your account.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-external-functions",
    "title": "SHOW EXTERNAL FUNCTIONS",
    "description": "Lists all the external functions created for your account.",
    "syntax": "SHOW EXTERNAL FUNCTIONS [ LIKE '<pattern>' ]\n           [ IN { APPLICATION <application_name> | APPLICATION PACKAGE <application_package_name> }  ]",
    "example": "SHOW EXTERNAL FUNCTIONS;\n\nSHOW EXTERNAL FUNCTIONS LIKE 'SQUARE%';"
},
{
    "function_name": "SHOW EVENT TABLES",
    "summary": "Lists the event tables for which you have access privileges, including dropped tables that are still within the Time Travel retention period and, therefore, can be undropped.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-event-tables",
    "title": "SHOW EVENT TABLES",
    "description": "Lists the",
    "syntax": "SHOW [ TERSE ] EVENT TABLES [ LIKE '<pattern>' ]\n  [ IN { ACCOUNT | DATABASE [ <db_name> ] | SCHEMA [ <schema_name> ] } ]\n  [ STARTS WITH '<name_string>' ]\n  [ LIMIT <rows> [ FROM '<name_string>' ] ]",
    "example": "SHOW EVENT TABLES LIKE 'mylogs%' IN tpch.public;"
},
{
    "function_name": "SHOW ENDPOINTS",
    "summary": "Lists the endpoints in a Snowpark Container Services service (or a job service).",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-endpoints",
    "title": "SHOW ENDPOINTS",
    "description": "",
    "syntax": "SHOW ENDPOINTS IN SERVICE <name>",
    "example": "SHOW ENDPOINTS IN SERVICE echo_service;\n\n+--------------+------+------------+----------+-----------+------------------------------------------------------------------------------+\n| name         | port | port_range | protocol | is_public | ingress_url                                                                  |\n|--------------+------+------------+----------+-----------+------------------------------------------------------------------------------|\n| echoendpoint | 8080 |            | HTTP     | true      | d7qoajz-orgname-acctname.pp-snowflakecomputing.app                           |\n+--------------+------+------------+----------+-----------+------------------------------------------------------------------------------+"
},
{
    "function_name": "SHOW DYNAMIC TABLES",
    "summary": "Lists the dynamic tables for which you have access privileges.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-dynamic-tables",
    "title": "SHOW DYNAMIC TABLES",
    "description": "Lists the",
    "syntax": "SHOW DYNAMIC TABLES [ LIKE '<pattern>' ]\n                    [ IN\n                      {\n                           ACCOUNT              |\n\n                           DATABASE             |\n                           DATABASE <db_name>   |\n\n                           SCHEMA               |\n                           SCHEMA <schema_name> |\n                           <schema_name>\n                      }\n                    ]\n                    [ STARTS WITH '<name_string>' ]\n                    [ LIMIT <rows> [ FROM '<name_string>' ] ]",
    "example": "SHOW DYNAMIC TABLES LIKE 'product_%' IN SCHEMA mydb.myschema;"
},
{
    "function_name": "SHOW DELEGATED AUTHORIZATIONS",
    "summary": "Lists the active delegated authorizations for which you have access privileges.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-delegated-authorizations",
    "title": "SHOW DELEGATED AUTHORIZATIONS",
    "description": "Lists the active delegated authorizations for which you have access privileges. This command can be used to list the\nDELEGATED AUTHORIZATIONS for a specified user or integration (or the current user), or your entire account.",
    "syntax": "SHOW DELEGATED AUTHORIZATIONS\n\nSHOW DELEGATED AUTHORIZATIONS BY USER <username>\n\nSHOW DELEGATED AUTHORIZATIONS TO SECURITY INTEGRATION <integration_name>",
    "example": "SHOW DELEGATED AUTHORIZATIONS;\n\n+-------------------------------+-----------+-----------+-------------------+--------------------+\n| created_on                    | user_name | role_name | integration_name  | integration_status |\n|-------------------------------+-----------+-----------+-------------------+--------------------|\n| 2018-11-27 07:43:10.914 -0800 | JSMITH    | PUBLIC    | MY_OAUTH_INT1     | ENABLED            |\n| 2018-11-27 08:14:56.123 -0800 | MJONES    | PUBLIC    | MY_OAUTH_INT2     | ENABLED            |\n+-------------------------------+-----------+-----------+-------------------+--------------------+\n\nSHOW DELEGATED AUTHORIZATIONS BY USER jsmith;\n\n+-------------------------------+-----------+-----------+-------------------+--------------------+\n| created_on                    | user_name | role_name | integration_name  | integration_status |\n|-------------------------------+-----------+-----------+-------------------+--------------------|\n| 2018-11-27 07:43:10.914 -0800 | JSMITH    | PUBLIC    | MY_OAUTH_INT1     | ENABLED            |\n+-------------------------------+-----------+-----------+-------------------+--------------------+\n\nSHOW DELEGATED AUTHORIZATIONS TO SECURITY INTEGRATION my_oauth_int2;\n\n+-------------------------------+-----------+-----------+-------------------+--------------------+\n| created_on                    | user_name | role_name | integration_name  | integration_status |\n|-------------------------------+-----------+-----------+-------------------+--------------------|\n| 2018-11-27 08:14:56.123 -0800 | MJONES    | PUBLIC    | MY_OAUTH_INT2     | ENABLED            |\n+-------------------------------+-----------+-----------+-------------------+--------------------+"
},
{
    "function_name": "SHOW DBT PROJECTS",
    "summary": "Lists the dbt project objects for which you have access privileges.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-dbt-projects",
    "title": "SHOW DBT PROJECTS",
    "description": "",
    "syntax": "SHOW DBT PROJECTS [ LIKE '<pattern>' ]\n           [ IN\n                {\n                  ACCOUNT                  |\n\n                  DATABASE                 |\n                  DATABASE <database_name> |\n\n                  SCHEMA                   |\n                  SCHEMA <schema_name>     |\n                  <schema_name>\n                }\n           ]\n           [ STARTS WITH '<name_string>' ]\n           [ LIMIT <rows> ]\n           [ LIMIT <rows> [ FROM '<name_string>' ] ]",
    "example": "SHOW DBT PROJECTS IN DATABASE my_db;\n\n+---------------------+---------------+-------------+-------------------------------+-------------------------------+--------------+---------+--------------+\n|        name         | database_name | schema_name |          created_on           |          updated_on           |    owner     | comment | default_args |\n+---------------------+---------------+-------------+-------------------------------+-------------------------------+--------------+---------+--------------+\n| COSMOS              | MY_DB         | PUBLIC      | 2025-04-29 17:21:25.413 -0700 | 2025-04-29 17:21:29.462 -0700 | ACCOUNTADMIN |         |              |\n| COSMOS2             | MY_DB         | PUBLIC      | 2025-05-19 14:30:55.204 -0700 | 2025-05-19 14:30:57.106 -0700 | ACCOUNTADMIN |         |              |\n| JAFFLE_SHOP2        | MY_DB         | PUBLIC      | 2025-05-02 16:10:49.577 -0700 | 2025-05-02 16:10:51.844 -0700 | ACCOUNTADMIN |         |              |\n| Jaffle_shop         | MY_DB         | PUBLIC      | 2025-03-25 12:36:16.574 -0700 | 2025-03-25 12:36:17.833 -0700 | ACCOUNTADMIN |         |              |\n| MY_DB_PROJECT       | MY_DB         | PUBLIC      | 2025-05-02 13:42:36.306 -0700 | 2025-05-02 13:42:38.584 -0700 | ACCOUNTADMIN |         |              |\n| MY_SHOP             | MY_DB         | PUBLIC      | 2025-04-29 17:15:27.295 -0700 | 2025-04-29 17:15:28.709 -0700 | ACCOUNTADMIN |         |              |\n| jaffle2             | MY_DB         | PUBLIC      | 2025-04-18 09:34:54.804 -0700 | 2025-04-18 09:34:57.416 -0700 | ACCOUNTADMIN |         |              |\n| task_query_analysis | MY_DB         | PUBLIC      | 2025-04-21 20:50:37.579 -0700 | 2025-04-21 20:50:39.239 -0700 | ACCOUNTADMIN |         |              |\n+---------------------+---------------+-------------+-------------------------------+-------------------------------+--------------+---------+--------------+"
},
{
    "function_name": "SHOW DATASETS",
    "summary": "Displays information about the datasets in your account.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-datasets",
    "title": "SHOW DATASETS",
    "description": "Displays information about the datasets in your account.\nYou can show all datasets or use the IN subcommand to only display results at the schema or database level.",
    "syntax": "SHOW DATASETS\n  [ LIKE '<pattern>' ]\n  [ IN { SCHEMA <schema_name> | DATABASE <db_name> | ACCOUNT } ]\n  [ STARTS WITH '<name_string>' ]\n  [ LIMIT <rows> [ FROM '<name_string>' ] ]",
    "example": "SHOW DATASETS IN SCHEMA PUBLIC LIMIT 2;"
},
{
    "function_name": "SHOW DATABASES IN REPLICATION GROUP",
    "summary": "Lists databases in a replication group.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-databases-in-replication-group",
    "title": "SHOW DATABASES IN REPLICATION GROUP",
    "description": "Lists databases in a",
    "syntax": "SHOW DATABASES IN REPLICATION GROUP <name>",
    "example": "SHOW DATABASES IN REPLICATION GROUP myrg;"
},
{
    "function_name": "SHOW DATABASES IN FAILOVER GROUP",
    "summary": "Lists databases in a failover group.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-databases-in-failover-group",
    "title": "SHOW DATABASES IN FAILOVER GROUP",
    "description": "",
    "syntax": "SHOW DATABASES IN FAILOVER GROUP <name>",
    "example": "SHOW DATABASES IN FAILOVER GROUP myfg;"
},
{
    "function_name": "SHOW DATABASES",
    "summary": "Lists the databases for which you have access privileges across your entire account, including dropped databases that are still within the Time Travel retention period and, therefore, can be undropped.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-databases",
    "title": "SHOW DATABASES",
    "description": "Lists the databases for which you have access privileges across your entire account, including dropped databases that are still within\nthe Time Travel retention period and, therefore, can be undropped.",
    "syntax": "SHOW [ TERSE ] DATABASES [ HISTORY ] [ LIKE '<pattern>' ]\n                                     [ STARTS WITH '<name_string>' ]\n                                     [ LIMIT <rows> [ FROM '<name_string>' ] ]\n                                     [ WITH PRIVILEGES <object_privilege> [ , <object_privilege> [ , ... ] ] ]",
    "example": "SHOW DATABASES;\n\n+---------------------------------+-----------+------------+------------+--------+--------+---------+---------+----------------+----------+-----------------+-------------------+\n| created_on                      | name      | is_default | is_current | origin | owner  | comment | options | retention_time | kind     | owner_role_type | OBJECT_VISIBILITY |\n|---------------------------------+-----------+------------+------------+--------+--------+---------+---------+----------------+----------|-----------------|-------------------|\n| Tue, 17 Mar 2015 16:57:04 -0700 | MYTESTDB  | N          | Y          |        | PUBLIC |         |         | 1              | STANDARD | ROLE            | NULL              |\n| Wed, 25 Feb 2015 17:30:04 -0800 | SALES1    | N          | N          |        | PUBLIC |         |         | 1              | STANDARD | ROLE            | NULL              |\n| Fri, 13 Feb 2015 19:21:49 -0800 | DEMO1     | N          | N          |        | PUBLIC |         |         | 1              | STANDARD | ROLE            | NULL              |\n+---------------------------------+-----------+------------+------------+--------+--------+---------+---------+----------------+----------+-----------------+-------------------+\n\nSHOW DATABASES HISTORY;\n\n+---------------------------------+-----------+------------+------------+--------+--------+---------+---------+----------------+---------------------------------+----------+-----------------+-------------------+\n| created_on                      | name      | is_default | is_current | origin | owner  | comment | options | retention_time | dropped_on                      | kind     | owner_role_type | OBJECT_VISIBILITY |\n|---------------------------------+-----------+------------+------------+--------+--------+---------+---------+----------------+---------------------------------|----------|-----------------|-------------------|\n| Tue, 17 Mar 2015 16:57:04 -0700 | MYTESTDB  | N          | Y          |        | PUBLIC |         |         | 1              | [NULL]                          | STANDARD | ROLE            | NULL              |\n| Wed, 25 Feb 2015 17:30:04 -0800 | SALES1    | N          | N          |        | PUBLIC |         |         | 1              | [NULL]                          | STANDARD | ROLE            | NULL              |\n| Fri, 13 Feb 2015 19:21:49 -0800 | DEMO1     | N          | N          |        | PUBLIC |         |         | 1              | [NULL]                          | STANDARD | ROLE            | NULL              |\n| Wed, 25 Feb 2015 16:16:54 -0800 | MYTESTDB2 | N          | N          |        | PUBLIC |         |         | 1              | Fri, 13 May 2016 17:35:09 -0700 | STANDARD | ROLE            | NULL              |\n+---------------------------------+-----------+------------+------------+--------+--------+---------+---------+----------------+---------------------------------+----------+-----------------+-------------------+\n\nSHOW DATABASES WITH PRIVILEGES USAGE, MODIFY;\n\n+-------------------------------+-----------------------------------------------------------+------------+------------+-----------------------------------------------------------+--------------+---------+---------+----------------+-------------------+-----------------+-------------------+\n| created_on                    | name                                                      | is_default | is_current | origin                                                    | owner        | comment | options | retention_time | kind              | owner_role_type | OBJECT_VISIBILITY |\n|-------------------------------+-----------------------------------------------------------+------------+------------+-----------------------------------------------------------+--------------+---------+---------+----------------+-------------------+-----------------|-------------------|\n| 2023-01-27 14:33:11.417 -0800 | BOOKS_DB                                                  | N          | N          |                                                           | DATA_ADMIN   |         |         | 1              | STANDARD          | ROLE            | NULL              |\n| 2023-09-15 15:22:51.111 -0700 | TEST_DB                                                   | N          | N          |                                                           | ACCOUNTADMIN |         |         | 4              | STANDARD          | ROLE            | NULL              |\n| 2023-08-18 13:33:01.024 -0700 | SNOWFLAKE                                                 | N          | N          | SNOWFLAKE.ACCOUNT_USAGE                                   |              |         |         | 0              | APPLICATION       |                 | NULL              |\n+-------------------------------+-----------------------------------------------------------+------------+------------+-----------------------------------------------------------+--------------+---------+---------+----------------+-------------------+-----------------+-------------------+"
},
{
    "function_name": "SHOW DATABASE ROLES",
    "summary": "Lists all the database roles in the specified database.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-database-roles",
    "title": "SHOW DATABASE ROLES",
    "description": "Lists all the database roles in the specified database.",
    "syntax": "SHOW DATABASE ROLES IN DATABASE <name>\n  [ LIMIT <rows> [ FROM '<name_string>' ] ]",
    "example": ""
},
{
    "function_name": "SHOW DATA METRIC FUNCTIONS",
    "summary": "Lists the data metric functions (DMFs) for which you have access privileges.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-data-metric-functions",
    "title": "SHOW DATA METRIC FUNCTIONS",
    "description": "",
    "syntax": "SHOW DATA METRIC FUNCTIONS\n  [ LIKE '<pattern>' ]\n  [ IN\n      {\n        ACCOUNT                  |\n\n        DATABASE                 |\n        DATABASE <database_name> |\n\n        SCHEMA                   |\n        SCHEMA <schema_name>     |\n        <schema_name>\n      }\n  ]\n  [ STARTS WITH '<name_string>' ]",
    "example": "USE SCHEMA governance.dmfs;\n\nSHOW DATA METRIC FUNCTIONS;\n\n+--------------------------+------------------------+-------------+------------+--------------+---------+-------------------+-------------------+--------------------------------------------------------------------------------------------+-----------------------+--------------+-------------------+----------------------+-----------+----------------------+----------+---------------+----------------+\n| created_on               | name                   | schema_name | is_builtin | is_aggregate | is_ansi | min_num_arguments | max_num_arguments | arguments                                                                                  | description           | catalog_name | is_table_function | valid_for_clustering | is_secure | is_external_function | language | is_memoizable | is_data_metric |\n+--------------------------+------------------------+-------------+------------+--------------+---------+-------------------+-------------------+--------------------------------------------------------------------------------------------+-----------------------+--------------+-------------------+----------------------+-----------+----------------------+----------+---------------+----------------+\n| 2023-12-11T23:30:02.785Z | COUNT_POSITIVE_NUMBERS | DMFS        | N          | N            | N       | 1                 | 1                 | \"COUNT_POSITIVE_NUMBERS(TABLE(NUMBER, NUMBER, NUMBER)) RETURNS NUMBER\"                     | user-defined function | GOVERNANCE   | N                 | N                    | N         | N                    | SQL      | N             | Y              |\n+--------------------------+------------------------+-------------+------------+--------------+---------+-------------------+-------------------+--------------------------------------------------------------------------------------------+-----------------------+--------------+-------------------+----------------------+-----------+----------------------+----------+---------------+----------------+"
},
{
    "function_name": "SHOW CORTEX SEARCH SERVICES",
    "summary": "Lists the Cortex Search services for which you have access privileges.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-cortex-search",
    "title": "SHOW CORTEX SEARCH SERVICES",
    "description": "Lists the",
    "syntax": "SHOW CORTEX SEARCH SERVICES\n  [ LIKE PATTERN '<pattern>' ]\n  [ STARTS WITH '<name_string>' ]\n  [ LIMIT <rows> [ FROM '<name_string>' ] ]",
    "example": "USE DATABASE mydb;\n\nSHOW CORTEX SEARCH SERVICES;"
},
{
    "function_name": "SHOW CONTACTS",
    "summary": "Lists the contacts for which you have access privileges.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-contacts",
    "title": "SHOW CONTACTS",
    "description": "",
    "syntax": "SHOW CONTACTS [ LIKE '<pattern>' ]\n          [ IN\n              {\n                ACCOUNT                  |\n\n                DATABASE                 |\n                DATABASE <database_name> |\n\n                SCHEMA                   |\n                SCHEMA <schema_name>     |\n                <schema_name>\n              }\n          ]\n          [ STARTS WITH '<name_string>' ]\n          [ LIMIT <rows> ]\n          [ LIMIT <rows> [ FROM '<name_string>' ] ]",
    "example": "USE DATABASE mydb;\n\nSHOW CONTACTS;"
},
{
    "function_name": "SHOW CONNECTIONS",
    "summary": "Lists the connections for which you have access privileges.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-connections",
    "title": "SHOW CONNECTIONS",
    "description": "",
    "syntax": "SHOW CONNECTIONS [ LIKE '<pattern>' ]",
    "example": "SHOW CONNECTIONS LIKE 'test%';"
},
{
    "function_name": "SHOW COMPUTE POOLS",
    "summary": "Lists the compute pools in your account for which you have access privileges.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-compute-pools",
    "title": "SHOW COMPUTE POOLS",
    "description": "",
    "syntax": "SHOW COMPUTE POOLS [ LIKE '<pattern>' ]\n                   [ STARTS WITH '<name_string>' ]\n                   [ LIMIT <ROWS> [ FROM '<name-string>' ] ]",
    "example": "SHOW COMPUTE POOLS;\n\nSHOW COMPUTE POOLS LIMIT 1;\n\nSHOW COMPUTE POOLS LIKE '%tu%';\n\nSHOW COMPUTE POOLS LIKE '%my_pool%' LIMIT 2;\n\n+-------------------------+-----------+-----------+-----------+-----------------+--------------+----------+-------------------+-------------+--------------+------------+--------------+-------------------------------+-------------------------------+-------------------------------+--------------+---------+--------------+-------------+--------+\n| name                    | state     | min_nodes | max_nodes | instance_family | num_services | num_jobs | auto_suspend_secs | auto_resume | active_nodes | idle_nodes | target_nodes | created_on                    | resumed_on                    | updated_on                    | owner        | comment | is_exclusive | application | budget |\n|-------------------------+-----------+-----------+-----------+-----------------+--------------+----------+-------------------+-------------+--------------+------------+--------------+-------------------------------+-------------------------------+-------------------------------+--------------+---------+--------------+-------------+--------|\n| TUTORIAL_COMPUTE_POOL   | ACTIVE    |         1 |         1 | CPU_X64_XS      |            3 |        0 |              3600 | true        |            1 |          0 |            1 | 2024-02-24 20:41:31.978 -0800 | 2024-08-08 11:27:01.775 -0700 | 2024-08-18 13:47:08.150 -0700 | TEST_ROLE    | NULL    | false        | NULL        | NULL   |\n| TUTORIAL_COMPUTE_POOL_2 | SUSPENDED |         1 |         1 | CPU_X64_XS      |            0 |        0 |              3600 | true        |            0 |          0 |            0 | 2024-01-15 21:23:09.744 -0800 | 2024-04-06 15:24:50.541 -0700 | 2024-08-18 13:46:08.110 -0700 | ACCOUNTADMIN | NULL    | false        | NULL        | NULL   |\n+-------------------------+-----------+-----------+-----------+-----------------+--------------+----------+-------------------+-------------+--------------+------------+--------------+-------------------------------+-------------------------------+-------------------------------+--------------+---------+--------------+-------------+--------+"
},
{
    "function_name": "SHOW COLUMNS",
    "summary": "Lists the columns in the tables or views for which you have access privileges.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-columns",
    "title": "SHOW COLUMNS",
    "description": "Lists the columns in the tables or views for which you have access privileges. This command can be used to list the columns for a\nspecified table/view/schema/database (or the current schema/database for the session), or your entire account.",
    "syntax": "SHOW COLUMNS [ LIKE '<pattern>' ]\n             [ IN { ACCOUNT | DATABASE [ <database_name> ] | SCHEMA [ <schema_name> ] | TABLE | [ TABLE ] <table_name> | VIEW | [ VIEW ] <view_name> } | APPLICATION <application_name> | APPLICATION PACKAGE <application_package_name> ]",
    "example": "create or replace table dt_test (n1 number default 5, n2_int integer default n1+5, n3_bigint bigint autoincrement, n4_dec decimal identity (1,10),\n                                 f1 float, f2_double double, f3_real real,\n                                 s1 string, s2_var varchar, s3_char char, s4_text text,\n                                 b1 binary, b2_var varbinary,\n                                 bool1 boolean,\n                                 d1 date,\n                                 t1 time,\n                                 ts1 timestamp, ts2_ltz timestamp_ltz, ts3_ntz timestamp_ntz, ts4_tz timestamp_tz);\n\nshow columns in table dt_test;\n\n+------------+-------------+-------------+---------------------------------------------------------------------------------------+-------+----------------+--------+------------+---------+---------------+-------------------------------+\n| table_name | schema_name | column_name | data_type                                                                             | null? | default        | kind   | expression | comment | database_name | autoincrement                 |\n|------------+-------------+-------------+---------------------------------------------------------------------------------------+-------+----------------+--------+------------+---------+---------------+-------------------------------|\n| DT_TEST    | PUBLIC      | N1          | {\"type\":\"FIXED\",\"precision\":38,\"scale\":0,\"nullable\":true}                             | true  | 5              | COLUMN |            |         | TEST1         |                               |\n| DT_TEST    | PUBLIC      | N2_INT      | {\"type\":\"FIXED\",\"precision\":38,\"scale\":0,\"nullable\":true}                             | true  | DT_TEST.N1 + 5 | COLUMN |            |         | TEST1         |                               |\n| DT_TEST    | PUBLIC      | N3_BIGINT   | {\"type\":\"FIXED\",\"precision\":38,\"scale\":0,\"nullable\":true}                             | true  |                | COLUMN |            |         | TEST1         | IDENTITY START 1 INCREMENT 1  |\n| DT_TEST    | PUBLIC      | N4_DEC      | {\"type\":\"FIXED\",\"precision\":38,\"scale\":0,\"nullable\":true}                             | true  |                | COLUMN |            |         | TEST1         | IDENTITY START 1 INCREMENT 10 |\n| DT_TEST    | PUBLIC      | F1          | {\"type\":\"REAL\",\"nullable\":true}                                                       | true  |                | COLUMN |            |         | TEST1         |                               |\n| DT_TEST    | PUBLIC      | F2_DOUBLE   | {\"type\":\"REAL\",\"nullable\":true}                                                       | true  |                | COLUMN |            |         | TEST1         |                               |\n| DT_TEST    | PUBLIC      | F3_REAL     | {\"type\":\"REAL\",\"nullable\":true}                                                       | true  |                | COLUMN |            |         | TEST1         |                               |\n| DT_TEST    | PUBLIC      | S1          | {\"type\":\"TEXT\",\"length\":16777216,\"byteLength\":16777216,\"nullable\":true,\"fixed\":false} | true  |                | COLUMN |            |         | TEST1         |                               |\n| DT_TEST    | PUBLIC      | S2_VAR      | {\"type\":\"TEXT\",\"length\":16777216,\"byteLength\":16777216,\"nullable\":true,\"fixed\":false} | true  |                | COLUMN |            |         | TEST1         |                               |\n| DT_TEST    | PUBLIC      | S3_CHAR     | {\"type\":\"TEXT\",\"length\":1,\"byteLength\":4,\"nullable\":true,\"fixed\":false}               | true  |                | COLUMN |            |         | TEST1         |                               |\n| DT_TEST    | PUBLIC      | S4_TEXT     | {\"type\":\"TEXT\",\"length\":16777216,\"byteLength\":16777216,\"nullable\":true,\"fixed\":false} | true  |                | COLUMN |            |         | TEST1         |                               |\n| DT_TEST    | PUBLIC      | B1          | {\"type\":\"BINARY\",\"length\":8388608,\"byteLength\":8388608,\"nullable\":true,\"fixed\":true}  | true  |                | COLUMN |            |         | TEST1         |                               |\n| DT_TEST    | PUBLIC      | B2_VAR      | {\"type\":\"BINARY\",\"length\":8388608,\"byteLength\":8388608,\"nullable\":true,\"fixed\":false} | true  |                | COLUMN |            |         | TEST1         |                               |\n| DT_TEST    | PUBLIC      | BOOL1       | {\"type\":\"BOOLEAN\",\"nullable\":true}                                                    | true  |                | COLUMN |            |         | TEST1         |                               |\n| DT_TEST    | PUBLIC      | D1          | {\"type\":\"DATE\",\"nullable\":true}                                                       | true  |                | COLUMN |            |         | TEST1         |                               |\n| DT_TEST    | PUBLIC      | T1          | {\"type\":\"TIME\",\"precision\":0,\"scale\":9,\"nullable\":true}                               | true  |                | COLUMN |            |         | TEST1         |                               |\n| DT_TEST    | PUBLIC      | TS1         | {\"type\":\"TIMESTAMP_LTZ\",\"precision\":0,\"scale\":9,\"nullable\":true}                      | true  |                | COLUMN |            |         | TEST1         |                               |\n| DT_TEST    | PUBLIC      | TS2_LTZ     | {\"type\":\"TIMESTAMP_LTZ\",\"precision\":0,\"scale\":9,\"nullable\":true}                      | true  |                | COLUMN |            |         | TEST1         |                               |\n| DT_TEST    | PUBLIC      | TS3_NTZ     | {\"type\":\"TIMESTAMP_NTZ\",\"precision\":0,\"scale\":9,\"nullable\":true}                      | true  |                | COLUMN |            |         | TEST1         |                               |\n| DT_TEST    | PUBLIC      | TS4_TZ      | {\"type\":\"TIMESTAMP_TZ\",\"precision\":0,\"scale\":9,\"nullable\":true}                       | true  |                | COLUMN |            |         | TEST1         |                               |\n+------------+-------------+-------------+---------------------------------------------------------------------------------------+-------+----------------+--------+------------+---------+---------------+-------------------------------+"
},
{
    "function_name": "SHOW CLASSES",
    "summary": "Lists all available classes.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-classes",
    "title": "SHOW CLASSES",
    "description": "Lists all available classes.",
    "syntax": "SHOW CLASSES [ LIKE '<pattern>' ]\n             [ IN DATABASE [ <db_name> ] ]\n             [ LIMIT <rows> [ FROM '<name_string>' ] ]",
    "example": "SHOW CLASSES IN DATABASE SNOWFLAKE;\n\n+-------------------------------+-----------------------+---------------+-------------+---------+---------+-------+------------------+-----------------+\n| created_on                    | name                  | database_name | schema_name | version | comment | owner | is_service_class | owner_role_type |\n|-------------------------------+-----------------------+---------------+-------------+---------+---------+-------|------------------|-----------------+\n| 2023-04-17 11:48:31.222 -0700 | ANOMALY_DETECTION     | SNOWFLAKE     | ML          | NULL    | NULL    |       | false            |                 |\n| 2023-05-26 10:01:24.852 -0700 | FORECAST              | SNOWFLAKE     | ML          | NULL    | NULL    |       | false            |                 |\n+-------------------------------+-----------------------+---------------+-------------+---------+---------+-------+------------------+-----------------+"
},
{
    "function_name": "SHOW CHANNELS",
    "summary": "Lists the Snowpipe Streaming channels for which you have access privileges.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-channels",
    "title": "SHOW CHANNELS",
    "description": "Lists the",
    "syntax": "SHOW CHANNELS [ LIKE '<pattern>' ]\n           [ IN\n                {\n                  ACCOUNT                  |\n\n                  DATABASE                 |\n                  DATABASE <database_name> |\n\n                  SCHEMA                   |\n                  SCHEMA <schema_name>     |\n                  <schema_name>\n\n                  TABLE                    |\n                  TABLE <table_name>\n                }\n           ]",
    "example": "use database mydb;\n\nshow channels;\n\n+-------------------------------+-----------+---------------+------------------+------------------------+------------------+---------------+--------------+\n| created_on                    | name      | database_name | schema_name      | table_name             | client_sequencer | row_sequencer | offset_token |\n|-------------------------------+-----------+---------------+------------------+------------------------+------------------+---------------+--------------+\n| 2023-05-05 17:13:17.579 -0700 | CHANNEL8  | TEST_DB1      | STREAMING_INGEST | STREAMING_INGEST_TABLE | 7                | 1             | 0            |\n|                               |           |               |                  |                        |                  |               |              |\n+-------------------------------+-----------+---------------+------------------+------------------------+------------------+---------------+--------------+"
},
{
    "function_name": "SHOW CATALOG INTEGRATIONS",
    "summary": "Lists the catalog integrations in your account.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-catalog-integrations",
    "title": "SHOW CATALOG INTEGRATIONS",
    "description": "Lists the",
    "syntax": "SHOW CATALOG INTEGRATIONS [ LIKE '<pattern>' ]",
    "example": "SHOW CATALOG INTEGRATIONS;\n\nSHOW CATALOG INTEGRATIONS LIKE 'demo%';"
},
{
    "function_name": "SHOW CALLER GRANTS",
    "summary": "Lists the caller grants being used to implement restricted caller’s rights.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-caller-grants",
    "title": "SHOW CALLER GRANTS",
    "description": "",
    "syntax": "SHOW CALLER GRANTS\n{\n{ ON <object_type> <object_name> | ON ACCOUNT }\n| TO { ROLE | DATABASE ROLE }  <owner_name>\n}",
    "example": "SHOW CALLER GRANTS ON TABLE t1;\n\nSHOW CALLER GRANTS ON ACCOUNT;\n\nSHOW CALLER GRANTS TO DATABASE ROLE db.owner_role;"
},
{
    "function_name": "SHOW AVAILABLE ORGANIZATION PROFILES",
    "summary": "Lists the organization profiles available in the user’s organization.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-available-organization-profiles",
    "title": "SHOW AVAILABLE ORGANIZATION PROFILES",
    "description": "",
    "syntax": "SHOW AVAILABLE ORGANIZATION PROFILES",
    "example": "SHOW AVAILABLE ORGANIZATION PROFILES;\n\n+-------------------------+-------------+---------------------+---------------------+---------------------+------------------------+---------------------------------+---------------------+---------------------+-----------------------------------+\n|created_on               |name         |system_generated     |state                |organization_name    |title                   |description                      |owner_contact        |approver_contact     |can_publish_listings_with_profile  |\n+-------------------------+-------------+---------------------+---------------------+---------------------+------------------------+---------------------------------+---------------------+---------------------+-----------------------------------+\n|2025-01-01 01:01:01.000  |ORGPROFILE   |FALSE                |ACTIVE               |TESTORG              |My Organization Profile |Organization profile description |test@test.com        |test@test.com        |TRUE                               |\n+-------------------------+-------------+---------------------+---------------------+---------------------+------------------------+---------------------------------+---------------------+---------------------+-----------------------------------+"
},
{
    "function_name": "SHOW AVAILABLE LISTINGS",
    "summary": "Lists the listings that are available to the user who runs the command.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-available-listings",
    "title": "SHOW AVAILABLE LISTINGS",
    "description": "Lists the listings that are available to the user who runs the command.\nFor more information, see",
    "syntax": "SHOW AVAILABLE LISTINGS\n\nSHOW [ TERSE ] AVAILABLE LISTINGS\n    [ LIMIT <rows> ]\n    [ IS_IMPORTED = TRUE ]\n    [ IS_ORGANIZATION = TRUE ]\n    [ IS_SHARED_WITH_ME = TRUE ]",
    "example": ""
},
{
    "function_name": "SHOW AUTHENTICATION POLICIES",
    "summary": "Lists authentication policy information, including the creation date, database and schema names, owner, and any available comments.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-authentication-policies",
    "title": "SHOW AUTHENTICATION POLICIES",
    "description": "Lists",
    "syntax": "SHOW AUTHENTICATION POLICIES\n  [ LIKE '<pattern>' ]\n  [ IN\n       {\n         ACCOUNT                                         |\n\n         DATABASE                                        |\n         DATABASE <database_name>                        |\n\n         SCHEMA                                          |\n         SCHEMA <schema_name>                            |\n\n         APPLICATION <application_name>                  |\n         APPLICATION PACKAGE <application_package_name>  |\n       }\n    |\n    ON\n       {\n         ACCOUNT           |\n         USER <user_name>  |\n       }\n  ]\n  [ STARTS WITH '<name_string>' ]\n  [ LIMIT <rows> ]",
    "example": "SHOW AUTHENTICATION POLICIES;"
},
{
    "function_name": "SHOW APPLICATIONS",
    "summary": "Lists the application objects for which you have access privileges across your entire account in the",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-applications",
    "title": "SHOW APPLICATIONS",
    "description": "",
    "syntax": "SHOW APPLICATIONS [ LIKE '<pattern>' ]\n  [ STARTS WITH '<name_string>' ]\n  [ LIMIT <rows> [ FROM '<name_string>' ] ];",
    "example": "SHOW APPLICATIONS;\n\n+-------------------------------+------------------------+------------+------------+---------------------+----------------------------+---------------+---------+---------------------+-----------------+-------+---------+----------------+\n| created_on                    | name                   | is_default | is_current | source_type         | source                     | owner         | comment | version             | label           | patch | options | retention_time |\n|-------------------------------+------------------------+------------+------------+---------------------+----------------------------+---------------+---------+---------------------+-----------------+-------+---------+----------------|\n| 2023-02-03 10:14:09.828 -0800 | hello_snowflake_app    | N          | Y          | APPLICATION PACKAGE | hello_snowflake_package    | PROVIDER_ROLE |         | v1                  | Version v1      |     0 |         | 1              |\n| 2023-03-22 16:12:40.373 -0700 | PRODUCTION_APP         | Y          | Y          | APPLICATION PACKAGE | hello_snowflake_package    | PROVIDER_ROLE |         | v2                  | Version v2      |     0 |         | 1              |\n+-------------------------------+------------------------+------------+------------+---------------------+----------------------------+---------------+---------+---------------------+-----------------+-------+---------+----------------+"
},
{
    "function_name": "SHOW APPLICATION PACKAGES",
    "summary": "Lists the application packages for which you have access privileges across your entire account in the Native Apps Framework.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-application-packages",
    "title": "SHOW APPLICATION PACKAGES",
    "description": "",
    "syntax": "SHOW APPLICATION PACKAGES [ LIKE '<pattern>' ]\n  [ STARTS WITH '<name_string>' ]\n  [ LIMIT <rows> [ FROM '<name_string>' ] ];",
    "example": "SHOW APPLICATION PACKAGES;\n\n+-------------------------------+-------------------------+------------+------------+--------------+----------------+----------+---------+----------------+------------+-------------------+\n| created_on                    | name                    | is_default | is_current | distribution | owner          | comment  | options | retention_time | dropped_on | application_class |\n| 2023-06-02 16:28:31.371 -0700 | hello_snowflake_package | N          | N          | INTERNAL     | ACCOUNTADMIN   |          |         | 1              | NULL       | NULL              |\n+-------------------------------+-------------------------+------------+------------+--------------+----------------+----------+---------+----------------+------------+-------------------+"
},
{
    "function_name": "SHOW APPLICATION ROLES",
    "summary": "Lists the application roles in the specified app for which for which you have access privileges.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-application-roles",
    "title": "SHOW APPLICATION ROLES",
    "description": "",
    "syntax": "SHOW APPLICATION ROLES IN APPLICATION <name>\n  [ LIKE <pattern> ] [ LIMIT <rows> [ FROM '<name_string>' ] ]",
    "example": "SHOW APPLICATION ROLES IN APPLICATION hello_snowflake_app;\n\nSHOW APPLICATION ROLES IN APPLICATION myapp LIMIT 10 FROM 'app_role2';"
},
{
    "function_name": "SHOW ALERTS",
    "summary": "Lists the alerts for which you have access privileges.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-alerts",
    "title": "SHOW ALERTS",
    "description": "Lists the",
    "syntax": "SHOW [ TERSE ] ALERTS [ LIKE '<pattern>' ]\n                      [ IN\n                            {\n                              ACCOUNT                                         |\n\n                              DATABASE                                        |\n                              DATABASE <database_name>                        |\n\n                              SCHEMA                                          |\n                              SCHEMA <schema_name>                            |\n                              <schema_name>\n\n                              APPLICATION <application_name>                  |\n                              APPLICATION PACKAGE <application_package_name>  |\n                            }\n                      ]\n                      [ STARTS WITH '<name_string>' ]\n                      [ LIMIT <rows> [ FROM '<name_string>' ] ]",
    "example": ""
},
{
    "function_name": "SHOW AGGREGATION POLICIES",
    "summary": "Lists information about existing aggregation policies, including the creation date, database and schema names, owner, and any available comments.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-aggregation-policies",
    "title": "SHOW AGGREGATION POLICIES",
    "description": "",
    "syntax": "SHOW AGGREGATION POLICIES  [ LIKE '<pattern>' ]\n                           [ IN\n                               {\n                                 ACCOUNT                  |\n\n                                 DATABASE [ <database_name> ] |\n\n                                 SCHEMA [ <schema_name> ]     |\n                               }\n                           ]",
    "example": ""
},
{
    "function_name": "SHOW ACCOUNTS",
    "summary": "Lists all the accounts in your organization, excluding managed accounts.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-accounts",
    "title": "SHOW ACCOUNTS",
    "description": "Lists all the accounts in your organization, excluding",
    "syntax": "SHOW ACCOUNTS [ HISTORY ] [ LIKE '<pattern>' ]",
    "example": "SHOW ACCOUNTS LIKE 'myaccount%';"
},
{
    "function_name": "SHOW <objects>",
    "summary": "Lists the existing objects for the specified object type.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show",
    "title": "SHOW",
    "description": "Lists the existing objects for the specified object type. The output includes metadata for the objects, including:",
    "syntax": "",
    "example": ""
},
{
    "function_name": "SET",
    "summary": "Initializes the value of a session variable to the result of a SQL expression.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/set",
    "title": "SET",
    "description": "Initializes the value of a",
    "syntax": "SET <var> = <expr>\n\nSET ( <var> [ , <var> ... ] )  = ( <expr> [ , <expr> ... ] )",
    "example": "SET V1 = 10;\n\nSET V2 = 'example';\n\nSET (V1, V2) = (10, 'example');\n\nSET id_threshold = (SELECT COUNT(*)/2 FROM table1);\n\nSET (min, max) = (40, 70);\n\nSET (min, max) = (50, 2 * $min);\n\nSELECT $max;\n\n+------+\n| $MAX |\n|------|\n|   80 |\n+------+"
},
{
    "function_name": "SELECT",
    "summary": "SELECT can be used as either a statement or as a clause within other statements.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/select",
    "title": "SELECT",
    "description": "SELECT can be used as either a statement or as a clause within other statements:",
    "syntax": "[ ... ]\nSELECT [ { ALL | DISTINCT } ]\n       [ TOP <n> ]\n       [{<object_name>|<alias>}.]*\n\n       [ ILIKE '<pattern>' ]\n\n       [ EXCLUDE\n         {\n           <col_name> | ( <col_name>, <col_name>, ... )\n         }\n       ]\n\n       [ REPLACE\n         {\n           ( <expr> AS <col_name> [ , <expr> AS <col_name>, ... ] )\n         }\n       ]\n\n       [ RENAME\n         {\n           <col_name> AS <col_alias>\n           | ( <col_name> AS <col_alias>, <col_name> AS <col_alias>, ... )\n         }\n       ]",
    "example": "CREATE TABLE employee_table (\n    employee_ID INTEGER,\n    last_name VARCHAR,\n    first_name VARCHAR,\n    department_ID INTEGER\n    );\n\nCREATE TABLE department_table (\n    department_ID INTEGER,\n    department_name VARCHAR\n    );\n\nINSERT INTO employee_table (employee_ID, last_name, first_name, department_ID) VALUES\n    (101, 'Montgomery', 'Pat', 1),\n    (102, 'Levine', 'Terry', 2),\n    (103, 'Comstock', 'Dana', 2);\n\nINSERT INTO department_table (department_ID, department_name) VALUES\n    (1, 'Engineering'),\n    (2, 'Customer Support'),\n    (3, 'Finance');\n\nSELECT * FROM employee_table;\n\n+-------------+------------+------------+---------------+\n| EMPLOYEE_ID | LAST_NAME  | FIRST_NAME | DEPARTMENT_ID |\n|-------------+------------+------------+---------------|\n|         101 | Montgomery | Pat        |             1 |\n|         102 | Levine     | Terry      |             2 |\n|         103 | Comstock   | Dana       |             2 |\n+-------------+------------+------------+---------------+\n\nSELECT * ILIKE '%id%' FROM employee_table;\n\n+-------------+---------------+\n| EMPLOYEE_ID | DEPARTMENT_ID |\n|-------------+---------------|\n|         101 |             1 |\n|         102 |             2 |\n|         103 |             2 |\n+-------------+---------------+\n\nSELECT * EXCLUDE department_id FROM employee_table;\n\n+-------------+------------+------------+\n| EMPLOYEE_ID | LAST_NAME  | FIRST_NAME |\n|-------------+------------+------------|\n|         101 | Montgomery | Pat        |\n|         102 | Levine     | Terry      |\n|         103 | Comstock   | Dana       |\n+-------------+------------+------------+\n\nSELECT * EXCLUDE (department_id, employee_id) FROM employee_table;\n\n+------------+------------+\n| LAST_NAME  | FIRST_NAME |\n|------------+------------|\n| Montgomery | Pat        |\n| Levine     | Terry      |\n| Comstock   | Dana       |\n+------------+------------+\n\nSELECT * RENAME department_id AS department FROM employee_table;\n\n+-------------+------------+------------+------------+\n| EMPLOYEE_ID | LAST_NAME  | FIRST_NAME | DEPARTMENT |\n|-------------+------------+------------+------------|\n|         101 | Montgomery | Pat        |          1 |\n|         102 | Levine     | Terry      |          2 |\n|         103 | Comstock   | Dana       |          2 |\n+-------------+------------+------------+------------+\n\nSELECT * RENAME (department_id AS department, employee_id AS id) FROM employee_table;\n\n+-----+------------+------------+------------+\n|  ID | LAST_NAME  | FIRST_NAME | DEPARTMENT |\n|-----+------------+------------+------------|\n| 101 | Montgomery | Pat        |          1 |\n| 102 | Levine     | Terry      |          2 |\n| 103 | Comstock   | Dana       |          2 |\n+-----+------------+------------+------------+\n\nSELECT * EXCLUDE first_name RENAME (department_id AS department, employee_id AS id) FROM employee_table;\n\n+-----+------------+------------+\n|  ID | LAST_NAME  | DEPARTMENT |\n|-----+------------+------------|\n| 101 | Montgomery |          1 |\n| 102 | Levine     |          2 |\n| 103 | Comstock   |          2 |\n+-----+------------+------------+\n\nSELECT * ILIKE '%id%' RENAME department_id AS department FROM employee_table;\n\n+-------------+------------+\n| EMPLOYEE_ID | DEPARTMENT |\n|-------------+------------|\n|         101 |          1 |\n|         102 |          2 |\n|         103 |          2 |\n+-------------+------------+\n\nSELECT * REPLACE ('DEPT-' || department_id AS department_id) FROM employee_table;\n\n+-------------+------------+------------+---------------+\n| EMPLOYEE_ID | LAST_NAME  | FIRST_NAME | DEPARTMENT_ID |\n|-------------+------------+------------+---------------|\n|         101 | Montgomery | Pat        | DEPT-1        |\n|         102 | Levine     | Terry      | DEPT-2        |\n|         103 | Comstock   | Dana       | DEPT-2        |\n+-------------+------------+------------+---------------+\n\nSELECT * REPLACE ('DEPT-' || department_id AS department_id) RENAME department_id AS department FROM employee_table;\n\n+-------------+------------+------------+------------+\n| EMPLOYEE_ID | LAST_NAME  | FIRST_NAME | DEPARTMENT |\n|-------------+------------+------------+------------|\n|         101 | Montgomery | Pat        | DEPT-1     |\n|         102 | Levine     | Terry      | DEPT-2     |\n|         103 | Comstock   | Dana       | DEPT-2     |\n+-------------+------------+------------+------------+\n\nSELECT * ILIKE '%id%' REPLACE('DEPT-' || department_id AS department_id) FROM employee_table;\n\n+-------------+---------------+\n| EMPLOYEE_ID | DEPARTMENT_ID |\n|-------------+---------------|\n|         101 | DEPT-1        |\n|         102 | DEPT-2        |\n|         103 | DEPT-2        |\n+-------------+---------------+\n\nSELECT\n  employee_table.* EXCLUDE department_id,\n  department_table.* RENAME department_name AS department\nFROM employee_table INNER JOIN department_table\n  ON employee_table.department_id = department_table.department_id\nORDER BY department, last_name, first_name;\n\n+-------------+------------+------------+---------------+------------------+\n| EMPLOYEE_ID | LAST_NAME  | FIRST_NAME | DEPARTMENT_ID | DEPARTMENT       |\n|-------------+------------+------------+---------------+------------------|\n|         103 | Comstock   | Dana       |             2 | Customer Support |\n|         102 | Levine     | Terry      |             2 | Customer Support |\n|         101 | Montgomery | Pat        |             1 | Engineering      |\n+-------------+------------+------------+---------------+------------------+\n\nSELECT last_name FROM employee_table WHERE employee_ID = 101;\n+------------+\n| LAST_NAME  |\n|------------|\n| Montgomery |\n+------------+\n\nSELECT department_name, last_name, first_name\n    FROM employee_table INNER JOIN department_table\n        ON employee_table.department_ID = department_table.department_ID\n    ORDER BY department_name, last_name, first_name;\n+------------------+------------+------------+\n| DEPARTMENT_NAME  | LAST_NAME  | FIRST_NAME |\n|------------------+------------+------------|\n| Customer Support | Comstock   | Dana       |\n| Customer Support | Levine     | Terry      |\n| Engineering      | Montgomery | Pat        |\n+------------------+------------+------------+\n\nSELECT $2 FROM employee_table ORDER BY $2;\n+------------+\n| $2         |\n|------------|\n| Comstock   |\n| Levine     |\n| Montgomery |\n+------------+\n\nSELECT pi() * 2.0 * 2.0 AS area_of_circle;\n+----------------+\n| AREA_OF_CIRCLE |\n|----------------|\n|   12.566370614 |\n+----------------+\n\nCREATE OR REPLACE TABLE table1 (product_id NUMBER);\n\nCREATE OR REPLACE TABLE table2 (prod_id NUMBER);\n\nSELECT t1.product_id AS prod_id, t2.prod_id\n  FROM table1 AS t1 JOIN table2 AS t2\n    ON t1.product_id=t2.prod_id\n  GROUP BY prod_id, t2.prod_id;\n\n001104 (42601): SQL compilation error: error line 1 at position 7\n'T1.PRODUCT_ID' in select clause is neither an aggregate nor in the group by clause."
},
{
    "function_name": "ROLLBACK",
    "summary": "Rolls back an open transaction in the current session.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/rollback",
    "title": "ROLLBACK",
    "description": "Rolls back an open transaction in the current session.",
    "syntax": "ROLLBACK [ WORK ]",
    "example": "SELECT COUNT(*) FROM A1;\n\n+----------+\n| COUNT(*) |\n|----------+\n|        0 |\n+----------+\n\nBEGIN NAME T4;\n\nSELECT CURRENT_TRANSACTION();\n\n+-----------------------+\n| CURRENT_TRANSACTION() |\n|-----------------------+\n| 1432071523422         |\n+-----------------------+\n\nINSERT INTO A1 VALUES (1), (2);\n\n+-------------------------+\n| number of rows inserted |\n|-------------------------+\n| 2                       |\n+-------------------------+\n\nROLLBACK;\n\nSELECT COUNT(*) FROM A1;\n\n+----------+\n| COUNT(*) |\n|----------+\n|        0 |\n+----------+\n\nSELECT CURRENT_TRANSACTION();\n\n+-----------------------+\n| CURRENT_TRANSACTION() |\n|-----------------------+\n| [NULL]                |\n+-----------------------+\n\nSELECT LAST_TRANSACTION();\n\n+--------------------+\n| LAST_TRANSACTION() |\n|--------------------+\n| 1432071523422      |\n+--------------------+"
},
{
    "function_name": "REVOKE SERVICE ROLE",
    "summary": "Revokes a service role from an account role, application role, or database role.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/revoke-service-role",
    "title": "REVOKE SERVICE ROLE",
    "description": "",
    "syntax": "REVOKE SERVICE ROLE <name> FROM\n{\n  ROLE <role_name>                     |\n  APPLICATION ROLE <application_role_name>  |\n  DATABASE ROLE <database_role_name>\n}",
    "example": "REVOKE SERVICE ROLE echo_service!echoendpoint_role FROM ROLE service_function_user_role;"
},
{
    "function_name": "REVOKE ROLE",
    "summary": "Removes a role from another role or a user.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/revoke-role",
    "title": "REVOKE ROLE",
    "description": "Removes a role from another role or a user.",
    "syntax": "REVOKE ROLE <name> FROM { ROLE <parent_role_name> | USER <user_name> }",
    "example": "REVOKE ROLE analyst FROM ROLE SYSADMIN;\n\nREVOKE ROLE analyst FROM USER user1;"
},
{
    "function_name": "REVOKE <privileges> … FROM USER",
    "summary": "Removes one or more privileges on a securable object from a user.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/revoke-privilege-user",
    "title": "REVOKE",
    "description": "Removes one or more privileges on a securable object from a user. The privileges that can be revoked are object-specific.",
    "syntax": "REVOKE [ GRANT OPTION FOR ]\n    {\n       { globalPrivileges         | ALL [ PRIVILEGES ] } ON ACCOUNT\n     | { accountObjectPrivileges  | ALL [ PRIVILEGES ] } ON { RESOURCE MONITOR | WAREHOUSE | COMPUTE POOL | DATABASE | INTEGRATION | CONNECTION | FAILOVER GROUP | REPLICATION GROUP | EXTERNAL VOLUME } <object_name>\n     | { schemaPrivileges         | ALL [ PRIVILEGES ] } ON { SCHEMA <schema_name> | ALL SCHEMAS IN DATABASE <db_name> }\n     | { schemaObjectPrivileges   | ALL [ PRIVILEGES ] } ON { <object_type> <object_name> | ALL <object_type_plural> IN SCHEMA <schema_name> }\n    }\n  FROM [ USER ] <user_name> [ RESTRICT | CASCADE ]",
    "example": "REVOKE USAGE ON STREAMLIT streamlit_db.streamlit_schema.streamlit_app FROM USER joe;\n\nREVOKE USAGE ON PROCEDURE mydb.myschema.myprocedure(number) FROM USER user1;"
},
{
    "function_name": "REVOKE <privilege> … FROM SHARE",
    "summary": "Revokes access privileges for databases and other supported database objects (schemas, tables, and views) from a share.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/revoke-privilege-share",
    "title": "REVOKE",
    "description": "Revokes access privileges for databases and other supported database objects (schemas, tables, and views) from a share. Revoking\nprivileges on these objects effectively removes the objects from the share, disabling access to the objects granted via the database\nrole in all consumer accounts that have created a database from the share.",
    "syntax": "REVOKE objectPrivilege ON\n     {  DATABASE <name>\n      | SCHEMA <name>\n      | SEMANTIC VIEW <name>\n      | { TABLE <name> | ALL TABLES IN SCHEMA <schema_name> }\n      | { EXTERNAL TABLE <name> | ALL EXTERNAL TABLES IN SCHEMA <schema_name> }\n      | { ICEBERG TABLE <name> | ALL ICEBERG TABLES IN SCHEMA <schema_name> }\n      | { DYNAMIC TABLE <name> | ALL DYNAMIC TABLES IN SCHEMA <schema_name> }\n      | { VIEW <name> | ALL VIEWS IN SCHEMA <schema_name> }  }\n  FROM SHARE <share_name>",
    "example": "REVOKE SELECT ON VIEW mydb.shared_schema.view1 FROM SHARE share1;\n\nREVOKE SELECT ON VIEW mydb.shared_schema.view3 FROM SHARE share1;\n\nREVOKE USAGE ON SCHEMA mydb.shared_schema FROM SHARE share1;\n\nREVOKE SELECT ON ALL TABLES IN SCHEMA mydb.public FROM SHARE share1;\n\nREVOKE SELECT ON ALL ICEBERG TABLES IN SCHEMA mydb.public FROM SHARE share1;\n\nREVOKE SELECT ON ALL DYNAMIC TABLES IN SCHEMA mydb.public FROM SHARE share1;\n\nREVOKE SELECT ON ICEBERG TABLE mydb.shared_schema.iceberg_table_1 FROM SHARE share1;\n\nREVOKE SELECT ON DYNAMIC TABLE mydb TO SHARE share1;\n\nREVOKE USAGE ON SCHEMA mydb.public FROM SHARE share1;\n\nREVOKE USAGE ON DATABASE mydb FROM SHARE share1;\n\nREVOKE REFERENCE_USAGE ON DATABASE database2 FROM SHARE share1;"
},
{
    "function_name": "REVOKE <privileges> … FROM APPLICATION ROLE",
    "summary": "Revokes one or more access privileges on a securable schema-level object from an application role.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/revoke-privilege-application-role",
    "title": "REVOKE",
    "description": "",
    "syntax": "REVOKE [ GRANT OPTION FOR ]\n    {\n    | { schemaPrivileges         | ALL [ PRIVILEGES ] } ON { SCHEMA <schema_name> | ALL SCHEMAS IN DATABASE <db_name> }\n    | { schemaPrivileges         | ALL [ PRIVILEGES ] } ON { FUTURE SCHEMAS IN DATABASE <db_name> }\n    | { schemaObjectPrivileges   | ALL [ PRIVILEGES ] } ON { <object_type> <object_name> | ALL <object_type_plural> IN SCHEMA <schema_name> }\n    | { schemaObjectPrivileges   | ALL [ PRIVILEGES ] } ON FUTURE <object_type_plural> IN { DATABASE <db_name> | SCHEMA <schema_name> }\n    }\n  FROM APPLICATION ROLE <name> [ RESTRICT | CASCADE ]",
    "example": ""
},
{
    "function_name": "REVOKE <privileges> … FROM APPLICATION",
    "summary": "Revokes one or more access privileges on a securable object from an application.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/revoke-privilege-application",
    "title": "REVOKE",
    "description": "Revokes one or more access privileges on a securable object from an application. The privileges that can be revoked are\nobject-specific.",
    "syntax": "REVOKE {  { globalPrivileges } ON ACCOUNT\n        | { accountObjectPrivileges  | ALL [ PRIVILEGES ] } ON { USER | RESOURCE MONITOR | WAREHOUSE | COMPUTE POOL | DATABASE | INTEGRATION | CONNECTION | FAILOVER GROUP | REPLICATION GROUP | EXTERNAL VOLUME } <object_name>\n        | { schemaPrivileges         | ALL [ PRIVILEGES ] } ON { SCHEMA <schema_name> | ALL SCHEMAS IN DATABASE <db_name> }\n        | { schemaObjectPrivileges   | ALL [ PRIVILEGES ] } ON { <object_type> <object_name> | ALL <object_type_plural> IN { DATABASE <db_name> | SCHEMA <schema_name> }\n       }\n     FROM APPLICATION <name>",
    "example": ""
},
{
    "function_name": "REVOKE <privileges> … FROM ROLE",
    "summary": "Removes one or more privileges on a securable object from a role or database role.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/revoke-privilege",
    "title": "REVOKE",
    "description": "Removes one or more privileges on a securable object from a role or database role. The privileges that can be revoked are object-specific.",
    "syntax": "REVOKE [ GRANT OPTION FOR ]\n    {\n       { globalPrivileges         | ALL [ PRIVILEGES ] } ON ACCOUNT\n     | { accountObjectPrivileges  | ALL [ PRIVILEGES ] } ON { RESOURCE MONITOR | WAREHOUSE | COMPUTE POOL | DATABASE | INTEGRATION | CONNECTION | FAILOVER GROUP | REPLICATION GROUP | EXTERNAL VOLUME } <object_name>\n     | { schemaPrivileges         | ALL [ PRIVILEGES ] } ON { SCHEMA <schema_name> | ALL SCHEMAS IN DATABASE <db_name> }\n     | { schemaPrivileges         | ALL [ PRIVILEGES ] } ON { FUTURE SCHEMAS IN DATABASE <db_name> }\n     | { schemaObjectPrivileges   | ALL [ PRIVILEGES ] } ON { <object_type> <object_name> | ALL <object_type_plural> IN SCHEMA <schema_name> }\n     | { schemaObjectPrivileges   | ALL [ PRIVILEGES ] } ON FUTURE <object_type_plural> IN { DATABASE <db_name> | SCHEMA <schema_name> }\n    }\n  FROM [ ROLE ] <role_name> [ RESTRICT | CASCADE ]",
    "example": "REVOKE CREATE WAREHOUSE ON ACCOUNT FROM ROLE analyst;\n\nREVOKE OPERATE ON WAREHOUSE report_wh FROM ROLE analyst;\n\nREVOKE GRANT OPTION FOR OPERATE ON WAREHOUSE report_wh FROM ROLE analyst;\n\nREVOKE SELECT ON ALL TABLES IN SCHEMA mydb.myschema from ROLE analyst;\n\nREVOKE ALL PRIVILEGES ON FUNCTION add5(number) FROM ROLE analyst;\n\nREVOKE ALL PRIVILEGES ON FUNCTION add5(string) FROM ROLE analyst;\n\nREVOKE ALL PRIVILEGES ON PROCEDURE clean_schema(string) FROM ROLE analyst;\n\nREVOKE ALL PRIVILEGES ON procedure clean_schema(string, string) FROM ROLE analyst;\n\nREVOKE SELECT, INSERT ON FUTURE TABLES IN SCHEMA mydb.myschema\n  FROM ROLE role1;\n\nREVOKE SELECT ON ALL TABLES IN SCHEMA mydb.myschema\n  FROM DATABASE ROLE mydb.dr1;\n\nREVOKE ALL PRIVILEGES ON FUNCTION add5(number)\n  FROM DATABASE ROLE mydb.dr1;\n\nREVOKE ALL PRIVILEGES ON FUNCTION add5(string)\n  FROM DATABASE ROLE mydb.dr1;\n\nREVOKE ALL PRIVILEGES ON PROCEDURE clean_schema(string)\n  FROM DATABASE ROLE mydb.dr1;\n\nREVOKE ALL PRIVILEGES ON procedure clean_schema(string, string)\n  FROM DATABASE ROLE mydb.dr1;\n\nREVOKE SELECT,INSERT ON FUTURE TABLES IN SCHEMA mydb.myschema\n  FROM DATABASE ROLE mydb.dr1;"
},
{
    "function_name": "REVOKE DATABASE ROLE … FROM SHARE",
    "summary": "Revokes a database role from a share.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/revoke-database-role-share",
    "title": "REVOKE DATABASE ROLE … FROM SHARE",
    "description": "Revokes a database role from a share.",
    "syntax": "REVOKE DATABASE ROLE <name>\n  FROM SHARE <share_name>",
    "example": "REVOKE DATABASE ROLE d1.dr1 FROM SHARE share1;"
},
{
    "function_name": "REVOKE DATABASE ROLE",
    "summary": "Revokes a database role from an account role or another database role.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/revoke-database-role",
    "title": "REVOKE DATABASE ROLE",
    "description": "Revokes a database role from an",
    "syntax": "REVOKE DATABASE ROLE <name> FROM { ROLE | DATABASE ROLE } <parent_role_name>",
    "example": "REVOKE DATABASE ROLE analyst FROM ROLE SYSADMIN;\n\nREVOKE DATABASE ROLE dr1 FROM DATABASE ROLE dr2;"
},
{
    "function_name": "REVOKE CALLER",
    "summary": "Revokes privileges that were previously granted to an executable owner using a caller grant.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/revoke-caller",
    "title": "REVOKE CALLER",
    "description": "",
    "syntax": "REVOKE CALLER <object_privilege> [ , <object_privilege> ... ]\n  ON <object_type> <object_name>\n  FROM { ROLE | DATABASE ROLE } <grantee_name>\n\nREVOKE ALL CALLER PRIVILEGES\n  ON <object_type> <object_name>\n  FROM { ROLE | DATABASE ROLE } <grantee_name>\n\nREVOKE INHERITED CALLER <object_privilege> [ , <object_privilege> ... ]\n  ON ALL <object_type_plural>\n  IN { ACCOUNT | DATABASE <db_name> | SCHEMA <schema_name> | APPLICATION <app_name> | APPLICATION PACKAGE <app_pkg_name> }\n  FROM { ROLE | DATABASE ROLE } <grantee_name>\n\nREVOKE ALL INHERITED CALLER PRIVILEGES\n  ON ALL <object_type_plural>\n  IN { ACCOUNT | DATABASE <db_name> | SCHEMA <schema_name> | APPLICATION <app_name> | APPLICATION PACKAGE <app_pkg_name> }\n  FROM { ROLE | DATABASE ROLE } <grantee_name>",
    "example": "REVOKE ALL INHERITED CALLER PRIVILEGES ON ALL VIEWS IN ACCOUNT FROM ROLE owner_role;\n\nREVOKE CALLER USAGE ON SCHEMA db.sch1 FROM ROLE owner_role;"
},
{
    "function_name": "REVOKE APPLICATION ROLE",
    "summary": "Revokes an application role from an account role or another application role.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/revoke-application-role",
    "title": "REVOKE APPLICATION ROLE",
    "description": "",
    "syntax": "REVOKE APPLICATION ROLE <name> FROM { ROLE <parent_role_name> | APPLICATION ROLE <application_role> | APPLICATION <application> }",
    "example": "REVOKE APPLICATION ROLE app_role FROM APPLICATION ROLE other_role;"
},
{
    "function_name": "REMOVE",
    "summary": "Removes files from either an external (external cloud storage) or internal (i.e. Snowflake) stage.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/remove",
    "title": "REMOVE",
    "description": "Removes files from either an external (external cloud storage) or internal (i.e. Snowflake) stage.",
    "syntax": "REMOVE { internalStage | externalStage } [ PATTERN = '<regex_pattern>' ]",
    "example": "REMOVE @mystage/path1/subpath2;\n\nREMOVE @%orders;\n\nRM @~ pattern='.*jun.*';"
},
{
    "function_name": "PUT",
    "summary": "Uploads one or more data files from a local file system onto an internal stage.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/put",
    "title": "PUT",
    "description": "Uploads one or more data files from a local file system onto an",
    "syntax": "PUT file://<absolute_path_to_file>/<filename> internalStage\n    [ PARALLEL = <integer> ]\n    [ AUTO_COMPRESS = TRUE | FALSE ]\n    [ SOURCE_COMPRESSION = AUTO_DETECT | GZIP | BZ2 | BROTLI | ZSTD | DEFLATE | RAW_DEFLATE | NONE ]\n    [ OVERWRITE = TRUE | FALSE ]",
    "example": "PUT file:///tmp/data/mydata.csv @my_int_stage;\n\nPUT file:///tmp/data/orders_001.csv @%orderstiny_ext\n  AUTO_COMPRESS = FALSE;\n\nPUT file:///tmp/data/orders_*01.csv @my_int_stage\n  AUTO_COMPRESS = FALSE;\n\nPUT 'file:///tmp/data/orders 001.csv' @my_int_stage\n  AUTO_COMPRESS = FALSE;\n\nPUT file://C:\\temp\\data\\mydata.csv @~\n  AUTO_COMPRESS = TRUE;\n\nPUT 'file://C:/temp/data/my data.csv' @my_int_stage\n  AUTO_COMPRESS = TRUE;"
},
{
    "function_name": "MERGE",
    "summary": "Inserts, updates, and deletes values in a table based on values in a second table or a subquery.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/merge",
    "title": "MERGE",
    "description": "Inserts, updates, and deletes values in a table based on values in a second table or a subquery. This can be useful if the second table\nis a change log that contains new rows (to be inserted), modified rows (to be updated), and/or marked rows (to be deleted) in the target\ntable.",
    "syntax": "MERGE INTO <target_table> USING <source> ON <join_expr> { matchedClause | notMatchedClause } [ ... ]",
    "example": "CREATE TABLE target_table (ID INTEGER, description VARCHAR);\n\nCREATE TABLE source_table (ID INTEGER, description VARCHAR);\n\nINSERT INTO target_table (ID, description) VALUES\n    (10, 'To be updated (this is the old value)')\n    ;\n\nINSERT INTO source_table (ID, description) VALUES\n    (10, 'To be updated (this is the new value)')\n    ;\n\nMERGE INTO target_table USING source_table \n    ON target_table.id = source_table.id\n    WHEN MATCHED THEN \n        UPDATE SET target_table.description = source_table.description;\n+------------------------+\n| number of rows updated |\n|------------------------|\n|                      1 |\n+------------------------+\n\nSELECT * FROM target_table;\n+----+---------------------------------------+\n| ID | DESCRIPTION                           |\n|----+---------------------------------------|\n| 10 | To be updated (this is the new value) |\n+----+---------------------------------------+\nSELECT * FROM source_table;\n+----+---------------------------------------+\n| ID | DESCRIPTION                           |\n|----+---------------------------------------|\n| 10 | To be updated (this is the new value) |\n+----+---------------------------------------+\n\nMERGE INTO t1 USING t2 ON t1.t1Key = t2.t2Key\n    WHEN MATCHED AND t2.marked = 1 THEN DELETE\n    WHEN MATCHED AND t2.isNewStatus = 1 THEN UPDATE SET val = t2.newVal, status = t2.newStatus\n    WHEN MATCHED THEN UPDATE SET val = t2.newVal\n    WHEN NOT MATCHED THEN INSERT (val, status) VALUES (t2.newVal, t2.newStatus);\n\nTRUNCATE TABLE source_table;\n\nTRUNCATE TABLE target_table;\n\nINSERT INTO source_table (ID, description) VALUES\n    (50, 'This is a duplicate in the source and has no match in target'),\n    (50, 'This is a duplicate in the source and has no match in target')\n    ;\n\nMERGE INTO target_table USING source_table \n    ON target_table.id = source_table.id\n    WHEN MATCHED THEN \n        UPDATE SET target_table.description = source_table.description\n    WHEN NOT MATCHED THEN \n        INSERT (ID, description) VALUES (source_table.id, source_table.description);\n+-------------------------+------------------------+\n| number of rows inserted | number of rows updated |\n|-------------------------+------------------------|\n|                       2 |                      0 |\n+-------------------------+------------------------+\n\nSELECT ID FROM target_table;\n+----+\n| ID |\n|----|\n| 50 |\n| 50 |\n+----+\n\n-- Setup for example.\nCREATE TABLE target_orig (k NUMBER, v NUMBER);\nINSERT INTO target_orig VALUES (0, 10);\n\nCREATE TABLE src (k NUMBER, v NUMBER);\nINSERT INTO src VALUES (0, 11), (0, 12), (0, 13);\n\n-- Multiple updates conflict with each other.\n-- If ERROR_ON_NONDETERMINISTIC_MERGE=true, returns an error;\n-- otherwise updates target.v with a value (e.g. 11, 12, or 13) from one of the duplicate rows (row not defined).\n\nCREATE OR REPLACE TABLE target CLONE target_orig;\n\nMERGE INTO target\n  USING src ON target.k = src.k\n  WHEN MATCHED THEN UPDATE SET target.v = src.v;\n\n-- Updates and deletes conflict with each other.\n-- If ERROR_ON_NONDETERMINISTIC_MERGE=true, returns an error;\n-- otherwise either deletes the row or updates target.v with a value (e.g. 12 or 13) from one of the duplicate rows (row not defined).\n\nCREATE OR REPLACE TABLE target CLONE target_orig;\n\nMERGE INTO target\n  USING src ON target.k = src.k\n  WHEN MATCHED AND src.v = 11 THEN DELETE\n  WHEN MATCHED THEN UPDATE SET target.v = src.v;\n\n-- Multiple deletes do not conflict with each other;\n-- joined values that do not match any clause do not prevent the delete (src.v = 13).\n-- Merge succeeds and the target row is deleted.\n\nCREATE OR REPLACE TABLE target CLONE target_orig;\n\nMERGE INTO target\n  USING src ON target.k = src.k\n  WHEN MATCHED AND src.v <= 12 THEN DELETE;\n\n-- Joined values that do not match any clause do not prevent an update (src.v = 12, 13).\n-- Merge succeeds and the target row is set to target.v = 11.\n\nCREATE OR REPLACE TABLE target CLONE target_orig;\n\nMERGE INTO target\n  USING src ON target.k = src.k\n  WHEN MATCHED AND src.v = 11 THEN UPDATE SET target.v = src.v;\n\n-- Use GROUP BY in the source clause to ensure that each target row joins against one row\n-- in the source:\n\nCREATE OR REPLACE TABLE target CLONE target_orig;\n\nMERGE INTO target USING (select k, max(v) as v from src group by k) AS b ON target.k = b.k\n  WHEN MATCHED THEN UPDATE SET target.v = b.v\n  WHEN NOT MATCHED THEN INSERT (k, v) VALUES (b.k, b.v);\n\nMERGE INTO members m\n  USING (\n  SELECT id, date\n  FROM signup\n  WHERE DATEDIFF(day, CURRENT_DATE(), signup.date::DATE) < -30) s ON m.id = s.id\n  WHEN MATCHED THEN UPDATE SET m.fee = 40;"
},
{
    "function_name": "LIST",
    "summary": "Returns a list of files that have been staged (files that have been uploaded from a local file system or unloaded from a table) in one of the following Snowflake stages.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/list",
    "title": "LIST",
    "description": "Returns a list of files that have been staged (files that have been uploaded from a local file system or unloaded from a table) in one of the following\nSnowflake stages:",
    "syntax": "LIST { internalStage | externalStage } [ PATTERN = '<regex_pattern>' ]",
    "example": "LIST @%mytable;\n\nLIST @mystage/path1;\n\nLIST @%mytable PATTERN='.*data_0.*';\n\nLIST @my_csv_stage/analysis/ PATTERN='.*data_0.*';\n\nLS @~;"
},
{
    "function_name": "INSERT (multi-table)",
    "summary": "Updates multiple tables by inserting one or more rows with column values (from a query) into the tables.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/insert-multi-table",
    "title": "INSERT (multi-table)",
    "description": "Updates multiple tables by inserting one or more rows with column values (from a query) into the tables. Supports both unconditional and\nconditional inserts.",
    "syntax": "-- Unconditional multi-table insert\nINSERT [ OVERWRITE ] ALL\n  intoClause [ ... ]\n<subquery>\n\n-- Conditional multi-table insert\nINSERT [ OVERWRITE ] { FIRST | ALL }\n  { WHEN <condition> THEN intoClause [ ... ] }\n  [ ... ]\n  [ ELSE intoClause ]\n<subquery>",
    "example": "INSERT ALL\n  INTO t1\n  INTO t1 (c1, c2, c3) VALUES (n2, n1, DEFAULT)\n  INTO t2 (c1, c2, c3)\n  INTO t2 VALUES (n3, n2, n1)\nSELECT n1, n2, n3 from src;\n\n-- If t1 and t2 need to be truncated before inserting, OVERWRITE must be specified\nINSERT OVERWRITE ALL\n  INTO t1\n  INTO t1 (c1, c2, c3) VALUES (n2, n1, DEFAULT)\n  INTO t2 (c1, c2, c3)\n  INTO t2 VALUES (n3, n2, n1)\nSELECT n1, n2, n3 from src;\n\nINSERT ALL\n  WHEN n1 > 100 THEN\n    INTO t1\n  WHEN n1 > 10 THEN\n    INTO t1\n    INTO t2\n  ELSE\n    INTO t2\nSELECT n1 from src;\n\nINSERT FIRST\n  WHEN n1 > 100 THEN\n    INTO t1\n  WHEN n1 > 10 THEN\n    INTO t1\n    INTO t2\n  ELSE\n    INTO t2\nSELECT n1 from src;\n\nINSERT ALL\n  INTO t1 VALUES ($1, an_alias, \"10 + 20\")\nSELECT 1, 50 AS an_alias, 10 + 20;\n\n-- Returns error\n  INSERT ALL\n    WHEN c > 10 THEN\n      INTO t1 (col1, col2) VALUES (a, b)\n  SELECT a FROM src;\n\n-- Completes successfully\n  INSERT ALL\n    WHEN c > 10 THEN\n      INTO t1 (col1, col2) VALUES (a, b)\n  SELECT a, b, c FROM src;\n\n-- Returns error\n  INSERT ALL\n    INTO t1 VALUES (src1.key, a)\n  SELECT src1.a AS a\n  FROM src1, src2 WHERE src1.key = src2.key;\n\n-- Completes successfully\n  INSERT ALL\n    INTO t1 VALUES (key, a)\n  SELECT src1.key AS key, src1.a AS a\n  FROM src1, src2 WHERE src1.key = src2.key;"
},
{
    "function_name": "INSERT",
    "summary": "Updates a table by inserting one or more rows into the table.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/insert",
    "title": "INSERT",
    "description": "Updates a table by inserting one or more rows into the table. The values inserted into each column in the table can be explicitly-specified\nor the results of a query.",
    "syntax": "INSERT [ OVERWRITE ] INTO <target_table> [ ( <target_col_name> [ , ... ] ) ]\n       {\n         VALUES ( { <value> | DEFAULT | NULL } [ , ... ] ) [ , ( ... ) ]  |\n         <query>\n       }",
    "example": "CREATE OR REPLACE TABLE mytable (\n  col1 DATE,\n  col2 TIMESTAMP_NTZ,\n  col3 TIMESTAMP_NTZ);\n\nDESC TABLE mytable;\n\n+------+------------------+--------+-------+---------+-------------+------------+-------+------------+---------+-------------+----------------+\n| name | type             | kind   | null? | default | primary key | unique key | check | expression | comment | policy name | privacy domain |\n|------+------------------+--------+-------+---------+-------------+------------+-------+------------+---------+-------------+----------------|\n| COL1 | DATE             | COLUMN | Y     | NULL    | N           | N          | NULL  | NULL       | NULL    | NULL        | NULL           |\n| COL2 | TIMESTAMP_NTZ(9) | COLUMN | Y     | NULL    | N           | N          | NULL  | NULL       | NULL    | NULL        | NULL           |\n| COL3 | TIMESTAMP_NTZ(9) | COLUMN | Y     | NULL    | N           | N          | NULL  | NULL       | NULL    | NULL        | NULL           |\n+------+------------------+--------+-------+---------+-------------+------------+-------+------------+---------+-------------+----------------+\n\nINSERT INTO mytable\n  SELECT\n    TO_DATE('2013-05-08T23:39:20.123'),\n    TO_TIMESTAMP('2013-05-08T23:39:20.123'),\n    TO_TIMESTAMP('2013-05-08T23:39:20.123');\n\nSELECT * FROM mytable;\n\n+------------+-------------------------+-------------------------+\n| COL1       | COL2                    | COL3                    |\n|------------+-------------------------+-------------------------|\n| 2013-05-08 | 2013-05-08 23:39:20.123 | 2013-05-08 23:39:20.123 |\n+------------+-------------------------+-------------------------+\n\nINSERT INTO mytable (col1, col3)\n  SELECT\n    TO_DATE('2013-05-08T23:39:20.123'),\n    TO_TIMESTAMP('2013-05-08T23:39:20.123');\n\nSELECT * FROM mytable;\n\n+------------+-------------------------+-------------------------+\n| COL1       | COL2                    | COL3                    |\n|------------+-------------------------+-------------------------|\n| 2013-05-08 | 2013-05-08 23:39:20.123 | 2013-05-08 23:39:20.123 |\n| 2013-05-08 | NULL                    | 2013-05-08 23:39:20.123 |\n+------------+-------------------------+-------------------------+\n\nCREATE TABLE employees (\n  first_name VARCHAR,\n  last_name VARCHAR,\n  workphone VARCHAR,\n  city VARCHAR,\n  postal_code VARCHAR);\n\nINSERT INTO employees\n  VALUES\n    ('May', 'Franklin', '1-650-249-5198', 'San Francisco', 94115),\n    ('Gillian', 'Patterson', '1-650-859-3954', 'San Francisco', 94115),\n    ('Lysandra', 'Reeves', '1-212-759-3751', 'New York', 10018),\n    ('Michael', 'Arnett', '1-650-230-8467', 'San Francisco', 94116);\n\nSELECT * FROM employees;\n\n+------------+-----------+----------------+---------------+-------------+\n| FIRST_NAME | LAST_NAME | WORKPHONE      | CITY          | POSTAL_CODE |\n|------------+-----------+----------------+---------------+-------------|\n| May        | Franklin  | 1-650-249-5198 | San Francisco | 94115       |\n| Gillian    | Patterson | 1-650-859-3954 | San Francisco | 94115       |\n| Lysandra   | Reeves    | 1-212-759-3751 | New York      | 10018       |\n| Michael    | Arnett    | 1-650-230-8467 | San Francisco | 94116       |\n+------------+-----------+----------------+---------------+-------------+\n\nCREATE OR REPLACE TABLE demo_insert_type_mismatch (v VARCHAR);\n\nINSERT INTO demo_insert_type_mismatch (v) VALUES\n  ('three'),\n  ('four');\n\n+-------------------------+\n| number of rows inserted |\n|-------------------------|\n|                       2 |\n+-------------------------+\n\nINSERT INTO demo_insert_type_mismatch (v) VALUES\n  (3),\n  ('d');\n\n100038 (22018): DML operation to table DEMO_INSERT_TYPE_MISMATCH failed on column V with error: Numeric value 'd' is not recognized\n\nINSERT INTO demo_insert_type_mismatch (v) VALUES\n  (3),\n  (4);\n\n+-------------------------+\n| number of rows inserted |\n|-------------------------|\n|                       2 |\n+-------------------------+\n\nSELECT * FROM employees;\n\n+------------+-----------+----------------+---------------+-------------+\n| FIRST_NAME | LAST_NAME | WORKPHONE      | CITY          | POSTAL_CODE |\n|------------+-----------+----------------+---------------+-------------|\n| May        | Franklin  | 1-650-249-5198 | San Francisco | 94115       |\n| Gillian    | Patterson | 1-650-859-3954 | San Francisco | 94115       |\n| Lysandra   | Reeves    | 1-212-759-3751 | New York      | 10018       |\n| Michael    | Arnett    | 1-650-230-8467 | San Francisco | 94116       |\n+------------+-----------+----------------+---------------+-------------+\n\nCREATE TABLE contractors (\n  contractor_first VARCHAR,\n  contractor_last VARCHAR,\n  worknum VARCHAR,\n  city VARCHAR,\n  zip_code VARCHAR);\n\nINSERT INTO contractors\n  VALUES\n    ('Bradley', 'Greenbloom', '1-650-445-0676', 'San Francisco', 94110),\n    ('Cole', 'Simpson', '1-212-285-8904', 'New York', 10001),\n    ('Laurel', 'Slater', '1-650-633-4495', 'San Francisco', 94115);\n\nSELECT * FROM contractors;\n\n+------------------+-----------------+----------------+---------------+----------+\n| CONTRACTOR_FIRST | CONTRACTOR_LAST | WORKNUM        | CITY          | ZIP_CODE |\n|------------------+-----------------+----------------+---------------+----------|\n| Bradley          | Greenbloom      | 1-650-445-0676 | San Francisco | 94110    |\n| Cole             | Simpson         | 1-212-285-8904 | New York      | 10001    |\n| Laurel           | Slater          | 1-650-633-4495 | San Francisco | 94115    |\n+------------------+-----------------+----------------+---------------+----------+\n\nINSERT INTO employees(first_name, last_name, workphone, city, postal_code)\n  SELECT contractor_first, contractor_last, worknum, NULL, zip_code\n    FROM contractors\n    WHERE CONTAINS(worknum,'650');\n\nSELECT * FROM employees;\n\n+------------+------------+----------------+---------------+-------------+\n| FIRST_NAME | LAST_NAME  | WORKPHONE      | CITY          | POSTAL_CODE |\n|------------+------------+----------------+---------------+-------------|\n| May        | Franklin   | 1-650-249-5198 | San Francisco | 94115       |\n| Gillian    | Patterson  | 1-650-859-3954 | San Francisco | 94115       |\n| Lysandra   | Reeves     | 1-212-759-3751 | New York      | 10018       |\n| Michael    | Arnett     | 1-650-230-8467 | San Francisco | 94116       |\n| Bradley    | Greenbloom | 1-650-445-0676 | NULL          | 94110       |\n| Laurel     | Slater     | 1-650-633-4495 | NULL          | 94115       |\n+------------+------------+----------------+---------------+-------------+\n\nINSERT INTO employees (first_name, last_name, workphone, city, postal_code)\n  WITH cte AS\n    (SELECT contractor_first AS first_name,\n            contractor_last AS last_name,\n            worknum AS workphone,\n            city,\n            zip_code AS postal_code\n       FROM contractors)\n  SELECT first_name, last_name, workphone, city, postal_code\n    FROM cte;\n\nINSERT INTO emp (id, first_name, last_name, city, postal_code, ph)\n  SELECT a.id, a.first_name, a.last_name, a.city, a.postal_code, b.ph\n    FROM emp_addr a\n    INNER JOIN emp_ph b ON a.id = b.id;\n\nCREATE TABLE prospects (column1 VARIANT);\n\nINSERT INTO prospects\n  SELECT PARSE_JSON(column1)\n  FROM VALUES\n  ('{\n    \"_id\": \"57a37f7d9e2b478c2d8a608b\",\n    \"name\": {\n      \"first\": \"Lydia\",\n      \"last\": \"Williamson\"\n    },\n    \"company\": \"Miralinz\",\n    \"email\": \"lydia.williamson@miralinz.info\",\n    \"phone\": \"+1 (914) 486-2525\",\n    \"address\": \"268 Havens Place, Dunbar, Rhode Island, 02801\"\n  }')\n  , ('{\n    \"_id\": \"57a37f7d622a2b1f90698c01\",\n    \"name\": {\n      \"first\": \"Denise\",\n      \"last\": \"Holloway\"\n    },\n    \"company\": \"DIGIGEN\",\n    \"email\": \"denise.holloway@digigen.net\",\n    \"phone\": \"+1 (979) 587-3021\",\n    \"address\": \"441 Dover Street, Ada, New Mexico, 87105\"\n  }');\n\nSELECT * FROM employees;\n\n+------------+-----------+----------------+---------------+-------------+\n| FIRST_NAME | LAST_NAME | WORKPHONE      | CITY          | POSTAL_CODE |\n|------------+-----------+----------------+---------------+-------------|\n| May        | Franklin  | 1-650-111-1111 | San Francisco | 94115       |\n| Gillian    | Patterson | 1-650-222-2222 | San Francisco | 94115       |\n| Lysandra   | Reeves    | 1-212-222-2222 | New York      | 10018       |\n| Michael    | Arnett    | 1-650-333-3333 | San Francisco | 94116       |\n+------------+-----------+----------------+---------------+-------------+\n\nSELECT * FROM sf_employees;\n\n+------------+-----------+----------------+---------------+-------------+\n| FIRST_NAME | LAST_NAME | WORKPHONE      | CITY          | POSTAL_CODE |\n|------------+-----------+----------------+---------------+-------------|\n| Mary       | Smith     | 1-650-999-9999 | San Francisco | 94115       |\n+------------+-----------+----------------+---------------+-------------+\n\nINSERT OVERWRITE INTO sf_employees\n  SELECT * FROM employees\n  WHERE city = 'San Francisco';\n\nSELECT * FROM sf_employees;\n\n+------------+-----------+----------------+---------------+-------------+\n| FIRST_NAME | LAST_NAME | WORKPHONE      | CITY          | POSTAL_CODE |\n|------------+-----------+----------------+---------------+-------------|\n| May        | Franklin  | 1-650-111-1111 | San Francisco | 94115       |\n| Gillian    | Patterson | 1-650-222-2222 | San Francisco | 94115       |\n| Michael    | Arnett    | 1-650-333-3333 | San Francisco | 94116       |\n+------------+-----------+----------------+---------------+-------------+"
},
{
    "function_name": "GRANT SERVICE ROLE",
    "summary": "Assigns a service role to an account role, application role, or database role.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/grant-service-role",
    "title": "GRANT SERVICE ROLE",
    "description": "",
    "syntax": "GRANT SERVICE ROLE <name> TO\n{\n  ROLE <role_name>                     |\n  APPLICATION ROLE <application_role_name>  |\n  DATABASE ROLE <database_role_name>\n}",
    "example": "GRANT SERVICE ROLE echo_service!echoendpoint_role TO ROLE service_function_user_role;"
},
{
    "function_name": "GRANT ROLE",
    "summary": "Assigns a role to a user or another role.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/grant-role",
    "title": "GRANT ROLE",
    "description": "Assigns a role to a user or another role:",
    "syntax": "GRANT ROLE <name> TO { ROLE <parent_role_name> | USER <user_name> }",
    "example": "GRANT ROLE analyst TO ROLE SYSADMIN;\n\nGRANT ROLE analyst TO USER user1;"
},
{
    "function_name": "GRANT <privileges> … TO USER",
    "summary": "Grants one or more access privileges on a securable object to a user.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/grant-privilege-user",
    "title": "GRANT",
    "description": "Grants one or more access privileges on a securable object to a user. The privileges that can be granted are object-specific.",
    "syntax": "GRANT {  { globalPrivileges         | ALL [ PRIVILEGES ] } ON ACCOUNT\n       | { accountObjectPrivileges  | ALL [ PRIVILEGES ] } ON { USER | RESOURCE MONITOR | WAREHOUSE | COMPUTE POOL | DATABASE | INTEGRATION | CONNECTION | FAILOVER GROUP | REPLICATION GROUP | EXTERNAL VOLUME } <object_name>\n       | { schemaPrivileges         | ALL [ PRIVILEGES ] } ON { SCHEMA <schema_name> | ALL SCHEMAS IN DATABASE <db_name> }\n       | { schemaObjectPrivileges   | ALL [ PRIVILEGES ] } ON { <object_type> <object_name> | ALL <object_type_plural> IN { DATABASE <db_name> | SCHEMA <schema_name> } }\n      }\n  TO [ USER ] <user_name> [ WITH GRANT OPTION ]",
    "example": "GRANT USAGE ON STREAMLIT streamlit_db.streamlit_schema.streamlit_app TO USER joe;\n\nGRANT USAGE ON PROCEDURE mydb.myschema.myprocedure(number) TO USER user1;"
},
{
    "function_name": "GRANT <privilege> … TO SHARE",
    "summary": "Grants access privileges for databases and other supported database objects (schemas, UDFs, tables, and views) to a share.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/grant-privilege-share",
    "title": "GRANT",
    "description": "Grants access privileges for databases and other supported database objects (schemas, UDFs, tables, and views) to a share. Granting\nprivileges on these objects effectively adds the objects to the share, which can then be shared with one or more consumer accounts.",
    "syntax": "GRANT objectPrivilege ON\n     {  DATABASE <name>\n      | SCHEMA <name>\n      | FUNCTION <name>\n      | SEMANTIC VIEW <name>\n      | { TABLE <name> | ALL TABLES IN SCHEMA <schema_name> }\n      | { EXTERNAL TABLE <name> | ALL EXTERNAL TABLES IN SCHEMA <schema_name> }\n      | { ICEBERG TABLE <name> | ALL ICEBERG TABLES IN SCHEMA <schema_name> }\n      | { DYNAMIC TABLE <name> | ALL DYNAMIC TABLES IN SCHEMA <schema_name> }\n      | TAG <name>\n      | VIEW <name>  }\n  TO SHARE <share_name>",
    "example": "GRANT USAGE ON DATABASE mydb TO SHARE share1;\n\nGRANT USAGE ON SCHEMA mydb.public TO SHARE share1;\n\nGRANT USAGE ON FUNCTION mydb.shared_schema.function1 TO SHARE share1;\n\nGRANT USAGE ON FUNCTION mydb.shared_schema.function2 TO SHARE share1;\n\nGRANT SELECT ON ALL TABLES IN SCHEMA mydb.public TO SHARE share1;\n\nGRANT SELECT ON ALL EXTERNAL TABLES IN SCHEMA mydb.public TO SHARE share1;\n\nGRANT SELECT ON ALL ICEBERG TABLES IN SCHEMA mydb.public TO SHARE share1;\n\nGRANT SELECT ON ALL DYNAMIC TABLES IN SCHEMA mydb.public TO SHARE share1;\n\nGRANT USAGE ON SCHEMA mydb.shared_schema TO SHARE share1;\n\nGRANT SELECT ON VIEW mydb.shared_schema.view1 TO SHARE share1;\n\nGRANT SELECT ON VIEW mydb.shared_schema.view3 TO SHARE share1;\n\nGRANT SELECT ON ICEBERG TABLE mydb.shared_schema.iceberg_table_1 TO SHARE share1;\n\nGRANT SELECT ON DYNAMIC TABLE mydb.public TO SHARE share1;\n\nCREATE SECURE VIEW view2 AS SELECT * FROM database2.public.sampletable;\n\nGRANT USAGE ON DATABASE database1 TO SHARE share1;\n\nGRANT USAGE ON SCHEMA database1.schema1 TO SHARE share1;\n\nGRANT REFERENCE_USAGE ON DATABASE database2 TO SHARE share1;\n\nGRANT SELECT ON VIEW view2 TO SHARE share1;"
},
{
    "function_name": "GRANT <privileges> … TO APPLICATION ROLE",
    "summary": "Grants one or more access privileges on a securable schema-level object to an application role.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/grant-privilege-application-role",
    "title": "GRANT",
    "description": "",
    "syntax": "GRANT {\n        { schemaPrivileges         | ALL [ PRIVILEGES ] } ON SCHEMA <schema_name>\n        | { schemaObjectPrivileges | ALL [ PRIVILEGES ] } ON { <object_type> <object_name> | ALL <object_type_plural> IN { DATABASE <db_name> | SCHEMA <schema_name> }\n        | { schemaObjectPrivileges | ALL [ PRIVILEGES ] } ON FUTURE <object_type_plural> IN SCHEMA <schema_name>\n      }\n    TO APPLICATION ROLE <name> [ WITH GRANT OPTION ]",
    "example": ""
},
{
    "function_name": "GRANT <privileges> … TO APPLICATION",
    "summary": "Grants one or more access privileges on a securable object to an application.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/grant-privilege-application",
    "title": "GRANT",
    "description": "Grants one or more access privileges on a securable object to an application. The privileges that can be\ngranted are object-specific.",
    "syntax": "GRANT {  { globalPrivileges } ON ACCOUNT\n       | { accountObjectPrivileges  | ALL [ PRIVILEGES ] } ON { USER | RESOURCE MONITOR | WAREHOUSE | COMPUTE POOL | DATABASE | INTEGRATION | CONNECTION | FAILOVER GROUP | REPLICATION GROUP | EXTERNAL VOLUME } <object_name>\n       | { schemaPrivileges         | ALL [ PRIVILEGES ] } ON { SCHEMA <schema_name> | ALL SCHEMAS IN DATABASE <db_name> }\n       | { schemaObjectPrivileges   | ALL [ PRIVILEGES ] } ON { <object_type> <object_name> | ALL <object_type_plural> IN { DATABASE <db_name> | SCHEMA <schema_name> }\n      }\n    TO APPLICATION <name>",
    "example": ""
},
{
    "function_name": "GRANT <privileges> … TO ROLE",
    "summary": "Grants one or more access privileges on a securable object to a role or database role.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/grant-privilege",
    "title": "GRANT",
    "description": "Grants one or more access privileges on a securable object to a role or database role. The privileges that can be granted are object-specific.",
    "syntax": "GRANT {  { globalPrivileges         | ALL [ PRIVILEGES ] } ON ACCOUNT\n       | { accountObjectPrivileges  | ALL [ PRIVILEGES ] } ON { USER | RESOURCE MONITOR | WAREHOUSE | COMPUTE POOL | DATABASE | INTEGRATION | CONNECTION | FAILOVER GROUP | REPLICATION GROUP | EXTERNAL VOLUME } <object_name>\n       | { schemaPrivileges         | ALL [ PRIVILEGES ] } ON { SCHEMA <schema_name> | ALL SCHEMAS IN DATABASE <db_name> }\n       | { schemaPrivileges         | ALL [ PRIVILEGES ] } ON { FUTURE SCHEMAS IN DATABASE <db_name> }\n       | { schemaObjectPrivileges   | ALL [ PRIVILEGES ] } ON { <object_type> <object_name> | ALL <object_type_plural> IN { DATABASE <db_name> | SCHEMA <schema_name> } }\n       | { schemaObjectPrivileges   | ALL [ PRIVILEGES ] } ON FUTURE <object_type_plural> IN { DATABASE <db_name> | SCHEMA <schema_name> }\n      }\n  TO [ ROLE ] <role_name> [ WITH GRANT OPTION ]",
    "example": "GRANT OPERATE ON WAREHOUSE report_wh TO ROLE analyst;\n\nGRANT OPERATE ON WAREHOUSE report_wh TO ROLE analyst WITH GRANT OPTION;\n\nGRANT SELECT ON ALL TABLES IN SCHEMA mydb.myschema to ROLE analyst;\n\nGRANT ALL PRIVILEGES ON FUNCTION mydb.myschema.add5(number) TO ROLE analyst;\n\nGRANT ALL PRIVILEGES ON FUNCTION mydb.myschema.add5(string) TO ROLE analyst;\n\nGRANT USAGE ON PROCEDURE mydb.myschema.myprocedure(number) TO ROLE analyst;\n\nGRANT CREATE PROVISIONED THROUGHPUT ON ACCOUNT TO ROLE myrole;\n\nGRANT CREATE MATERIALIZED VIEW ON SCHEMA mydb.myschema TO ROLE myrole;\n\nGRANT SELECT, INSERT ON FUTURE TABLES IN SCHEMA mydb.myschema TO ROLE role1;\n\nUSE ROLE ACCOUNTADMIN;\n\nGRANT USAGE ON FUTURE SCHEMAS IN DATABASE mydb TO ROLE role1;\n\nGRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA ht_schema TO ROLE ht_role;\n\nGRANT SELECT ON ALL TABLES IN SCHEMA mydb.myschema\n  TO DATABASE ROLE mydb.dr1;\n\nGRANT ALL PRIVILEGES ON FUNCTION mydb.myschema.add5(number)\n  TO DATABASE ROLE mydb.dr1;\n\nGRANT ALL PRIVILEGES ON FUNCTION mydb.myschema.add5(string)\n  TO DATABASE ROLE mydb.dr1;\n\nGRANT USAGE ON PROCEDURE mydb.myschema.myprocedure(number)\n  TO DATABASE ROLE mydb.dr1;\n\nGRANT CREATE MATERIALIZED VIEW ON SCHEMA mydb.myschema\n  TO DATABASE ROLE mydb.dr1;\n\nGRANT SELECT,INSERT ON FUTURE TABLES IN SCHEMA mydb.myschema\n  TO DATABASE ROLE mydb.dr1;\n\nUSE ROLE ACCOUNTADMIN;\n\nGRANT USAGE ON FUTURE SCHEMAS IN DATABASE mydb\n  TO DATABASE ROLE mydb.dr1;\n\nUSE ROLE ACCOUNTADMIN;\n\nGRANT CREATE SNOWFLAKE.CORE.BUDGET ON SCHEMA budgets_db.budgets_schema\n  TO ROLE budget_admin;"
},
{
    "function_name": "GRANT OWNERSHIP",
    "summary": "Transfers ownership of an object or all objects of a specified type in a schema from one role to another role.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/grant-ownership",
    "title": "GRANT OWNERSHIP",
    "description": "Transfers ownership of an object or all objects of a specified type in a schema from one role to another role.",
    "syntax": "GRANT OWNERSHIP\n  { ON {\n            <object_type> <object_name>\n          | ALL <object_type_plural> IN { DATABASE <database_name> | SCHEMA <schema_name> }\n       }\n    | ON FUTURE <object_type_plural> IN { DATABASE <database_name> | SCHEMA <schema_name> }\n  }\n  TO { ROLE <role_name> | DATABASE ROLE <database_role_name> }\n  [ { REVOKE | COPY } CURRENT GRANTS ]",
    "example": "REVOKE ALL PRIVILEGES ON DATABASE mydb FROM ROLE manager;\n\nGRANT OWNERSHIP ON DATABASE mydb TO ROLE analyst;\n\nGRANT ALL PRIVILEGES ON DATABASE mydb TO ROLE analyst;\n\nGRANT OWNERSHIP ON ALL TABLES IN SCHEMA mydb.public TO ROLE analyst COPY CURRENT GRANTS;\n\nGRANT OWNERSHIP ON TABLE mydb.public.mytable TO ROLE analyst COPY CURRENT GRANTS;\n\nGRANT OWNERSHIP ON ALL TABLES IN SCHEMA mydb.public\n  TO DATABASE ROLE mydb.dr1\n  COPY CURRENT GRANTS;\n\nGRANT OWNERSHIP ON TABLE mydb.public.mytable\n  TO ROLE mydb.dr1\n  COPY CURRENT GRANTS;\n\nREVOKE USAGE ON DATABASE mydb FROM SHARE myshare;\nGRANT OWNERSHIP ON DATABASE mydb TO ROLE r2;\nGRANT USAGE ON DATABASE mydb TO ROLE r2;"
},
{
    "function_name": "GRANT DATABASE ROLE … TO SHARE",
    "summary": "Grants a database role to a share.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/grant-database-role-share",
    "title": "GRANT DATABASE ROLE … TO SHARE",
    "description": "Grants a database role to a share. Granting a database role effectively adds privileges on a single database to the share, which can then\nbe shared with one or more consumer accounts.",
    "syntax": "GRANT DATABASE ROLE <name>\n  TO SHARE <share_name>",
    "example": "GRANT DATABASE ROLE d1.dr1 TO SHARE share1;"
},
{
    "function_name": "GRANT DATABASE ROLE",
    "summary": "Assigns a database role to an account role, another database role, or a user.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/grant-database-role",
    "title": "GRANT DATABASE ROLE",
    "description": "Assigns a database role to an",
    "syntax": "GRANT DATABASE ROLE <name> TO { DATABASE ROLE <parent_role_name> | ROLE <parent_role_name> | USER <user_name> }",
    "example": "GRANT DATABASE ROLE analyst TO ROLE SYSADMIN;\n\nGRANT DATABASE ROLE dr1 TO DATABASE ROLE dr2;\n\nGRANT DATABASE ROLE dr3 TO USER user1;"
},
{
    "function_name": "GRANT CALLER",
    "summary": "Grants caller grants to a role.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/grant-caller",
    "title": "GRANT CALLER",
    "description": "",
    "syntax": "GRANT CALLER <object_privilege> [ , <object_privilege> ... ]\n  ON <object_type> <object_name>\n  TO { ROLE | DATABASE ROLE | APPLICATION } <grantee_name>\n\nGRANT ALL CALLER PRIVILEGES\n  ON <object_type> <object_name>\n  TO { ROLE | DATABASE ROLE | APPLICATION } <grantee_name>\n\nGRANT INHERITED CALLER <object_privilege> [ , <object_privilege> ... ]\n  ON ALL <object_type_plural>\n  IN { ACCOUNT | DATABASE <db_name> | SCHEMA <schema_name> | APPLICATION <app_name> | APPLICATION PACKAGE <app_pkg_name> }\n  TO { ROLE | DATABASE ROLE | APPLICATION } <grantee_name>\n\nGRANT ALL INHERITED CALLER PRIVILEGES\n  ON ALL <object_type_plural>\n  IN { ACCOUNT | DATABASE <db_name> | SCHEMA <schema_name> | APPLICATION <app_name> | APPLICATION PACKAGE <app_pkg_name> }\n  TO { ROLE | DATABASE ROLE | APPLICATION } <grantee_name>",
    "example": "GRANT CALLER SELECT ON VIEW v1 TO owner_role;\n\nGRANT INHERITED CALLER SELECT, INSERT ON ALL TABLES IN SCHEMA db.sch TO ROLE owner_role;\n\nGRANT ALL INHERITED CALLER PRIVILEGES ON ALL SCHEMAS IN ACCOUNT TO ROLE owner_role;\n\nGRANT CALLER SELECT ON TABLE db.sch1.t1 TO DATABASE ROLE db.r;\n\nGRANT ALL CALLER PRIVILEGES ON DATABASE my_db TO ROLE owner_role;"
},
{
    "function_name": "GRANT APPLICATION ROLE",
    "summary": "Assigns an application role to an account role, another application role, an application, or a user.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/grant-application-role",
    "title": "GRANT APPLICATION ROLE",
    "description": "",
    "syntax": "GRANT APPLICATION ROLE <name> TO  { ROLE <parent_role_name> | APPLICATION ROLE <application_role> | APPLICATION <application_name> | USER <user_name> }",
    "example": "GRANT APPLICATION ROLE app_role to APPLICATION ROLE other_app_role;\n\nGRANT APPLICATION ROLE app_role to USER user1;"
},
{
    "function_name": "GET",
    "summary": "Downloads data files from one of the following internal stage types to a local directory or folder on a client machine.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/get",
    "title": "GET",
    "description": "Downloads data files from one of the following",
    "syntax": "GET internalStage file://<local_directory_path>\n    [ PARALLEL = <integer> ]\n    [ PATTERN = '<regex_pattern>'' ]",
    "example": "GET @%mytable file:///tmp/data/;\n\nGET @~/myfiles file:///tmp/data/;"
},
{
    "function_name": "EXPLAIN",
    "summary": "Returns the logical execution plan for the specified SQL statement.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/explain",
    "title": "EXPLAIN",
    "description": "Returns the logical execution plan for the specified SQL statement.",
    "syntax": "EXPLAIN [ USING { TABULAR | JSON | TEXT } ] <statement>",
    "example": "CREATE TABLE Z1 (ID INTEGER);\nCREATE TABLE Z2 (ID INTEGER);\nCREATE TABLE Z3 (ID INTEGER);\n\nEXPLAIN USING TABULAR SELECT Z1.ID, Z2.ID \n    FROM Z1, Z2\n    WHERE Z2.ID = Z1.ID;\n+------+------+-----------------+-------------+------------------------------+-------+--------------------------+-----------------+--------------------+---------------+\n| step | id   | parentOperators | operation   | objects                      | alias | expressions              | partitionsTotal | partitionsAssigned | bytesAssigned |\n|------+------+-----------------+-------------+------------------------------+-------+--------------------------+-----------------+--------------------+---------------|\n| NULL | NULL |            NULL | GlobalStats | NULL                         | NULL  | NULL                     |               2 |                  2 |          1024 |\n|    1 |    0 |            NULL | Result      | NULL                         | NULL  | Z1.ID, Z2.ID             |            NULL |               NULL |          NULL |\n|    1 |    1 |             [0] | InnerJoin   | NULL                         | NULL  | joinKey: (Z2.ID = Z1.ID) |            NULL |               NULL |          NULL |\n|    1 |    2 |             [1] | TableScan   | TESTDB.TEMPORARY_DOC_TEST.Z2 | NULL  | ID                       |               1 |                  1 |           512 |\n|    1 |    3 |             [1] | JoinFilter  | NULL                         | NULL  | joinKey: (Z2.ID = Z1.ID) |            NULL |               NULL |          NULL |\n|    1 |    4 |             [3] | TableScan   | TESTDB.TEMPORARY_DOC_TEST.Z1 | NULL  | ID                       |               1 |                  1 |           512 |\n+------+------+-----------------+-------------+------------------------------+-------+--------------------------+-----------------+--------------------+---------------+\n\nEXPLAIN USING TEXT SELECT Z1.ID, Z2.ID \n    FROM Z1, Z2\n    WHERE Z2.ID = Z1.ID;\n+------------------------------------------------------------------------------------------------------------------------------------+\n| content                                                                                                                            |\n|------------------------------------------------------------------------------------------------------------------------------------|\n| GlobalStats:                                                                                                                       |\n|     partitionsTotal=2                                                                                                              |\n|     partitionsAssigned=2                                                                                                           |\n|     bytesAssigned=1024                                                                                                             |\n| Operations:                                                                                                                        |\n| 1:0     ->Result  Z1.ID, Z2.ID                                                                                                     |\n| 1:1          ->InnerJoin  joinKey: (Z2.ID = Z1.ID)                                                                                 |\n| 1:2               ->TableScan  TESTDB.TEMPORARY_DOC_TEST.Z2  ID  {partitionsTotal=1, partitionsAssigned=1, bytesAssigned=512}      |\n| 1:3               ->JoinFilter  joinKey: (Z2.ID = Z1.ID)                                                                           |\n| 1:4                    ->TableScan  TESTDB.TEMPORARY_DOC_TEST.Z1  ID  {partitionsTotal=1, partitionsAssigned=1, bytesAssigned=512} |\n|                                                                                                                                    |\n+------------------------------------------------------------------------------------------------------------------------------------+\n\nEXPLAIN USING JSON SELECT Z1.ID, Z2.ID \n    FROM Z1, Z2\n    WHERE Z2.ID = Z1.ID;\nn| content|\n||\n| {\"GlobalStats\":{\"partitionsTotal\":2,\"partitionsAssigned\":2,\"bytesAssigned\":1024},\"Operations\":[[{\"id\":0,\"operation\":\"Result\",\"expressions\":[\"Z1.ID\",\"Z2.ID\"]},{\"id\":1,\"parentOperators\":[0],\"operation\":\"InnerJoin\",\"expressions\":[\"joinKey: (Z2.ID = Z1.ID)\"]},{\"id\":2,\"parentOperators\":[1],\"operation\":\"TableScan\",\"objects\":[\"TESTDB.TEMPORARY_DOC_TEST.Z2\"],\"expressions\":[\"ID\"],\"partitionsAssigned\":1,\"partitionsTotal\":1,\"bytesAssigned\":512},{\"id\":3,\"parentOperators\":[1],\"operation\":\"JoinFilter\",\"expressions\":[\"joinKey: (Z2.ID = Z1.ID)\"]},{\"id\":4,\"parentOperators\":[3],\"operation\":\"TableScan\",\"objects\":[\"TESTDB.TEMPORARY_DOC_TEST.Z1\"],\"expressions\":[\"ID\"],\"partitionsAssigned\":1,\"partitionsTotal\":1,\"bytesAssigned\":512}]]} |\n
},
{
    "function_name": "EXECUTE TASK",
    "summary": "Manually triggers an asynchronous single run of a task (either a standalone task or the root task in a task graph) independent of the schedule defined for the task.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/execute-task",
    "title": "EXECUTE TASK",
    "description": "Manually triggers an asynchronous single run of a task (either a standalone task or the root task in a",
    "syntax": "EXECUTE TASK <name>\n\nEXECUTE TASK <name> RETRY LAST",
    "example": "EXECUTE TASK mytask;"
},
{
    "function_name": "EXECUTE NOTEBOOK",
    "summary": "Executes the notebook outside the Notebook Editor.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/execute-notebook",
    "title": "EXECUTE NOTEBOOK",
    "description": "",
    "syntax": "EXECUTE NOTEBOOK <name>([ <parameter_string> [ , ... ] ]);",
    "example": ""
},
{
    "function_name": "EXECUTE JOB SERVICE",
    "summary": "Executes a Snowpark Container Services service as a job.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/execute-job-service",
    "title": "EXECUTE JOB SERVICE",
    "description": "",
    "syntax": "EXECUTE JOB SERVICE\n  IN COMPUTE POOL <compute_pool_name>\n  {\n     fromSpecification\n     | fromSpecificationTemplate\n  }\n  NAME = [<db>.<schema>.]<name>\n  [ ASYNC = { TRUE | FALSE } ]\n  [ QUERY_WAREHOUSE = <warehouse_name> ]\n  [ COMMENT = '<string_literal>']\n  [ EXTERNAL_ACCESS_INTEGRATIONS = ( <EAI_name> [ , ... ] ) ]\n  [ [ WITH ] TAG ( <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' , ... ] ) ]",
    "example": "EXECUTE JOB SERVICE\n  IN COMPUTE POOL tutorial_compute_pool\n  NAME = tutorial_db.data_schema.example_job\n  ASYNC = TRUE\n  FROM @tutorial_stage\n  FROM SPECIFICATION $$\n  <job specification>\n  $$;\n\nEXECUTE JOB SERVICE\n  IN COMPUTE POOL tutorial_compute_pool\n  NAME=tutorial_job_service\n  FROM SPECIFICATION $$\n  spec:\n    container:\n    - name: main\n      image: /tutorial_db/data_schema/tutorial_repository/my_job_image:latest\n      volumeMounts:\n        - name: block-vol1\n          mountPath: /opt/block/path\n    volumes:\n    - name: block-vol1\n      source: block\n      size: 10Gi\n      blockConfig:\n        iops: 4000\n        throughput: 200\n  $$"
},
{
    "function_name": "EXECUTE IMMEDIATE FROM",
    "summary": "EXECUTE IMMEDIATE FROM executes the SQL statements specified in a file in a stage.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/execute-immediate-from",
    "title": "EXECUTE IMMEDIATE FROM",
    "description": "EXECUTE IMMEDIATE FROM executes the SQL statements specified in a file in a stage. The file can contain\nSQL statements or",
    "syntax": "EXECUTE IMMEDIATE\n  FROM { absoluteFilePath | relativeFilePath }\n  [ USING ( <key> => <value> [ , <key> => <value> [ , ... ] ]  )  ]\n  [ DRY_RUN = { TRUE | FALSE } ]",
    "example": "CREATE OR REPLACE TABLE my_inventory(\n  sku VARCHAR,\n  price NUMBER\n);\n\nEXECUTE IMMEDIATE FROM './insert-inventory.sql';\n\nSELECT sku, price\n  FROM my_inventory\n  ORDER BY price DESC;\n\nINSERT INTO my_inventory\n  VALUES ('XYZ12345', 10.00),\n         ('XYZ81974', 50.00),\n         ('XYZ34985', 30.00),\n         ('XYZ15324', 15.00);\n\nCREATE STAGE my_stage;\n\nPUT file://~/sql/scripts/create-inventory.sql @my_stage/scripts/\n  AUTO_COMPRESS=FALSE;\n\nPUT file://~/sql/scripts/insert-inventory.sql @my_stage/scripts/\n  AUTO_COMPRESS=FALSE;\n\nEXECUTE IMMEDIATE FROM @my_stage/scripts/create-inventory.sql;\n\n+----------+-------+\n| SKU      | PRICE |\n|----------+-------|\n| XYZ81974 |    50 |\n| XYZ34985 |    30 |\n| XYZ15324 |    15 |\n| XYZ12345 |    10 |\n+----------+-------+\n\n--!jinja\n\nCREATE SCHEMA {{env}};\n\nCREATE TABLE RAW (COL OBJECT)\n    DATA_RETENTION_TIME_IN_DAYS = {{retention_time}};\n\nCREATE STAGE my_stage;\n\nPUT file://path/to/setup.sql @my_stage/scripts/\n  AUTO_COMPRESS=FALSE;\n\nEXECUTE IMMEDIATE FROM @my_stage/scripts/setup.sql\n    USING (env=>'dev', retention_time=>0);\n\n{%- macro get_environments(deployment_type) -%}\n  {%- if deployment_type == 'prod' -%}\n    {{ \"prod1,prod2\" }}\n  {%- else -%}\n    {{ \"dev,qa,staging\" }}\n  {%- endif -%}\n{%- endmacro -%}\n\n--!jinja2\n{% from \"macros.jinja\" import get_environments %}\n\n{%- set environments = get_environments(DEPLOYMENT_TYPE).split(\",\") -%}\n\n{%- for environment in environments -%}\n  CREATE DATABASE {{ environment }}_db;\n  USE DATABASE {{ environment }}_db;\n  CREATE TABLE {{ environment }}_orders (\n    id NUMBER,\n    item VARCHAR,\n    quantity NUMBER);\n  CREATE TABLE {{ environment }}_customers (\n    id NUMBER,\n    name VARCHAR);\n{% endfor %}\n\nCREATE STAGE my_stage;\n\nPUT file://path/to/setup-env.sql @my_stage/scripts/\n  AUTO_COMPRESS=FALSE;\nPUT file://path/to/macros.jinja @my_stage/scripts/\n  AUTO_COMPRESS=FALSE;\n\nEXECUTE IMMEDIATE FROM @my_stage/scripts/setup-env.sql\n  USING (DEPLOYMENT_TYPE => 'prod') DRY_RUN = TRUE;\n\n+----------------------------------+\n| rendered file contents           |\n|----------------------------------|\n| --!jinja2                        |\n| CREATE DATABASE prod1_db;        |\n|   USE DATABASE prod1_db;         |\n|   CREATE TABLE prod1_orders (    |\n|     id NUMBER,                   |\n|     item VARCHAR,                |\n|     quantity NUMBER);            |\n|   CREATE TABLE prod1_customers ( |\n|     id NUMBER,                   |\n|     name VARCHAR);               |\n| CREATE DATABASE prod2_db;        |\n|   USE DATABASE prod2_db;         |\n|   CREATE TABLE prod2_orders (    |\n|     id NUMBER,                   |\n|     item VARCHAR,                |\n|     quantity NUMBER);            |\n|   CREATE TABLE prod2_customers ( |\n|     id NUMBER,                   |\n|     name VARCHAR);               |\n|                                  |\n+----------------------------------+\n\nEXECUTE IMMEDIATE FROM @my_stage/scripts/setup-env.sql\n  USING (DEPLOYMENT_TYPE => 'prod');"
},
{
    "function_name": "EXECUTE IMMEDIATE",
    "summary": "Executes a string that contains a SQL statement or a Snowflake Scripting statement.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/execute-immediate",
    "title": "EXECUTE IMMEDIATE",
    "description": "Executes a string that contains a SQL statement or a",
    "syntax": "EXECUTE IMMEDIATE '<string_literal>'\n    [ USING ( <bind_variable> [ , <bind_variable> ... ] ) ]\n\nEXECUTE IMMEDIATE <variable>\n    [ USING ( <bind_variable> [ , <bind_variable> ... ] ) ]\n\nEXECUTE IMMEDIATE $<session_variable>\n    [ USING ( <bind_variable> [ , <bind_variable> ... ] ) ]",
    "example": "CREATE PROCEDURE execute_immediate_local_variable()\nRETURNS VARCHAR\nAS\nDECLARE\n  v1 VARCHAR DEFAULT 'CREATE TABLE temporary1 (i INTEGER)';\n  v2 VARCHAR DEFAULT 'INSERT INTO temporary1 (i) VALUES (76)';\n  result INTEGER DEFAULT 0;\nBEGIN\n  EXECUTE IMMEDIATE v1;\n  EXECUTE IMMEDIATE v2  ||  ',(80)'  ||  ',(84)';\n  result := (SELECT SUM(i) FROM temporary1);\n  RETURN result::VARCHAR;\nEND;\n\nCREATE PROCEDURE execute_immediate_local_variable()\nRETURNS VARCHAR\nAS\n$$\nDECLARE\n  v1 VARCHAR DEFAULT 'CREATE TABLE temporary1 (i INTEGER)';\n  v2 VARCHAR DEFAULT 'INSERT INTO temporary1 (i) VALUES (76)';\n  result INTEGER DEFAULT 0;\nBEGIN\n  EXECUTE IMMEDIATE v1;\n  EXECUTE IMMEDIATE v2  ||  ',(80)'  ||  ',(84)';\n  result := (SELECT SUM(i) FROM temporary1);\n  RETURN result::VARCHAR;\nEND;\n$$;\n\nCALL execute_immediate_local_variable();\n\n+----------------------------------+\n| EXECUTE_IMMEDIATE_LOCAL_VARIABLE |\n|----------------------------------|\n| 240                              |\n+----------------------------------+\n\nCREATE OR REPLACE TABLE invoices (id INTEGER, price NUMBER(12, 2));\n\nINSERT INTO invoices (id, price) VALUES\n  (1, 11.11),\n  (2, 22.22);\n\nCREATE OR REPLACE PROCEDURE min_max_invoices_sp(\n    minimum_price NUMBER(12,2),\n    maximum_price NUMBER(12,2))\n  RETURNS TABLE (id INTEGER, price NUMBER(12, 2))\n  LANGUAGE SQL\nAS\nDECLARE\n  rs RESULTSET;\n  query VARCHAR DEFAULT 'SELECT * FROM invoices WHERE price > ? AND price < ?';\nBEGIN\n  rs := (EXECUTE IMMEDIATE :query USING (minimum_price, maximum_price));\n  RETURN TABLE(rs);\nEND;\n\nCREATE OR REPLACE PROCEDURE min_max_invoices_sp(\n    minimum_price NUMBER(12,2),\n    maximum_price NUMBER(12,2))\n  RETURNS TABLE (id INTEGER, price NUMBER(12, 2))\n  LANGUAGE SQL\nAS\n$$\nDECLARE\n  rs RESULTSET;\n  query VARCHAR DEFAULT 'SELECT * FROM invoices WHERE price > ? AND price < ?';\nBEGIN\n  rs := (EXECUTE IMMEDIATE :query USING (minimum_price, maximum_price));\n  RETURN TABLE(rs);\nEND;\n$$\n;\n\nCALL min_max_invoices_sp(20, 30);\n\n+----+-------+\n| ID | PRICE |\n|----+-------|\n|  2 | 22.22 |\n+----+-------+\n\nSET stmt =\n$$\n    SELECT PI();\n$$\n;\n\nEXECUTE IMMEDIATE $stmt;\n\n+-------------+\n|        PI() |\n|-------------|\n| 3.141592654 |\n+-------------+\n\nEXECUTE IMMEDIATE $$\nDECLARE\n  radius_of_circle FLOAT;\n  area_of_circle FLOAT;\nBEGIN\n  radius_of_circle := 3;\n  area_of_circle := PI() * radius_of_circle * radius_of_circle;\n  RETURN area_of_circle;\nEND;\n$$\n;\n\n+-----------------+\n| anonymous block |\n|-----------------|\n|    28.274333882 |\n+-----------------+"
},
{
    "function_name": "EXECUTE DBT PROJECT",
    "summary": "Executes the specified dbt project object or the dbt project in a Snowflake workspace using the dbt command and command line options specified.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/execute-dbt-project",
    "title": "EXECUTE DBT PROJECT",
    "description": "",
    "syntax": "EXECUTE DBT PROJECT [ IF EXISTS ] <name>\n  [ ARGS = '[ <dbt_command> ] [ --<dbt_cli_option> <option_value_1> [ ... ] ] [ ... ]' ]\n  [ PROJECT_ROOT = '<subdirectory_path>' ]",
    "example": "EXECUTE DBT PROJECT my_database.my_schema.my_dbt_project\n  ARGS = '--select simple_customers combined_bookings prepped_data --target dev';\n\nEXECUTE DBT PROJECT my_database.my_schema.my_dbt_project\n  ARGS = '--select simple_customers combined_bookings prepped_data --target prod';\n\nEXECUTE DBT PROJECT my_database.my_schema.my_dbt_project\n  ARGS = 'run --select simple_customers+ --target dev';\n\nEXECUTE DBT PROJECT my_database.my_schema.my_parent_dbt_project PROJECT_ROOT = 'project2';\n\nCREATE OR ALTER TASK my_database.my_schema.run_dbt_project\n  WAREHOUSE = my_warehouse\n  SCHEDULE = '6 hours'\nAS\n  EXECUTE DBT PROJECT my_database.my_schema.my_dbt_project args='run --target prod';\n\n\nCREATE OR ALTER TASK change_this.public.test_dbt_project\n        WAREHOUSE = my_warehouse\n        AFTER run_dbt_project\nAS\n  EXECUTE DBT PROJECT my_database.my_schema.my_dbt_project args='test --target prod';"
},
{
    "function_name": "EXECUTE ALERT",
    "summary": "Manually executes an alert independent of the schedule for the alert.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/execute-alert",
    "title": "EXECUTE ALERT",
    "description": "Manually executes an",
    "syntax": "EXECUTE ALERT <name>",
    "example": "EXECUTE ALERT myalert;"
},
{
    "function_name": "DROP WAREHOUSE",
    "summary": "Removes the specified virtual warehouse from the system.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-warehouse",
    "title": "DROP WAREHOUSE",
    "description": "Removes the specified",
    "syntax": "DROP WAREHOUSE [ IF EXISTS ] <name>",
    "example": ""
},
{
    "function_name": "DROP VIEW",
    "summary": "Removes the specified view from the current/specified schema.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-view",
    "title": "DROP VIEW",
    "description": "Removes the specified view from the current/specified schema.",
    "syntax": "DROP VIEW [ IF EXISTS ] <name>",
    "example": "DROP VIEW myview;\n\n------------------------------+\n           status             |\n------------------------------+\n MYVIEW successfully dropped. |\n------------------------------+"
},
{
    "function_name": "DROP USER",
    "summary": "Removes the specified user from the system.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-user",
    "title": "DROP USER",
    "description": "Removes the specified user from the system.",
    "syntax": "DROP USER [ IF EXISTS ] <name>",
    "example": "DROP USER user1;"
},
{
    "function_name": "DROP TASK",
    "summary": "Removes a task from the current/specified schema.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-task",
    "title": "DROP TASK",
    "description": "Removes a task from the current/specified schema.",
    "syntax": "DROP TASK [ IF EXISTS ] <name>",
    "example": "SHOW TASKS LIKE 't2%';\n\n\nDROP TASK t2;\n\n\nSHOW TASKS LIKE 't2%';\n\nDROP TASK IF EXISTS t2;"
},
{
    "function_name": "DROP TAG",
    "summary": "Removes a tag from the system.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-tag",
    "title": "DROP TAG",
    "description": "Removes a tag from the system.",
    "syntax": "DROP TAG [ IF EXISTS ] <name>",
    "example": ""
},
{
    "function_name": "DROP TABLE",
    "summary": "Removes a table from the current or specified schema, but retains a version of the table so that it can be recovered by using UNDROP TABLE.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-table",
    "title": "DROP TABLE",
    "description": "Removes a table from the current or specified schema, but retains a version of the table so that it can be recovered by using",
    "syntax": "DROP TABLE [ IF EXISTS ] <name> [ CASCADE | RESTRICT ]",
    "example": "SHOW TABLES LIKE 't2%';\n\n+---------------------------------+------+---------------+-------------+-----------+------------+------------+------+-------+--------------+----------------+\n| created_on                      | name | database_name | schema_name | kind      | comment    | cluster_by | rows | bytes | owner        | retention_time |\n|---------------------------------+------+---------------+-------------+-----------+------------+------------+------+-------+--------------+----------------+\n| Tue, 17 Mar 2015 16:48:16 -0700 | T2   | TESTDB        | PUBLIC      | TABLE     |            |            |    5 | 4096  | PUBLIC       |              1 |\n+---------------------------------+------+---------------+-------------+-----------+------------+------------+------+-------+--------------+----------------+\n\nDROP TABLE t2;\n\n+--------------------------+\n| status                   |\n|--------------------------|\n| T2 successfully dropped. |\n+--------------------------+\n\nSHOW TABLES LIKE 't2%';\n\n+------------+------+---------------+-------------+------+---------+------------+------+-------+-------+----------------+\n| created_on | name | database_name | schema_name | kind | comment | cluster_by | rows | bytes | owner | retention_time |\n|------------+------+---------------+-------------+------+---------+------------+------+-------+-------+----------------|\n+------------+------+---------------+-------------+------+---------+------------+------+-------+-------+----------------+\n\nDROP TABLE IF EXISTS t2;\n\n+------------------------------------------------------------+\n| status                                                     |\n|------------------------------------------------------------|\n| Drop statement executed successfully (T2 already dropped). |\n+------------------------------------------------------------+"
},
{
    "function_name": "DROP STREAMLIT",
    "summary": "Removes the specified Streamlit object from the current/specified schema.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-streamlit",
    "title": "DROP STREAMLIT",
    "description": "Removes the specified Streamlit object from the current/specified schema.",
    "syntax": "DROP STREAMLIT [IF EXISTS] <name>",
    "example": ""
},
{
    "function_name": "DROP STREAM",
    "summary": "Removes a stream from the current/specified schema.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-stream",
    "title": "DROP STREAM",
    "description": "Removes a stream from the current/specified schema.",
    "syntax": "DROP STREAM [ IF EXISTS ] <name>",
    "example": "SHOW STREAMS LIKE 't2%';\n\n\nDROP STREAM t2;\n\n\nSHOW STREAMS LIKE 't2%';\n\nDROP STREAM IF EXISTS t2;"
},
{
    "function_name": "DROP STAGE",
    "summary": "Removes the specified named internal or external stage from the current/specified schema.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-stage",
    "title": "DROP STAGE",
    "description": "Removes the specified named internal or external stage from the current/specified schema. The status of the files in the stage depends on\nthe stage type:",
    "syntax": "DROP STAGE [ IF EXISTS ] <name>",
    "example": "DROP STAGE my_stage;\n\n--------------------------------+\n             status             |\n--------------------------------+\n MY_STAGE successfully dropped. |\n--------------------------------+"
},
{
    "function_name": "DROP SNAPSHOT",
    "summary": "Removes a snapshot.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-snapshot",
    "title": "DROP SNAPSHOT",
    "description": "",
    "syntax": "DROP SNAPSHOT [ IF EXISTS ] <name>;",
    "example": "DROP SNAPSHOT example_snapshot;\n\n+----------------------------------------+\n| status                                 |\n|----------------------------------------|\n| EXAMPLE_SNAPSHOT successfully dropped. |\n+----------------------------------------+"
},
{
    "function_name": "DROP SHARE",
    "summary": "Removes the specified share from the system and immediately revokes access for all consumers (i.e. accounts who have created a database from the share).",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-share",
    "title": "DROP SHARE",
    "description": "",
    "syntax": "DROP SHARE <name>",
    "example": "DROP SHARE sales_s;\n\n+-------------------------------+\n| status                        |\n|-------------------------------|\n| SALES_S successfully dropped. |\n+-------------------------------+"
},
{
    "function_name": "DROP SESSION POLICY",
    "summary": "Removes a session policy from the system.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-session-policy",
    "title": "DROP SESSION POLICY",
    "description": "",
    "syntax": "DROP SESSION POLICY [ IF EXISTS ] <name>",
    "example": ""
},
{
    "function_name": "DROP SERVICE",
    "summary": "Removes the specified Snowpark Container Services service from the current or specified schema.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-service",
    "title": "DROP SERVICE",
    "description": "",
    "syntax": "DROP SERVICE [ IF EXISTS ] <name> [ FORCE ]",
    "example": "DROP SERVICE my_tutorial;\n\n+-----------------------------------+\n| status                            |\n|-----------------------------------|\n| MY_TUTORIAL successfully dropped. |\n+-----------------------------------+"
},
{
    "function_name": "DROP SEQUENCE",
    "summary": "Removes a sequence from the current/specified schema.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-sequence",
    "title": "DROP SEQUENCE",
    "description": "Removes a sequence from the current/specified schema.",
    "syntax": "DROP SEQUENCE [ IF EXISTS ] <name> [ CASCADE | RESTRICT ]",
    "example": "DROP SEQUENCE IF EXISTS invoice_sequence_number;"
},
{
    "function_name": "DROP SEMANTIC VIEW",
    "summary": "Removes the specified semantic view from the current/specified schema.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-semantic-view",
    "title": "DROP SEMANTIC VIEW",
    "description": "Removes the specified",
    "syntax": "DROP SEMANTIC VIEW [ IF EXISTS ] <name>",
    "example": "DROP SEMANTIC VIEW my_semantic_view;"
},
{
    "function_name": "DROP SECRET",
    "summary": "Removes a secret from the system.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-secret",
    "title": "DROP SECRET",
    "description": "Removes a secret from the system.",
    "syntax": "DROP SECRET [ IF EXISTS ] <name>",
    "example": "DROP SECRET service_now_creds;"
},
{
    "function_name": "DROP SCHEMA",
    "summary": "Removes a schema from the current/specified database.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-schema",
    "title": "DROP SCHEMA",
    "description": "Removes a schema from the current/specified database.",
    "syntax": "DROP SCHEMA [ IF EXISTS ] <name> [ CASCADE | RESTRICT ]",
    "example": "DROP SCHEMA myschema;\n\n+--------------------------------+\n| status                         |\n|--------------------------------|\n| MYSCHEMA successfully dropped. |\n+--------------------------------+\n\nSHOW SCHEMAS;\n\n+---------------------------------+--------------------+------------+------------+---------------+--------+-----------------------------------------------------------+---------+----------------+\n| created_on                      | name               | is_default | is_current | database_name | owner  | comment                                                   | options | retention_time |\n|---------------------------------+--------------------+------------+------------+---------------+--------+-----------------------------------------------------------+---------+----------------|\n| Fri, 13 May 2016 17:26:07 -0700 | INFORMATION_SCHEMA | N          | N          | MYTESTDB      |        | Views describing the contents of schemas in this database |         |              1 |\n| Tue, 17 Mar 2015 16:57:04 -0700 | PUBLIC             | N          | Y          | MYTESTDB      | PUBLIC |                                                           |         |              1 |\n+---------------------------------+--------------------+------------+------------+---------------+--------+-----------------------------------------------------------+---------+----------------+"
},
{
    "function_name": "DROP ROW ACCESS POLICY",
    "summary": "Removes a row access policy from the system.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-row-access-policy",
    "title": "DROP ROW ACCESS POLICY",
    "description": "",
    "syntax": "DROP ROW ACCESS POLICY [ IF EXISTS ] <name>",
    "example": ""
},
{
    "function_name": "DROP ROLE",
    "summary": "Removes the specified role from the system.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-role",
    "title": "DROP ROLE",
    "description": "Removes the specified role from the system.",
    "syntax": "DROP ROLE [ IF EXISTS ] <name>",
    "example": "DROP ROLE myrole;"
},
{
    "function_name": "DROP RESOURCE MONITOR",
    "summary": "Removes the specified resource monitor from the system.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-resource-monitor",
    "title": "DROP RESOURCE MONITOR",
    "description": "Removes the specified",
    "syntax": "DROP RESOURCE MONITOR [ IF EXISTS ] <name>",
    "example": "DROP RESOURCE MONITOR IF EXISTS my_rm;"
},
{
    "function_name": "DROP REPLICATION GROUP",
    "summary": "Removes a replication group from the account.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-replication-group",
    "title": "DROP REPLICATION GROUP",
    "description": "",
    "syntax": "DROP REPLICATION GROUP [ IF EXISTS ] <name>",
    "example": "DROP REPLICATION GROUP myrg;"
},
{
    "function_name": "DROP PROJECTION POLICY",
    "summary": "Removes a projection policy from the current/specified schema.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-projection-policy",
    "title": "DROP PROJECTION POLICY",
    "description": "",
    "syntax": "DROP PROJECTION POLICY <name>",
    "example": ""
},
{
    "function_name": "DROP PROCEDURE",
    "summary": "Removes the specified stored procedure from the current/specified schema.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-procedure",
    "title": "DROP PROCEDURE",
    "description": "Removes the specified stored procedure from the current/specified schema.",
    "syntax": "DROP PROCEDURE [ IF EXISTS ] <procedure_name> ( [ <arg_data_type> , ... ] )",
    "example": "DROP PROCEDURE add_accounting_user(varchar);\n\n-------------------------------------------+\n             status                        |\n-------------------------------------------+\n ADD_ACCOUNTING_USER successfully dropped. |\n-------------------------------------------+"
},
{
    "function_name": "DROP PRIVACY POLICY",
    "summary": "Removes the specified privacy policy from the current/specified schema.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-privacy-policy",
    "title": "DROP PRIVACY POLICY",
    "description": "",
    "syntax": "DROP PRIVACY POLICY <name>",
    "example": "DROP PRIVACY POLICY myprivpolicy;\n\n+------------------------------------+\n| status                             |\n|------------------------------------|\n| MYPRIVPOLICY successfully dropped. |\n+------------------------------------+"
},
{
    "function_name": "DROP PIPE",
    "summary": "Removes the specified pipe from the current/specified schema.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-pipe",
    "title": "DROP PIPE",
    "description": "Removes the specified pipe from the current/specified schema.",
    "syntax": "DROP PIPE [ IF EXISTS ] <name>",
    "example": "DROP PIPE mypipe;\n\n+------------------------------+\n| status                       |\n|------------------------------|\n| MYPIPE successfully dropped. |\n+------------------------------+"
},
{
    "function_name": "DROP PASSWORD POLICY",
    "summary": "Removes a password policy from the system.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-password-policy",
    "title": "DROP PASSWORD POLICY",
    "description": "Removes a password policy from the system.",
    "syntax": "DROP PASSWORD POLICY [ IF EXISTS ] <name>",
    "example": ""
},
{
    "function_name": "DROP PACKAGES POLICY",
    "summary": "Removes a packages policy from the system.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-packages-policy",
    "title": "DROP PACKAGES POLICY",
    "description": "Removes a packages policy from the system.",
    "syntax": "DROP PACKAGES POLICY [ IF EXISTS ] <name>",
    "example": ""
},
{
    "function_name": "DROP ORGANIZATION USER GROUP",
    "summary": "Removes an organization user group from the organization.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-organization-user-group",
    "title": "DROP ORGANIZATION USER GROUP",
    "description": "",
    "syntax": "DROP ORGANIZATION USER GROUP <name>",
    "example": ""
},
{
    "function_name": "DROP ORGANIZATION USER",
    "summary": "Removes an organization user from the organization.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-organization-user",
    "title": "DROP ORGANIZATION USER",
    "description": "",
    "syntax": "DROP ORGANIZATION USER <name>",
    "example": ""
},
{
    "function_name": "DROP ORGANIZATION PROFILE",
    "summary": "Removes an organization profile.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-organization-profile",
    "title": "DROP ORGANIZATION PROFILE",
    "description": "",
    "syntax": "DROP ORGANIZATION PROFILE <name>",
    "example": "DROP ORGANIZATION PROFILE myorganizationprofile;\n\n+---------------------------------------------+\n| status                                      |\n|---------------------------------------------|\n| MYORGANIZATIONPROFILE successfully dropped. |\n+---------------------------------------------+"
},
{
    "function_name": "DROP NOTEBOOK",
    "summary": "Removes the specified notebook from the current/specified schema, but retains a version of the notebook so that it can be recovered using UNDROP NOTEBOOK.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-notebook",
    "title": "DROP NOTEBOOK",
    "description": "",
    "syntax": "DROP NOTEBOOK <name>",
    "example": "DROP NOTEBOOK mynotebook;"
},
{
    "function_name": "DROP NETWORK RULE",
    "summary": "Removes the specified network rule from the system.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-network-rule",
    "title": "DROP NETWORK RULE",
    "description": "Removes the specified network rule from the system.",
    "syntax": "DROP NETWORK RULE [ IF EXISTS ] <name>",
    "example": "DROP NETWORK RULE myrule;"
},
{
    "function_name": "DROP NETWORK POLICY",
    "summary": "Removes the specified network policy from the system.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-network-policy",
    "title": "DROP NETWORK POLICY",
    "description": "Removes the specified network policy from the system.",
    "syntax": "DROP NETWORK POLICY [ IF EXISTS ] <name>",
    "example": "DROP NETWORK POLICY mypolicy;"
},
{
    "function_name": "DROP MODEL MONITOR",
    "summary": "Removes the specified model monitor from the current or specified schema.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-model-monitor",
    "title": "DROP MODEL MONITOR",
    "description": "Removes the specified",
    "syntax": "DROP MODEL MONITOR [ IF EXISTS ] <monitor_name>;",
    "example": ""
},
{
    "function_name": "DROP MODEL",
    "summary": "Removes a machine learning model from the current/specified schema.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-model",
    "title": "DROP MODEL",
    "description": "Removes a machine learning model from the current/specified schema.",
    "syntax": "DROP MODEL <name>",
    "example": ""
},
{
    "function_name": "DROP MATERIALIZED VIEW",
    "summary": "Removes the specified materialized view from the current/specified schema.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-materialized-view",
    "title": "DROP MATERIALIZED VIEW",
    "description": "",
    "syntax": "DROP MATERIALIZED VIEW [ IF EXISTS ] <view_name>",
    "example": "DROP MATERIALIZED VIEW mv1;\n\n---------------------------+\n           status          |\n---------------------------+\n MV1 successfully dropped. |\n---------------------------+"
},
{
    "function_name": "DROP MASKING POLICY",
    "summary": "Removes a masking policy from the system.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-masking-policy",
    "title": "DROP MASKING POLICY",
    "description": "",
    "syntax": "DROP MASKING POLICY <name>",
    "example": ""
},
{
    "function_name": "DROP MANAGED ACCOUNT",
    "summary": "Removes a managed account, including all objects created in the account, and immediately restricts access to the account.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-managed-account",
    "title": "DROP MANAGED ACCOUNT",
    "description": "",
    "syntax": "DROP MANAGED ACCOUNT <name>",
    "example": "DROP MANAGED ACCOUNT reader_acct1;\n\n  +------------------------------------+\n  | status                             |\n  |------------------------------------|\n  | READER_ACCT1 successfully dropped. |\n  +------------------------------------+"
},
{
    "function_name": "DROP LISTING",
    "summary": "Removes the specified listing from the system and immediately revokes access for all consumers.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-listing",
    "title": "DROP LISTING",
    "description": "Removes the specified",
    "syntax": "DROP LISTING <name>",
    "example": "DROP LISTING IF EXISTS MYLISTING\n\n+----------------------------------+\n| status                           |\n|----------------------------------|\n| MYLISTING successfully dropped. |\n+----------------------------------+"
},
{
    "function_name": "DROP JOIN POLICY",
    "summary": "Removes a join policy from the current/specified schema.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-join-policy",
    "title": "DROP JOIN POLICY",
    "description": "",
    "syntax": "DROP JOIN POLICY <name>",
    "example": ""
},
{
    "function_name": "DROP INTEGRATION",
    "summary": "Removes an integration from the account.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-integration",
    "title": "DROP INTEGRATION",
    "description": "Removes an integration from the account.",
    "syntax": "DROP [ { API | CATALOG | EXTERNAL ACCESS | NOTIFICATION | SECURITY | STORAGE } ] INTEGRATION [ IF EXISTS ] <name>",
    "example": "SHOW INTEGRATIONS LIKE 't2%';\n\nDROP INTEGRATION t2;\n\nSHOW INTEGRATIONS LIKE 't2%';\n\nDROP INTEGRATION IF EXISTS t2;"
},
{
    "function_name": "DROP INDEX",
    "summary": "Drops a secondary index.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-index",
    "title": "DROP INDEX",
    "description": "",
    "syntax": "DROP INDEX [ IF EXISTS ] <table_name>.<index_name>",
    "example": "DROP INDEX t0.c_idx;"
},
{
    "function_name": "DROP IMAGE REPOSITORY",
    "summary": "Removes the specified image repository from the current or specified schema.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-image-repository",
    "title": "DROP IMAGE REPOSITORY",
    "description": "",
    "syntax": "DROP IMAGE REPOSITORY [ IF EXISTS ] <name>",
    "example": "DROP IMAGE REPOSITORY tutorial_repository;\n\n+-------------------------------------------+\n| status                                    |\n|-------------------------------------------|\n| TUTORIAL_REPOSITORY successfully dropped. |\n+-------------------------------------------+"
},
{
    "function_name": "DROP ICEBERG TABLE",
    "summary": "Removes an Apache Iceberg™ table from the current/specified schema, but retains a version of the Iceberg table so that it can be recovered using UNDROP ICEBERG TABLE.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-iceberg-table",
    "title": "DROP ICEBERG TABLE",
    "description": "Removes an",
    "syntax": "DROP [ ICEBERG ] TABLE [ IF EXISTS ] <name> [ CASCADE | RESTRICT ]",
    "example": "DROP ICEBERG TABLE t2;\n\n+--------------------------+\n| status                   |\n|--------------------------|\n| T2 successfully dropped. |\n+--------------------------+\n\nDROP ICEBERG TABLE IF EXISTS t2;\n\n+------------------------------------------------------------+\n| status                                                     |\n|------------------------------------------------------------|\n| Drop statement executed successfully (T2 already dropped). |\n+------------------------------------------------------------+"
},
{
    "function_name": "DROP GIT REPOSITORY",
    "summary": "Removes the specified Snowflake Git repository clone from the current/specified schema.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-git-repository",
    "title": "DROP GIT REPOSITORY",
    "description": "Removes the specified Snowflake Git repository clone from the current/specified schema.",
    "syntax": "DROP GIT REPOSITORY [ IF EXISTS ] <name>",
    "example": "DROP GIT REPOSITORY my_repository;\n\n+-------------------------------------+\n|                status               |\n+-------------------------------------+\n| MY_REPOSITORY successfully dropped. |\n+-------------------------------------+"
},
{
    "function_name": "DROP FUNCTION (Snowpark Container Services)",
    "summary": "Removes the specified service function.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-function-spcs",
    "title": "DROP FUNCTION (Snowpark Container Services)",
    "description": "Removes the specified",
    "syntax": "DROP FUNCTION [ IF EXISTS ] <name> ( [ <arg_data_type> , ... ] )",
    "example": "DROP FUNCTION my_echo_udf(VARCHAR);\n\n+-----------------------------------+\n| status                            |\n|-----------------------------------|\n| MY_ECHO_UDF successfully dropped. |\n+-----------------------------------+"
},
{
    "function_name": "DROP FUNCTION (DMF)",
    "summary": "Removes the specified data metric function (DMF) from the current or specified schema.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-function-dmf",
    "title": "DROP FUNCTION (DMF)",
    "description": "",
    "syntax": "DROP FUNCTION [ IF EXISTS ] <name>(\nTABLE(  <arg_data_type> [ , ... ] ) [ , TABLE( <arg_data_type> [ , ... ] ) ]\n)",
    "example": ""
},
{
    "function_name": "DROP FUNCTION",
    "summary": "Removes the specified user-defined function (UDF) or external function from the current/specified schema.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-function",
    "title": "DROP FUNCTION",
    "description": "Removes the specified user-defined function (UDF) or external function from the current/specified schema.",
    "syntax": "DROP FUNCTION [ IF EXISTS ] <name> ( [ <arg_data_type> , ... ] )",
    "example": "DROP FUNCTION multiply(number, number);\n\n--------------------------------+\n             status             |\n--------------------------------+\n MULTIPLY successfully dropped. |\n--------------------------------+"
},
{
    "function_name": "DROP FILE FORMAT",
    "summary": "Removes the specified file format from the current/specified schema.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-file-format",
    "title": "DROP FILE FORMAT",
    "description": "Removes the specified file format from the current/specified schema.",
    "syntax": "DROP FILE FORMAT [ IF EXISTS ] <name>",
    "example": "DROP FILE FORMAT my_format;\n\n---------------------------------+\n           status                |\n---------------------------------+\nMY_FORMAT successfully dropped.  |\n---------------------------------+"
},
{
    "function_name": "DROP FEATURE POLICY",
    "summary": "Removes the specified feature policy.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-feature-policy",
    "title": "DROP FEATURE POLICY",
    "description": "Removes the specified",
    "syntax": "DROP FEATURE POLICY <name>",
    "example": "DROP FEATURE POLICY block_db_policy;\n\n+---------------------------------------+\n| status                                |\n|---------------------------------------|\n| BLOCK_DB_POLICY successfully dropped. |\n+---------------------------------------+"
},
{
    "function_name": "DROP FAILOVER GROUP",
    "summary": "Removes a failover group from the account.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-failover-group",
    "title": "DROP FAILOVER GROUP",
    "description": "",
    "syntax": "DROP FAILOVER GROUP [ IF EXISTS ] <name>",
    "example": "DROP FAILOVER GROUP IF EXISTS myfg;"
},
{
    "function_name": "DROP EXTERNAL VOLUME",
    "summary": "Removes an external volume from the account, but retains a version of the external volume so that it can be recovered using UNDROP EXTERNAL VOLUME.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-external-volume",
    "title": "DROP EXTERNAL VOLUME",
    "description": "Removes an",
    "syntax": "DROP EXTERNAL VOLUME [ IF EXISTS ] <name>",
    "example": "DROP EXTERNAL VOLUME my_external_volume;"
},
{
    "function_name": "DROP EXTERNAL TABLE",
    "summary": "Removes an external table from the current/specified schema.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-external-table",
    "title": "DROP EXTERNAL TABLE",
    "description": "Removes an external table from the current/specified schema. Note that this is a metadata-only operation. None of the files that the\nexternal table refers to are dropped.",
    "syntax": "DROP EXTERNAL TABLE [ IF EXISTS ] <name> [ CASCADE | RESTRICT ]",
    "example": "SHOW EXTERNAL TABLES LIKE 't2%';\n\n+-------------------------------+------------------+---------------+-------------+-----------------------+---------+-----------------------------------------+------------------+------------------+-------+-----------+----------------------+\n| created_on                    | name             | database_name | schema_name | owner                 | comment | location                                | file_format_name | file_format_type | cloud | region    | notification_channel |\n|-------------------------------+------------------+---------------+-------------+-----------------------+---------+-----------------------------------------+------------------+------------------+-------+-----------+----------------------|\n| 2018-08-06 06:00:42.340 -0700 | T2               | MYDB          | PUBLIC      | MYROLE                |         | @MYDB.PUBLIC.MYSTAGE/                   |                  | JSON             | AWS   | us-east-1 | NULL                 |\n+-------------------------------+------------------+---------------+-------------+-----------------------+---------+-----------------------------------------+------------------+------------------+-------+-----------+----------------------+\n\nDROP EXTERNAL TABLE t2;\n\n+--------------------------+\n| status                   |\n|--------------------------|\n| T2 successfully dropped. |\n+--------------------------+\n\nSHOW EXTERNAL TABLES LIKE 't2%';\n\n+------------+------+---------------+-------------+-------+---------+----------+------------------+------------------+-------+--------+----------------------+\n| created_on | name | database_name | schema_name | owner | comment | location | file_format_name | file_format_type | cloud | region | notification_channel |\n|------------+------+---------------+-------------+-------+---------+----------+------------------+------------------+-------+--------+----------------------|\n+------------+------+---------------+-------------+-------+---------+----------+------------------+------------------+-------+--------+----------------------+\n\nDROP EXTERNAL TABLE IF EXISTS t2;\n\n+------------------------------------------------------------+\n| status                                                     |\n|------------------------------------------------------------|\n| Drop statement executed successfully (T2 already dropped). |\n+------------------------------------------------------------+"
},
{
    "function_name": "DROP DYNAMIC TABLE",
    "summary": "Removes a dynamic table from the current/specified schema.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-dynamic-table",
    "title": "DROP DYNAMIC TABLE",
    "description": "Removes a",
    "syntax": "DROP DYNAMIC TABLE [ IF EXISTS ] <name>",
    "example": "DROP DYNAMIC TABLE my_dynamic_table;\n\nDROP TABLE my_dynamic_table;"
},
{
    "function_name": "DROP DBT PROJECT",
    "summary": "Removes the specified dbt project object from the current or specified schema.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-dbt-project",
    "title": "DROP DBT PROJECT",
    "description": "",
    "syntax": "DROP DBT PROJECT [ IF EXISTS ] <name>",
    "example": "DROP DBT PROJECT my_dbt_project;\n\n+--------------------------------------+\n| status                               |\n|--------------------------------------|\n| MY_DBT_PROJECT successfully dropped. |\n+--------------------------------------+"
},
{
    "function_name": "DROP DATABASE ROLE",
    "summary": "Removes the specified database role from the system.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-database-role",
    "title": "DROP DATABASE ROLE",
    "description": "Removes the specified database role from the system.",
    "syntax": "DROP DATABASE ROLE [ IF EXISTS ] <name>",
    "example": "DROP DATABASE ROLE d1.dr1;"
},
{
    "function_name": "DROP DATABASE",
    "summary": "Removes a database from the system.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-database",
    "title": "DROP DATABASE",
    "description": "Removes a database from the system.",
    "syntax": "DROP DATABASE [ IF EXISTS ] <name> [ CASCADE | RESTRICT ]",
    "example": "DROP DATABASE mytestdb2;\n\n+---------------------------------+\n| status                          |\n|---------------------------------|\n| MYTESTDB2 successfully dropped. |\n+---------------------------------+\n\nSHOW DATABASES LIKE 'mytestdb2';\n\n+------------+------+------------+------------+--------+-------+---------+---------+----------------+\n| created_on | name | is_default | is_current | origin | owner | comment | options | retention_time |\n|------------+------+------------+------------+--------+-------+---------+---------+----------------|\n+------------+------+------------+------------+--------+-------+---------+---------+----------------+\n\nSHOW DATABASES HISTORY LIKE 'mytestdb2';\n\n+---------------------------------+-----------+------------+------------+--------+--------+---------+---------+----------------+---------------------------------+\n| created_on                      | name      | is_default | is_current | origin | owner  | comment | options | retention_time | dropped_on                      |\n|---------------------------------+-----------+------------+------------+--------+--------+---------+---------+----------------+---------------------------------|\n| Wed, 25 Feb 2015 16:16:54 -0800 | MYTESTDB2 | N          | N          |        | PUBLIC |         |         |              1 | Fri, 13 May 2016 17:35:09 -0700 |\n+---------------------------------+-----------+------------+------------+--------+--------+---------+---------+----------------+---------------------------------+"
},
{
    "function_name": "DROP CORTEX SEARCH SERVICE",
    "summary": "Removes the specified Cortex Search service from the current schema.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-cortex-search",
    "title": "DROP CORTEX SEARCH SERVICE",
    "description": "Removes the specified",
    "syntax": "DROP CORTEX SEARCH SERVICE <name>;",
    "example": "DROP CORTEX SEARCH SERVICE mysvc;\n\n+------------------------------+\n| status                       |\n|------------------------------|\n| mysvc successfully dropped.  |\n+------------------------------+"
},
{
    "function_name": "DROP CONTACT",
    "summary": "Removes the specified contact from the current schema.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-contact",
    "title": "DROP CONTACT",
    "description": "",
    "syntax": "DROP CONTACT <name>",
    "example": "DROP CONTACT mycontact;\n\n+---------------------------------+\n| status                          |\n|---------------------------------|\n| MYCONTACT successfully dropped. |\n+---------------------------------+"
},
{
    "function_name": "DROP CONNECTION",
    "summary": "Removes a connection from the account.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-connection",
    "title": "DROP CONNECTION",
    "description": "",
    "syntax": "DROP CONNECTION [ IF EXISTS ] <name>",
    "example": "SHOW CONNECTIONS LIKE 't2%';\n\n\nDROP CONNECTION t2;\n\n\nSHOW CONNECTIONS LIKE 't2%';\n\nDROP CONNECTION IF EXISTS t2;"
},
{
    "function_name": "DROP COMPUTE POOL",
    "summary": "Removes the specified compute pool from the account.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-compute-pool",
    "title": "DROP COMPUTE POOL",
    "description": "",
    "syntax": "DROP COMPUTE POOL [ IF EXISTS ] <name>",
    "example": "DROP COMPUTE POOL tutorial_compute_pool;\n\n+---------------------------------------------+\n| status                                      |\n|---------------------------------------------|\n| TUTORIAL_COMPUTE_POOL successfully dropped. |\n+---------------------------------------------+"
},
{
    "function_name": "DROP CATALOG INTEGRATION",
    "summary": "Removes a catalog integration from the account.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-catalog-integration",
    "title": "DROP CATALOG INTEGRATION",
    "description": "Removes a",
    "syntax": "DROP CATALOG INTEGRATION [ IF EXISTS ] <name>",
    "example": "DROP CATALOG INTEGRATION myInt;\n\nDROP CATALOG INTEGRATION IF EXISTS myInt;"
},
{
    "function_name": "DROP AUTHENTICATION POLICY",
    "summary": "Removes an authentication policy from the system.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-authentication-policy",
    "title": "DROP AUTHENTICATION POLICY",
    "description": "Removes an",
    "syntax": "DROP AUTHENTICATION POLICY [ IF EXISTS ] <name>",
    "example": "DROP AUTHENTICATION POLICY my_auth_policy;"
},
{
    "function_name": "DROP APPLICATION ROLE",
    "summary": "Removes the specified application role from the system.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-application-role",
    "title": "DROP APPLICATION ROLE",
    "description": "",
    "syntax": "DROP APPLICATION ROLE [ IF EXISTS ] <name>",
    "example": "DROP APPLICATION ROLE APP_ROLE;"
},
{
    "function_name": "DROP APPLICATION PACKAGE",
    "summary": "Removes an application package from the system in the Native Apps Framework.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-application-package",
    "title": "DROP APPLICATION PACKAGE",
    "description": "",
    "syntax": "DROP APPLICATION PACKAGE [ IF EXISTS ] <name>",
    "example": "DROP APPLICATION PACKAGE hello_snowflake_app;\n\n+-------------------------------------------+\n| status                                    |\n|-------------------------------------------|\n| hello_snowflake_app successfully dropped. |\n+-------------------------------------------+"
},
{
    "function_name": "DROP APPLICATION",
    "summary": "Removes an application from the system in the Native Apps Framework.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-application",
    "title": "DROP APPLICATION",
    "description": "",
    "syntax": "DROP APPLICATION [ IF EXISTS ] <name> [ CASCADE ]",
    "example": "DROP APPLICATION hello_snowflake_app;\n\n+-------------------------------------------+\n| status                                    |\n|-------------------------------------------|\n| hello_snowflake_app successfully dropped. |\n+-------------------------------------------+"
},
{
    "function_name": "DROP ALERT",
    "summary": "Drops an existing alert.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-alert",
    "title": "DROP ALERT",
    "description": "Drops an existing",
    "syntax": "DROP ALERT [ IF EXISTS ] <name>",
    "example": ""
},
{
    "function_name": "DROP AGGREGATION POLICY",
    "summary": "Removes an aggregation policy from the current/specified schema.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-aggregation-policy",
    "title": "DROP AGGREGATION POLICY",
    "description": "",
    "syntax": "DROP AGGREGATION POLICY <name>",
    "example": ""
},
{
    "function_name": "DROP ACCOUNT",
    "summary": "Drops an account, which initiates the process of deleting the account.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop-account",
    "title": "DROP ACCOUNT",
    "description": "Drops an account, which initiates the process of",
    "syntax": "DROP ACCOUNT [ IF EXISTS ] <name> GRACE_PERIOD_IN_DAYS = <integer>",
    "example": ""
},
{
    "function_name": "DROP <object>",
    "summary": "Removes the specified object from the system.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/drop",
    "title": "DROP",
    "description": "Removes the specified object from the system.",
    "syntax": "",
    "example": ""
},
{
    "function_name": "DESCRIBE WAREHOUSE",
    "summary": "Describes a virtual warehouse.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-warehouse",
    "title": "DESCRIBE WAREHOUSE",
    "description": "Describes a",
    "syntax": "DESC[RIBE] WAREHOUSE <name>",
    "example": "CREATE WAREHOUSE temporary_warehouse WAREHOUSE_SIZE=XSMALL;\n\nDESCRIBE WAREHOUSE temporary_warehouse;\n\n+-------------------------------+---------------------+-----------+\n| created_on                    | name                | kind      |\n|-------------------------------+---------------------+-----------|\n| 2022-06-23 00:00:00.000 -0700 | TEMPORARY_WAREHOUSE | WAREHOUSE |\n+-------------------------------+---------------------+-----------+"
},
{
    "function_name": "DESCRIBE VIEW",
    "summary": "Describes the columns in a view (or table).",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-view",
    "title": "DESCRIBE VIEW",
    "description": "Describes the columns in a view (or table).",
    "syntax": "DESC[RIBE] VIEW <name>",
    "example": "CREATE VIEW emp_view AS SELECT id \"Employee Number\", lname \"Last Name\", location \"Home Base\" FROM emp;\n\nDESC VIEW emp_view;\n\n+-----------------+--------------+--------+-------+---------+-------------+------------+-------+------------+---------+-------------+-----------------+\n| name            | type         | kind   | null? | default | primary key | unique key | check | expression | comment | policy name |  privacy domain |\n|-----------------+--------------+--------+-------+---------+-------------+------------+-------+------------+---------+-------------+-----------------+\n| Employee Number | NUMBER(38,0) | COLUMN | Y     | NULL    | N           | N          | NULL  | NULL       | NULL    | NULL        | NULL            |\n| Last Name       | VARCHAR(50)  | COLUMN | Y     | NULL    | N           | N          | NULL  | NULL       | NULL    | NULL        | NULL            |\n| Home Base       | VARCHAR(100) | COLUMN | Y     | NULL    | N           | N          | NULL  | NULL       | NULL    | NULL        | NULL            |\n+-----------------+--------------+--------+-------+---------+-------------+------------+-------+------------+---------+-------------+-----------------+"
},
{
    "function_name": "DESCRIBE USER",
    "summary": "Describes a user, including the current and default values of the properties of the user.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-user",
    "title": "DESCRIBE USER",
    "description": "Describes a",
    "syntax": "{ DESC | DESCRIBE } USER <name>",
    "example": "DESCRIBE USER my_user;\n\n+--------------------------------------------+-------------------------+---------+--------------------------------------------------------------------------------------------------------------------------------------------+\n| property                                   | value                   | default | description                                                                                                                                |\n|--------------------------------------------+-------------------------+---------+--------------------------------------------------------------------------------------------------------------------------------------------|\n| NAME                                       | JSMITH                  | null    | Name                                                                                                                                       |\n| COMMENT                                    | null                    | null    | user comment associated to an object in the dictionary                                                                                     |\n| DISPLAY_NAME                               | Jane Smith              | null    | Display name of the associated object                                                                                                      |\n| TYPE                                       | PERSON                  | null    | Type of the account, application package, data exchange, data exchange listing, replication group, secret, network rule, or user.          |\n| LOGIN_NAME                                 | JSMITH                  | null    | Login name of the user                                                                                                                     |\n| FIRST_NAME                                 | Jane                    | null    | First name of the user                                                                                                                     |\n| MIDDLE_NAME                                | null                    | null    | Middle name of the user                                                                                                                    |\n| LAST_NAME                                  | Smith                   | null    | Last name of the user                                                                                                                      |\n| EMAIL                                      | jane.smith@example.com  | null    | Email address of the user                                                                                                                  |\n| PASSWORD                                   | ********                | null    | Password of the user                                                                                                                       |\n| MUST_CHANGE_PASSWORD                       | false                   | false   | User must change the password                                                                                                              |\n| DISABLED                                   | false                   | false   | Whether the entity is disabled                                                                                                             |\n| SNOWFLAKE_LOCK                             | false                   | false   | Whether the user, account, or organization is locked by Snowflake                                                                          |\n| SNOWFLAKE_SUPPORT                          | false                   | false   | Snowflake Support is allowed to use the user or account                                                                                    |\n| DAYS_TO_EXPIRY                             | null                    | null    | User record will be treated as expired after specified number of days                                                                      |\n| MINS_TO_UNLOCK                             | null                    | null    | Temporary lock on the user will be removed after specified number of minutes                                                               |\n| DEFAULT_WAREHOUSE                          | MY_WAREHOUSE            | null    | Default warehouse for this user                                                                                                            |\n| DEFAULT_NAMESPACE                          | MY_DB.MY_SCHEMA         | null    | Default database namespace prefix for this user                                                                                            |\n| DEFAULT_ROLE                               | MY_ROLE                 | null    | Primary principal of user session will be set to this role                                                                                 |\n| DEFAULT_SECONDARY_ROLES                    | []                      | [ALL]   | The secondary roles will be set to all roles provided here.                                                                                |\n| EXT_AUTHN_DUO                              | false                   | false   | Whether Duo Security is enabled as second factor authentication                                                                            |\n| EXT_AUTHN_UID                              | null                    | null    | External authentication ID of the user                                                                                                     |\n| DEFAULT_MFA_METHOD                         | null                    | null    | Default MFA method for the user                                                                                                            |\n| HAS_MFA                                    | true                    | false   | Whether the user is enrolled in multi-factor authentication                                                                                |\n| HAS_PAT                                    | true                    | false   | Whether the user has a programmatic access token                                                                                           |\n| HAS_FEDERATED_WORKLOAD_AUTHENTICATION      | false                   | false   | Reserved for future use                                                                                                                    |\n| MINS_TO_BYPASS_MFA                         | null                    | null    | Temporary bypass MFA for the user for a specified number of minutes                                                                        |\n| MINS_TO_BYPASS_NETWORK_POLICY              | null                    | null    | Temporary bypass network policy on the user for a specified number of minutes                                                              |\n| RSA_PUBLIC_KEY                             | ...                     | null    | RSA public key of the user                                                                                                                 |\n| RSA_PUBLIC_KEY_FP                          | SHA256:...=             | null    | Fingerprint of user's RSA public key.                                                                                                      |\n| RSA_PUBLIC_KEY_LAST_SET_TIME               | null                    | null    | The timestamp at which the RSA public key was last set for the user. Defaults to null if no RSA public key has been set yet.               |\n| RSA_PUBLIC_KEY_2                           | ...                     | null    | Second RSA public key of the user                                                                                                          |\n| RSA_PUBLIC_KEY_2_FP                        | SHA256:...=             | null    | Fingerprint of user's second RSA public key.                                                                                               |\n| RSA_PUBLIC_KEY_2_LAST_SET_TIME             | null                    | null    | The timestamp at which the second RSA public key was last set for the user. Defaults to null if no second RSA public key has been set yet. |\n| PASSWORD_LAST_SET_TIME                     | 2020-10-08 01:33:13.43  | null    | The timestamp on which the last non-null password was set for the user. Default to null if no password has been set yet.                   |\n| CUSTOM_LANDING_PAGE_URL                    | null                    | null    | Reserved for future use                                                                                                                    |\n| CUSTOM_LANDING_PAGE_URL_FLUSH_NEXT_UI_LOAD | false                   | false   | Reserved for future use                                                                                                                    |\n+--------------------------------------------+-------------------------+---------+--------------------------------------------------------------------------------------------------------------------------------------------+"
},
{
    "function_name": "DESCRIBE TRANSACTION",
    "summary": "Describes the transaction, including the start time and the state (running, committed, rolled back).",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-transaction",
    "title": "DESCRIBE TRANSACTION",
    "description": "Describes the",
    "syntax": "{ DESC | DESCRIBE } TRANSACTION <transaction_id>",
    "example": "DESC TRANSACTION 1651535571261000000;"
},
{
    "function_name": "DESCRIBE TASK",
    "summary": "Describes the columns in a task.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-task",
    "title": "DESCRIBE TASK",
    "description": "Describes the columns in a task.",
    "syntax": "DESC[RIBE] TASK <name>",
    "example": "CREATE TASK mytask ( ... );\n\nDESC TASK mytask;"
},
{
    "function_name": "DESCRIBE TABLE",
    "summary": "Describes either the columns in a table or the set of stage properties for the table (current values and default values).",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-table",
    "title": "DESCRIBE TABLE",
    "description": "Describes either the columns in a table or the set of stage properties for the table (current values and default values).",
    "syntax": "{ DESCRIBE | DESC } TABLE <name> [ TYPE =  { COLUMNS | STAGE } ]",
    "example": "CREATE OR REPLACE TABLE desc_example(\n  c1 INT PRIMARY KEY,\n  c2 INT,\n  c3 INT UNIQUE,\n  c4 VARCHAR(30) DEFAULT 'Not applicable' COMMENT 'This column is rarely populated',\n  c5 VARCHAR(100));\n\nDESCRIBE TABLE desc_example;\n\n+------+--------------+--------+-------+------------------+-------------+------------+-------+------------+---------------------------------+-------------+----------------+-------------------------+\n| name | type         | kind   | null? | default          | primary key | unique key | check | expression | comment                         | policy name | privacy domain | schema evolution record |\n|------+--------------+--------+-------+------------------+-------------+------------+-------+------------+---------------------------------+-------------+----------------+-------------------------|\n| C1   | NUMBER(38,0) | COLUMN | N     | NULL             | Y           | N          | NULL  | NULL       | NULL                            | NULL        | NULL           | NULL                    |\n| C2   | NUMBER(38,0) | COLUMN | Y     | NULL             | N           | N          | NULL  | NULL       | NULL                            | NULL        | NULL           | NULL                    |\n| C3   | NUMBER(38,0) | COLUMN | Y     | NULL             | N           | Y          | NULL  | NULL       | NULL                            | NULL        | NULL           | NULL                    |\n| C4   | VARCHAR(30)  | COLUMN | Y     | 'Not applicable' | N           | N          | NULL  | NULL       | This column is rarely populated | NULL        | NULL           | NULL                    |\n| C5   | VARCHAR(100) | COLUMN | Y     | NULL             | N           | N          | NULL  | NULL       | NULL                            | NULL        | NULL           | NULL                    |\n+------+--------------+--------+-------+------------------+-------------+------------+-------+------------+---------------------------------+-------------+----------------+-------------------------+\n\nCREATE OR REPLACE TABLE desc_example(\n  c1 INT PRIMARY KEY,\n  c2 INT,\n  c3 INT UNIQUE,\n  c4 VARCHAR(30) DEFAULT 'Not applicable' COMMENT 'This column is rarely populated',\n  c5 VARCHAR(100) WITH MASKING POLICY email_mask);\n\n+------+--------------+--------+-------+------------------+-------------+------------+-------+------------+---------------------------------+---------------------------------+----------------+-------------------------+\n| name | type         | kind   | null? | default          | primary key | unique key | check | expression | comment                         | policy name                     | privacy domain | schema evolution record |\n|------+--------------+--------+-------+------------------+-------------+------------+-------+------------+---------------------------------+---------------------------------+----------------|-------------------------|\n| C1   | NUMBER(38,0) | COLUMN | N     | NULL             | Y           | N          | NULL  | NULL       | NULL                            | NULL                            | NULL           | NULL                    |\n| C2   | NUMBER(38,0) | COLUMN | Y     | NULL             | N           | N          | NULL  | NULL       | NULL                            | NULL                            | NULL           | NULL                    |\n| C3   | NUMBER(38,0) | COLUMN | Y     | NULL             | N           | Y          | NULL  | NULL       | NULL                            | NULL                            | NULL           | NULL                    |\n| C4   | VARCHAR(30)  | COLUMN | Y     | 'Not applicable' | N           | N          | NULL  | NULL       | This column is rarely populated | NULL                            | NULL           | NULL                    |\n| C5   | VARCHAR(100) | COLUMN | Y     | NULL             | N           | N          | NULL  | NULL       | NULL                            | HT_SENSORS.HT_SCHEMA.EMAIL_MASK | NULL           | NULL                    |\n+------+--------------+--------+-------+------------------+-------------+------------+-------+------------+---------------------------------+---------------------------------+----------------+-------------------------+\n\nDESCRIBE TABLE desc_example TYPE = STAGE;\n\n+--------------------+--------------------------------+---------------+-----------------+------------------+\n| parent_property    | property                       | property_type | property_value  | property_default |\n|--------------------+--------------------------------+---------------+-----------------+------------------|\n| STAGE_FILE_FORMAT  | TYPE                           | String        | CSV             | CSV              |\n| STAGE_FILE_FORMAT  | RECORD_DELIMITER               | String        | \\n              | \\n               |\n| STAGE_FILE_FORMAT  | FIELD_DELIMITER                | String        | ,               | ,                |\n| STAGE_FILE_FORMAT  | FILE_EXTENSION                 | String        |                 |                  |\n| STAGE_FILE_FORMAT  | SKIP_HEADER                    | Integer       | 0               | 0                |\n..."
},
{
    "function_name": "DESCRIBE STREAMLIT",
    "summary": "Describes the columns in a Streamlit object.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-streamlit",
    "title": "DESCRIBE STREAMLIT",
    "description": "Describes the columns in a Streamlit object.",
    "syntax": "DESC[RIBE] STREAMLIT <name>",
    "example": ""
},
{
    "function_name": "DESCRIBE STREAM",
    "summary": "Describes the properties specified for a stream.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-stream",
    "title": "DESCRIBE STREAM",
    "description": "Describes the properties specified for a stream.",
    "syntax": "DESC[RIBE] STREAM <name>",
    "example": "CREATE STREAM mystream ( ... );\n\nDESC STREAM mystream;"
},
{
    "function_name": "DESCRIBE STAGE",
    "summary": "Describes the values specified for the properties in a stage (file format, copy, and location), as well as the default values for each property.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-stage",
    "title": "DESCRIBE STAGE",
    "description": "Describes the values specified for the properties in a stage (file format, copy, and location), as well as the default values for\neach property.",
    "syntax": "DESC[RIBE] STAGE <name>",
    "example": "DESC STAGE my_s3_stage;\n+--------------------+--------------------------------+---------------+-------------------------------------------------------+------------------+\n| parent_property    | property                       | property_type | property_value                                        | property_default |\n|--------------------+--------------------------------+---------------+-------------------------------------------------------+------------------|\n| STAGE_FILE_FORMAT  | TYPE                           | String        | CSV                                                   | CSV              |\n| STAGE_FILE_FORMAT  | RECORD_DELIMITER               | String        | \\n                                                    | \\n               |\n| STAGE_FILE_FORMAT  | FIELD_DELIMITER                | String        | ,                                                     | ,                |\n| STAGE_FILE_FORMAT  | FILE_EXTENSION                 | String        |                                                       |                  |\n| STAGE_FILE_FORMAT  | SKIP_HEADER                    | Integer       | 0                                                     | 0                |\n| STAGE_FILE_FORMAT  | DATE_FORMAT                    | String        | AUTO                                                  | AUTO             |\n| STAGE_FILE_FORMAT  | TIME_FORMAT                    | String        | AUTO                                                  | AUTO             |\n| STAGE_FILE_FORMAT  | TIMESTAMP_FORMAT               | String        | AUTO                                                  | AUTO             |\n| STAGE_FILE_FORMAT  | BINARY_FORMAT                  | String        | HEX                                                   | HEX              |\n| STAGE_FILE_FORMAT  | ESCAPE                         | String        | NONE                                                  | NONE             |\n| STAGE_FILE_FORMAT  | ESCAPE_UNENCLOSED_FIELD        | String        | \\\\                                                    | \\\\               |\n| STAGE_FILE_FORMAT  | TRIM_SPACE                     | Boolean       | false                                                 | false            |\n| STAGE_FILE_FORMAT  | FIELD_OPTIONALLY_ENCLOSED_BY   | String        | NONE                                                  | NONE             |\n| STAGE_FILE_FORMAT  | NULL_IF                        | List          | [\\\\N]                                                 | [\\\\N]            |\n| STAGE_FILE_FORMAT  | COMPRESSION                    | String        | AUTO                                                  | AUTO             |\n| STAGE_FILE_FORMAT  | ERROR_ON_COLUMN_COUNT_MISMATCH | Boolean       | true                                                  | true             |\n| STAGE_FILE_FORMAT  | VALIDATE_UTF8                  | Boolean       | true                                                  | true             |\n| STAGE_FILE_FORMAT  | SKIP_BLANK_LINES               | Boolean       | false                                                 | false            |\n| STAGE_FILE_FORMAT  | REPLACE_INVALID_CHARACTERS     | Boolean       | false                                                 | false            |\n| STAGE_FILE_FORMAT  | EMPTY_FIELD_AS_NULL            | Boolean       | true                                                  | true             |\n| STAGE_FILE_FORMAT  | SKIP_BYTE_ORDER_MARK           | Boolean       | true                                                  | true             |\n| STAGE_FILE_FORMAT  | ENCODING                       | String        | UTF8                                                  | UTF8             |\n| STAGE_COPY_OPTIONS | ON_ERROR                       | String        | ABORT_STATEMENT                                       | ABORT_STATEMENT  |\n| STAGE_COPY_OPTIONS | SIZE_LIMIT                     | Long          |                                                       |                  |\n| STAGE_COPY_OPTIONS | PURGE                          | Boolean       | false                                                 | false            |\n| STAGE_COPY_OPTIONS | RETURN_FAILED_ONLY             | Boolean       | false                                                 | false            |\n| STAGE_COPY_OPTIONS | ENFORCE_LENGTH                 | Boolean       | true                                                  | true             |\n| STAGE_COPY_OPTIONS | TRUNCATECOLUMNS                | Boolean       | false                                                 | false            |\n| STAGE_COPY_OPTIONS | FORCE                          | Boolean       | false                                                 | false            |\n| STAGE_LOCATION     | URL                            | String        | [\"s3://EXAMPLE-S3-PATH/my-csvfiles/\"] |                  |\n| STAGE_CREDENTIALS  | AWS_KEY_ID                     | String        |                                                       |                  |\n| DIRECTORY          | LAST_REFRESHED_ON              | Timestamp     | 2023-05-03 12:50:28.000 -0700                         |                  |\n| DIRECTORY          | ENABLE                         | Boolean       | true                                                  | false            |\n| DIRECTORY          | AUTO_REFRESH                   | Boolean       | false                                                 | false            |\n+--------------------+--------------------------------+---------------+-------------------------------------------------------+------------------+"
},
{
    "function_name": "DESCRIBE SPECIFICATION",
    "summary": "Describes the details about an app specification.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-specification",
    "title": "DESCRIBE SPECIFICATION",
    "description": "",
    "syntax": "{ DESCRIBE | DESC }  SPECIFICATION <name> [ IN APPLICATION <app_name> ];",
    "example": ""
},
{
    "function_name": "DESCRIBE SNAPSHOT",
    "summary": "Describes the properties of a snapshot.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-snapshot",
    "title": "DESCRIBE SNAPSHOT",
    "description": "",
    "syntax": "{ DESC | DESCRIBE } SNAPSHOT <name>",
    "example": "DESC SNAPSHOT my_snapshot;\n\n+-------------+---------+---------------+-------------+----------------------------------------------------+-------------+----------+------+--------------+-----------+-----------------+-------------------------------+-------------------------------+---------------+\n| name        | state   | database_name | schema_name | service_name                                       | volume_name | instance | size | comment      | owner     | owner_role_type | created_on                    | updated_on                    | encryption    |\n|-------------+---------+---------------+-------------+----------------------------------------------------+-------------+----------+------+--------------+-----------+-----------------+-------------------------------+-------------------------------+---------------|\n| MY_SNAPSHOT | CREATED | TUTORIAL_DB   | DATA_SCHEMA | TUTORIAL_DB.DATA_SCHEMA.MY_SERVICE_WITH_EBS_VOLUME | block-vol1  | 0        |   10 | new snapshot | TEST_ROLE | ROLE            | 2024-05-09 21:36:58.502 -0700 | 2024-05-09 21:38:03.424 -0700 | SNOWFLAKE_SSE |\n+-------------+---------+---------------+-------------+----------------------------------------------------+-------------+----------+------+--------------+-----------+-----------------+-------------------------------+-------------------------------+---------------+"
},
{
    "function_name": "DESCRIBE SHARE",
    "summary": "Describes the data objects that are included in a share.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-share",
    "title": "DESCRIBE SHARE",
    "description": "",
    "syntax": "DESC[RIBE] SHARE <name>",
    "example": "DESC SHARE sales_s;\n\n+----------+--------------------------------------+-------------------------------+\n| kind     | name                                 | shared_on                     |\n|----------+--------------------------------------+-------------------------------|\n| DATABASE | SALES_DB                             | 2017-06-15 17:03:16.642 -0700 |\n| SCHEMA   | SALES_DB.AGGREGATES_EULA             | 2017-06-15 17:03:16.790 -0700 |\n| TABLE    | SALES_DB.AGGREGATES_EULA.AGGREGATE_1 | 2017-06-15 17:03:16.963 -0700 |\n+----------+--------------------------------------+-------------------------------+\n\nDESC SHARE ab67890.sales_s;\n\n+----------+----------------------------------+---------------------------------+\n| kind     | name                             | shared_on                       |\n|----------+----------------------------------+---------------------------------|\n| DATABASE | <DB>                             | Thu, 15 Jun 2017 17:03:16 -0700 |\n| SCHEMA   | <DB>.AGGREGATES_EULA             | Thu, 15 Jun 2017 17:03:16 -0700 |\n| TABLE    | <DB>.AGGREGATES_EULA.AGGREGATE_1 | Thu, 15 Jun 2017 17:03:16 -0700 |\n+----------+----------------------------------+---------------------------------+"
},
{
    "function_name": "DESCRIBE SESSION POLICY",
    "summary": "Describes the details about a session policy.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-session-policy",
    "title": "DESCRIBE SESSION POLICY",
    "description": "",
    "syntax": "{ DESCRIBE | DESC } SESSION POLICY <name>",
    "example": ""
},
{
    "function_name": "DESCRIBE SERVICE",
    "summary": "Describes the properties of a Snowpark Container Services service (including job services).",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-service",
    "title": "DESCRIBE SERVICE",
    "description": "",
    "syntax": "DESC[RIBE] SERVICE <name>",
    "example": "DESCRIBE SERVICE echo_service;\n\nn| name         | status  | database_name | schema_name | owner     | compute_pool          | spec                                                                                                                                                         | dns_name                            | current_instances | target_instances | min_ready_instances | min_instances | max_instances | auto_resume | external_access_integrations | created_on                    | updated_on                    | resumed_on | suspended_on | auto_suspend_secs | comment | owner_role_type | query_warehouse | is_job | is_async_job | spec_digest                                                      | is_upgrading | managing_object_domain | managing_object_name |\n||\n| ECHO_SERVICE | RUNNING | TUTORIAL_DB   | DATA_SCHEMA | TEST_ROLE | TUTORIAL_COMPUTE_POOL | ---                                                                                                                                                          | echo-service.k3m6.svc.spcs.internal |                 1 |                1 |                   1 |             1 |             1 | true        | NULL                         | 2024-11-29 12:12:47.310 -0800 | 2024-11-29 12:12:48.843 -0800 | NULL       | NULL         |                 0 | NULL    | ROLE            | NULL            | false  | false        | edaf548eb0c2744a87426529b53aac75756d0ea1c0ba5edb3cbb4295a381f2b4 | false        | NULL                   | NULL                 |\n|              |         |               |             |           |                       | spec:                                                                                                                                                        |                                     |                   |                  |                     |               |               |             |                              |                               |                               |            |              |                   |         |                 |                 |        |              |                                                                  |              |                        |                      |\n|              |         |               |             |           |                       |   containers:                                                                                                                                                |                                     |                   |                  |                     |               |               |             |                              |                               |                               |            |              |                   |         |                 |                 |        |              |                                                                  |              |                        |                      |\n|              |         |               |             |           |                       |   - name: \"echo\"                                                                                                                                             |                                     |                   |                  |                     |               |               |             |                              |                               |                               |            |              |                   |         |                 |                 |        |              |                                                                  |              |                        |                      |\n|              |         |               |             |           |                       |     image: \"sfengineering-prod1-snowservices-test2.registry.snowflakecomputing.com/tutorial_db/data_schema/tutorial_repository/my_echo_service_image:latest\" |                                     |                   |                  |                     |               |               |             |                              |                               |                               |            |              |                   |         |                 |                 |        |              |                                                                  |              |                        |                      |\n|              |         |               |             |           |                       |     sha256: \"@sha256:d04a2d7b7d9bd607df994926e3cc672edcb541474e4888a01703e8bb0dd3f173\"                                                                       |                                     |                   |                  |                     |               |               |             |                              |                               |                               |            |              |                   |         |                 |                 |        |              |                                                                  |              |                        |                      |\n|              |         |               |             |           |                       |     env:                                                                                                                                                     |                                     |                   |                  |                     |               |               |             |                              |                               |                               |            |              |                   |         |                 |                 |        |              |                                                                  |              |                        |                      |\n|              |         |               |             |           |                       |       SERVER_PORT: \"8000\"                                                                                                                                    |                                     |                   |                  |                     |               |               |             |                              |                               |                               |            |              |                   |         |                 |                 |        |              |                                                                  |              |                        |                      |\n|              |         |               |             |           |                       |       CHARACTER_NAME: \"Bob\"                                                                                                                                  |                                     |                   |                  |                     |               |               |             |                              |                               |                               |            |              |                   |         |                 |                 |        |              |                                                                  |              |                        |                      |\n|              |         |               |             |           |                       |     readinessProbe:                                                                                                                                          |                                     |                   |                  |                     |               |               |             |                              |                               |                               |            |              |                   |         |                 |                 |        |              |                                                                  |              |                        |                      |\n|              |         |               |             |           |                       |       port: 8000                                                                                                                                             |                                     |                   |                  |                     |               |               |             |                              |                               |                               |            |              |                   |         |                 |                 |        |              |                                                                  |              |                        |                      |\n|              |         |               |             |           |                       |       path: \"/healthcheck\"                                                                                                                                   |                                     |                   |                  |                     |               |               |             |                              |                               |                               |            |              |                   |         |                 |                 |        |              |                                                                  |              |                        |                      |\n|              |         |               |             |           |                       |     resources:                                                                                                                                               |                                     |                   |                  |                     |               |               |             |                              |                               |                               |            |              |                   |         |                 |                 |        |              |                                                                  |              |                        |                      |\n|              |         |               |             |           |                       |       limits:                                                                                                                                                |                                     |                   |                  |                     |               |               |             |                              |                               |                               |            |              |                   |         |                 |                 |        |              |                                                                  |              |                        |                      |\n|              |         |               |             |           |                       |         memory: \"6Gi\"                                                                                                                                        |                                     |                   |                  |                     |               |               |             |                              |                               |                               |            |              |                   |         |                 |                 |        |              |                                                                  |              |                        |                      |\n|              |         |               |             |           |                       |         cpu: \"1\"                                                                                                                                             |                                     |                   |                  |                     |               |               |             |                              |                               |                               |            |              |                   |         |                 |                 |        |              |                                                                  |              |                        |                      |\n|              |         |               |             |           |                       |       requests:                                                                                                                                              |                                     |                   |                  |                     |               |               |             |                              |                               |                               |            |              |                   |         |                 |                 |        |              |                                                                  |              |                        |                      |\n|              |         |               |             |           |                       |         memory: \"0.5Gi\"                                                                                                                                      |                                     |                   |                  |                     |               |               |             |                              |                               |                               |            |              |                   |         |                 |                 |        |              |                                                                  |              |                        |                      |\n|              |         |               |             |           |                       |         cpu: \"0.5\"                                                                                                                                           |                                     |                   |                  |                     |               |               |             |                              |                               |                               |            |              |                   |         |                 |                 |        |              |                                                                  |              |                        |                      |\n|              |         |               |             |           |                       |   endpoints:                                                                                                                                                 |                                     |                   |                  |                     |               |               |             |                              |                               |                               |            |              |                   |         |                 |                 |        |              |                                                                  |              |                        |                      |\n|              |         |               |             |           |                       |   - name: \"echoendpoint\"                                                                                                                                     |                                     |                   |                  |                     |               |               |             |                              |                               |                               |            |              |                   |         |                 |                 |        |              |                                                                  |              |                        |                      |\n|              |         |               |             |           |                       |     port: 8000                                                                                                                                               |                                     |                   |                  |                     |               |               |             |                              |                               |                               |            |              |                   |         |                 |                 |        |              |                                                                  |              |                        |                      |\n|              |         |               |             |           |                       |     public: true                                                                                                                                             |                                     |                   |                  |                     |               |               |             |                              |                               |                               |            |              |                   |         |                 |                 |        |              |                                                                  |              |                        |                      |\n|              |         |               |             |           |                       |                                                                                                                                                              |                                     |                   |                  |                     |               |               |             |                              |                               |                               |            |              |                   |         |                 |                 |        |              |                                                                  |              |                        |                      |\n
},
{
    "function_name": "DESCRIBE SEQUENCE",
    "summary": "Describes a sequence, including the sequence’s interval.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-sequence",
    "title": "DESCRIBE SEQUENCE",
    "description": "Describes a sequence, including the sequence’s interval.",
    "syntax": "DESC[RIBE] SEQUENCE <name>",
    "example": "DESC SEQUENCE my_sequence;"
},
{
    "function_name": "DESCRIBE SEMANTIC VIEW",
    "summary": "Describes the properties of the logical tables, dimensions, facts, and metrics that make up a semantic view.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-semantic-view",
    "title": "DESCRIBE SEMANTIC VIEW",
    "description": "Describes the properties of the logical tables, dimensions, facts, and metrics that make up a",
    "syntax": "{ DESCRIBE | DESC } SEMANTIC VIEW <name>",
    "example": "DESC SEMANTIC VIEW tpch_rev_analysis;\n\n+--------------+------------------------------+---------------+--------------------------+----------------------------------------+\n| object_kind  | object_name                  | parent_entity | property                 | property_value                         |\n|--------------+------------------------------+---------------+--------------------------+----------------------------------------|\n| NULL         | NULL                         | NULL          | COMMENT                  | Comment about the semantic view        |\n| TABLE        | CUSTOMERS                    | NULL          | BASE_TABLE_DATABASE_NAME | SNOWFLAKE_SAMPLE_DATA                  |\n| TABLE        | CUSTOMERS                    | NULL          | BASE_TABLE_SCHEMA_NAME   | TPCH_SF1                               |\n| TABLE        | CUSTOMERS                    | NULL          | BASE_TABLE_NAME          | CUSTOMER                               |\n| TABLE        | CUSTOMERS                    | NULL          | PRIMARY_KEY              | [\"C_CUSTKEY\"]                          |\n| TABLE        | CUSTOMERS                    | NULL          | COMMENT                  | Main table for customer data           |\n| DIMENSION    | CUSTOMER_NAME                | CUSTOMERS     | TABLE                    | CUSTOMERS                              |\n| DIMENSION    | CUSTOMER_NAME                | CUSTOMERS     | EXPRESSION               | customers.c_name                       |\n| DIMENSION    | CUSTOMER_NAME                | CUSTOMERS     | DATA_TYPE                | VARCHAR(25)                            |\n| DIMENSION    | CUSTOMER_NAME                | CUSTOMERS     | SYNONYMS                 | [\"customer name\"]                      |\n| DIMENSION    | CUSTOMER_NAME                | CUSTOMERS     | COMMENT                  | Name of the customer                   |\n| TABLE        | LINE_ITEMS                   | NULL          | BASE_TABLE_DATABASE_NAME | SNOWFLAKE_SAMPLE_DATA                  |\n| TABLE        | LINE_ITEMS                   | NULL          | BASE_TABLE_SCHEMA_NAME   | TPCH_SF1                               |\n| TABLE        | LINE_ITEMS                   | NULL          | BASE_TABLE_NAME          | LINEITEM                               |\n| TABLE        | LINE_ITEMS                   | NULL          | PRIMARY_KEY              | [\"L_ORDERKEY\",\"L_LINENUMBER\"]          |\n| TABLE        | LINE_ITEMS                   | NULL          | COMMENT                  | Line items in orders                   |\n| RELATIONSHIP | LINE_ITEM_TO_ORDERS          | LINE_ITEMS    | TABLE                    | LINE_ITEMS                             |\n| RELATIONSHIP | LINE_ITEM_TO_ORDERS          | LINE_ITEMS    | REF_TABLE                | ORDERS                                 |\n| RELATIONSHIP | LINE_ITEM_TO_ORDERS          | LINE_ITEMS    | FOREIGN_KEY              | [\"L_ORDERKEY\"]                         |\n| RELATIONSHIP | LINE_ITEM_TO_ORDERS          | LINE_ITEMS    | REF_KEY                  | [\"O_ORDERKEY\"]                         |\n| FACT         | DISCOUNTED_PRICE             | LINE_ITEMS    | TABLE                    | LINE_ITEMS                             |\n| FACT         | DISCOUNTED_PRICE             | LINE_ITEMS    | EXPRESSION               | l_extendedprice * (1 - l_discount)     |\n| FACT         | DISCOUNTED_PRICE             | LINE_ITEMS    | DATA_TYPE                | NUMBER(25,4)                           |\n| FACT         | DISCOUNTED_PRICE             | LINE_ITEMS    | COMMENT                  | Extended price after discount          |\n| FACT         | LINE_ITEM_ID                 | LINE_ITEMS    | TABLE                    | LINE_ITEMS                             |\n| FACT         | LINE_ITEM_ID                 | LINE_ITEMS    | EXPRESSION               | CONCAT(l_orderkey, '-', l_linenumber)  |\n| FACT         | LINE_ITEM_ID                 | LINE_ITEMS    | DATA_TYPE                | VARCHAR(134217728)                     |\n| TABLE        | ORDERS                       | NULL          | BASE_TABLE_DATABASE_NAME | SNOWFLAKE_SAMPLE_DATA                  |\n| TABLE        | ORDERS                       | NULL          | BASE_TABLE_SCHEMA_NAME   | TPCH_SF1                               |\n| TABLE        | ORDERS                       | NULL          | BASE_TABLE_NAME          | ORDERS                                 |\n| TABLE        | ORDERS                       | NULL          | SYNONYMS                 | [\"sales orders\"]                       |\n| TABLE        | ORDERS                       | NULL          | PRIMARY_KEY              | [\"O_ORDERKEY\"]                         |\n| TABLE        | ORDERS                       | NULL          | COMMENT                  | All orders table for the sales domain  |\n| RELATIONSHIP | ORDERS_TO_CUSTOMERS          | ORDERS        | TABLE                    | ORDERS                                 |\n| RELATIONSHIP | ORDERS_TO_CUSTOMERS          | ORDERS        | REF_TABLE                | CUSTOMERS                              |\n| RELATIONSHIP | ORDERS_TO_CUSTOMERS          | ORDERS        | FOREIGN_KEY              | [\"O_CUSTKEY\"]                          |\n| RELATIONSHIP | ORDERS_TO_CUSTOMERS          | ORDERS        | REF_KEY                  | [\"C_CUSTKEY\"]                          |\n| METRIC       | AVERAGE_LINE_ITEMS_PER_ORDER | ORDERS        | TABLE                    | ORDERS                                 |\n| METRIC       | AVERAGE_LINE_ITEMS_PER_ORDER | ORDERS        | EXPRESSION               | AVG(orders.count_line_items)           |\n| METRIC       | AVERAGE_LINE_ITEMS_PER_ORDER | ORDERS        | DATA_TYPE                | NUMBER(36,6)                           |\n| METRIC       | AVERAGE_LINE_ITEMS_PER_ORDER | ORDERS        | COMMENT                  | Average number of line items per order |\n| FACT         | COUNT_LINE_ITEMS             | ORDERS        | TABLE                    | ORDERS                                 |\n| FACT         | COUNT_LINE_ITEMS             | ORDERS        | EXPRESSION               | COUNT(line_items.line_item_id)         |\n| FACT         | COUNT_LINE_ITEMS             | ORDERS        | DATA_TYPE                | NUMBER(18,0)                           |\n| METRIC       | ORDER_AVERAGE_VALUE          | ORDERS        | TABLE                    | ORDERS                                 |\n| METRIC       | ORDER_AVERAGE_VALUE          | ORDERS        | EXPRESSION               | AVG(orders.o_totalprice)               |\n| METRIC       | ORDER_AVERAGE_VALUE          | ORDERS        | DATA_TYPE                | NUMBER(30,8)                           |\n| METRIC       | ORDER_AVERAGE_VALUE          | ORDERS        | COMMENT                  | Average order value across all orders  |\n| DIMENSION    | ORDER_DATE                   | ORDERS        | TABLE                    | ORDERS                                 |\n| DIMENSION    | ORDER_DATE                   | ORDERS        | EXPRESSION               | o_orderdate                            |\n| DIMENSION    | ORDER_DATE                   | ORDERS        | DATA_TYPE                | DATE                                   |\n| DIMENSION    | ORDER_DATE                   | ORDERS        | COMMENT                  | Date when the order was placed         |\n| DIMENSION    | ORDER_YEAR                   | ORDERS        | TABLE                    | ORDERS                                 |\n| DIMENSION    | ORDER_YEAR                   | ORDERS        | EXPRESSION               | YEAR(o_orderdate)                      |\n| DIMENSION    | ORDER_YEAR                   | ORDERS        | DATA_TYPE                | NUMBER(4,0)                            |\n| DIMENSION    | ORDER_YEAR                   | ORDERS        | COMMENT                  | Year when the order was placed         |\n+--------------+------------------------------+---------------+--------------------------+----------------------------------------+"
},
{
    "function_name": "DESCRIBE SECRET",
    "summary": "Describes the properties of a secret.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-secret",
    "title": "DESCRIBE SECRET",
    "description": "Describes the properties of a secret.",
    "syntax": "{ DESC | DESCRIBE } SECRET <name>",
    "example": "DESC SECRET service_now_creds_pw;"
},
{
    "function_name": "DESCRIBE SEARCH OPTIMIZATION",
    "summary": "Describes the search optimization configuration for a specified table and its columns.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-search-optimization",
    "title": "DESCRIBE SEARCH OPTIMIZATION",
    "description": "Describes the",
    "syntax": "DESC[RIBE] SEARCH OPTIMIZATION ON <table_name>;",
    "example": ""
},
{
    "function_name": "DESCRIBE SCHEMA",
    "summary": "Describes the schema.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-schema",
    "title": "DESCRIBE SCHEMA",
    "description": "Describes the schema. For example, lists the tables and views in the schema.",
    "syntax": "DESC[RIBE] SCHEMA <schema_name>",
    "example": "CREATE SCHEMA sample_schema_2;\nUSE SCHEMA sample_schema_2;\n\nCREATE TABLE sample_table_1 (i INTEGER);\n\nCREATE VIEW sample_view_1 AS\n    SELECT i FROM sample_table_1;\n\nCREATE MATERIALIZED VIEW sample_mview_1 AS\n    SELECT i FROM sample_table_1 WHERE i < 100;\n\nDESCRIBE SCHEMA sample_schema_2;\n\n+-------------------------------+----------------+-------------------+\n| created_on                    | name           | kind              |\n|-------------------------------+----------------+-------------------|\n| 2022-06-23 01:00:00.000 -0700 | SAMPLE_TABLE_1 | TABLE             |\n| 2022-06-23 02:00:00.000 -0700 | SAMPLE_VIEW_1  | VIEW              |\n| 2022-06-23 03:00:00.000 -0700 | SAMPLE_MVIEW_1 | MATERIALIZED_VIEW |\n+-------------------------------+----------------+-------------------+"
},
{
    "function_name": "DESCRIBE ROW ACCESS POLICY",
    "summary": "Describes a row access policy, including the creation date, name, data type, and SQL expression.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-row-access-policy",
    "title": "DESCRIBE ROW ACCESS POLICY",
    "description": "",
    "syntax": "DESC[RIBE] ROW ACCESS POLICY <name>;",
    "example": ""
},
{
    "function_name": "DESCRIBE RESULT",
    "summary": "Describes the columns in the result of a query.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-result",
    "title": "DESCRIBE RESULT",
    "description": "Describes the columns in the result of a query.",
    "syntax": "DESC[RIBE] RESULT { '<query_id>' | LAST_QUERY_ID() }",
    "example": "DESC RESULT 'f2f07bdb-6a08-4689-9ad8-a1ba968a44b6';\n\nSELECT * FROM boston_sales;\n\n+---------------+-------+-------+--------+-------------+---------------------+-------+\n| CITY          | ZIP   | STATE | SQ__FT | TYPE        | SALE_DATE           | PRICE |\n|---------------+-------+-------+--------+-------------+---------------------+-------|\n| MA-Lexington  | 40502 | MA    |    836 | Residential | 0016-01-25T00:00:00 | 59222 |\n| MA-Belmont    | 02478 | MA    |    852 | Residential | 0016-02-21T00:00:00 | 69307 |\n| MA-Winchester | 01890 | MA    |   1122 | Condo       | 0016-01-31T00:00:00 | 89921 |\n+---------------+-------+-------+--------+-------------+---------------------+-------+\n\nDESC RESULT LAST_QUERY_ID();\n\n+-----------+-------------------+--------+-------+---------+-------------+------------+-------+------------+---------+\n| name      | type              | kind   | null? | default | primary key | unique key | check | expression | comment |\n|-----------+-------------------+--------+-------+---------+-------------+------------+-------+------------+---------|\n| CITY      | VARCHAR(16777216) | COLUMN | Y     | NULL    | N           | N          | NULL  | NULL       | NULL    |\n| ZIP       | VARCHAR(16777216) | COLUMN | Y     | NULL    | N           | N          | NULL  | NULL       | NULL    |\n| STATE     | VARCHAR(16777216) | COLUMN | Y     | NULL    | N           | N          | NULL  | NULL       | NULL    |\n| SQ__FT    | NUMBER(38,0)      | COLUMN | Y     | NULL    | N           | N          | NULL  | NULL       | NULL    |\n| TYPE      | VARCHAR(16777216) | COLUMN | Y     | NULL    | N           | N          | NULL  | NULL       | NULL    |\n| SALE_DATE | DATE              | COLUMN | Y     | NULL    | N           | N          | NULL  | NULL       | NULL    |\n| PRICE     | NUMBER(38,0)      | COLUMN | Y     | NULL    | N           | N          | NULL  | NULL       | NULL    |\n+-----------+-------------------+--------+-------+---------+-------------+------------+-------+------------+---------+"
},
{
    "function_name": "DESCRIBE PROJECTION POLICY",
    "summary": "Describes the details about a projection policy, including the creation date, name, and the SQL expression.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-projection-policy",
    "title": "DESCRIBE PROJECTION POLICY",
    "description": "",
    "syntax": "DESC[RIBE] PROJECTION POLICY <name>",
    "example": ""
},
{
    "function_name": "DESCRIBE PROCEDURE",
    "summary": "Describes the specified stored procedure, including the stored procedure’s signature (i.e. arguments), return value, language, and body (i.e. definition).",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-procedure",
    "title": "DESCRIBE PROCEDURE",
    "description": "Describes the specified stored procedure, including the stored procedure’s signature (i.e. arguments), return value, language, and\nbody (i.e. definition).",
    "syntax": "DESC[RIBE] PROCEDURE <procedure_name> ( [ <arg_data_type> [ , <arg_data_type_2> ... ] ] )",
    "example": "DESC PROCEDURE my_pi();\n+---------------+----------------------+\n| property      | value                |\n|---------------+----------------------|\n| signature     | ()                   |\n| returns       | FLOAT                |\n| language      | JAVASCRIPT           |\n| null handling | CALLED ON NULL INPUT |\n| volatility    | VOLATILE             |\n| execute as    | CALLER               |\n| body          |                      |\n|               |   return 3.1415926;  |\n|               |                      |\n+---------------+----------------------+\n\nDESC PROCEDURE area_of_circle(FLOAT);\n+---------------+------------------------------------------------------------------+\n| property      | value                                                            |\n|---------------+------------------------------------------------------------------|\n| signature     | (RADIUS FLOAT)                                                   |\n| returns       | FLOAT                                                            |\n| language      | JAVASCRIPT                                                       |\n| null handling | CALLED ON NULL INPUT                                             |\n| volatility    | VOLATILE                                                         |\n| execute as    | OWNER                                                            |\n| body          |                                                                  |\n|               |   var stmt = snowflake.createStatement(                          |\n|               |       {sqlText: \"SELECT pi() * POW($RADIUS, 2)\", binds:[RADIUS]} |\n|               |       );                                                         |\n|               |   var rs = stmt.execute();                                       |\n|               |   rs.next()                                                      |\n|               |   var output = rs.getColumnValue(1);                             |\n|               |   return output;                                                 |\n|               |                                                                  |\n+---------------+------------------------------------------------------------------+"
},
{
    "function_name": "DESCRIBE PRIVACY POLICY",
    "summary": "Describes the properties of a privacy policy.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-privacy-policy",
    "title": "DESCRIBE PRIVACY POLICY",
    "description": "",
    "syntax": "{ DESC | DESCRIBE } PRIVACY POLICY <name>",
    "example": "DESCRIBE PRIVACY POLICY myprivpolicy;\n\n+--------------------+---------------+--------------------+-----------------------------------------------+\n|   name             |   signature   |   return_type      |   body                                        |\n+--------------------+---------------+--------------------+-----------------------------------------------+\n|   MYPRIVPOLICY     |   ()          |   PRIVACY_BUDGET   |   PRIVACY_BUDGET(BUDGET_NAME=>'new_budget')   |\n+--------------------+---------------+--------------------+-----------------------------------------------+"
},
{
    "function_name": "DESCRIBE PIPE",
    "summary": "Describes the properties specified for a pipe, as well as the default values of the properties.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-pipe",
    "title": "DESCRIBE PIPE",
    "description": "Describes the properties specified for a pipe, as well as the default values of the properties.",
    "syntax": "DESC[RIBE] PIPE <name>",
    "example": "desc pipe mypipe;\n\n+-------------------------------+--------+---------------+-------------+---------------------------------+----------+---------+\n| created_on                    | name   | database_name | schema_name | definition                      | owner    | comment |\n|-------------------------------+--------+---------------+-------------+---------------------------------+----------+---------|\n| 2017-08-15 06:11:05.703 -0700 | MYPIPE | MYDATABASE    | PUBLIC      | copy into mytable from @mystage | SYSADMIN |         |\n+-------------------------------+--------+---------------+-------------+---------------------------------+----------+---------+"
},
{
    "function_name": "DESCRIBE PASSWORD POLICY",
    "summary": "Describes the details about a password policy.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-password-policy",
    "title": "DESCRIBE PASSWORD POLICY",
    "description": "Describes the details about a password policy.",
    "syntax": "DESC[RIBE] PASSWORD POLICY <name>",
    "example": ""
},
{
    "function_name": "DESCRIBE PACKAGES POLICY",
    "summary": "Describes the details about a packages policy.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-packages-policy",
    "title": "DESCRIBE PACKAGES POLICY",
    "description": "Describes the details about a packages policy.",
    "syntax": "DESC[RIBE] PACKAGES POLICY <name>",
    "example": ""
},
{
    "function_name": "DESCRIBE ORGANIZATION PROFILE",
    "summary": "Describes the properties of an organization profile.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-organization-profile",
    "title": "DESCRIBE ORGANIZATION PROFILE",
    "description": "",
    "syntax": "{ DESC | DESCRIBE } ORGANIZATION PROFILE <name>",
    "example": "DESCRIBE ORGANIZATION PROFILE myorganizationprofile;\n\nn|created_on               |name         |title                     |system_generated     |state                |description                       |owner_contact        |approver_contact     |logo            |allowed_publishers              |manifest_yaml                                                                           |live_version_uri                                          |published_version_uri                                     |published_version_name   |published_version_alias  |\nn|2025-01-01 01:01:01.000  |ORGPROFILE   |My Organization Profile   |FALSE                |ACTIVE               |Organization profile description  |test@test.com        |test@test.com        |urn:icon:shield |{“all_internal_accounts”: true} | title: \"My Organization Profile\" description: \"Organization profile description\". . .  |snow://organization_profile/ORGPROFILE/versions/version$1 |snow://organization_profile/ORGPROFILE/versions/version$1 |VERSION$1                |V1                       |\n
},
{
    "function_name": "DESCRIBE NOTIFICATION INTEGRATION",
    "summary": "Describes the properties of a notification integration.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-notification-integration",
    "title": "DESCRIBE NOTIFICATION INTEGRATION",
    "description": "Describes the properties of a notification integration.",
    "syntax": "{ DESC | DESCRIBE } NOTIFICATION INTEGRATION <name>",
    "example": "DESC INTEGRATION my_notify_int;"
},
{
    "function_name": "DESCRIBE NOTEBOOK",
    "summary": "Describes the properties of a notebook.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-notebook",
    "title": "DESCRIBE NOTEBOOK",
    "description": "",
    "syntax": "{ DESC | DESCRIBE } NOTEBOOK <name>",
    "example": "DESCRIBE NOTEBOOK mybook;"
},
{
    "function_name": "DESCRIBE NETWORK RULE",
    "summary": "Describes the properties specified for a network rule.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-network-rule",
    "title": "DESCRIBE NETWORK RULE",
    "description": "Describes the properties specified for a network rule.",
    "syntax": "DESC[RIBE] NETWORK RULE <name>",
    "example": ""
},
{
    "function_name": "DESCRIBE NETWORK POLICY",
    "summary": "Describes the properties specified for a network policy.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-network-policy",
    "title": "DESCRIBE NETWORK POLICY",
    "description": "Describes the properties specified for a network policy.",
    "syntax": "DESC[RIBE] NETWORK POLICY <name>",
    "example": ""
},
{
    "function_name": "DESCRIBE MODEL MONITOR",
    "summary": "Displays information about a specific model monitor.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-model-monitor",
    "title": "DESCRIBE MODEL MONITOR",
    "description": "Displays information about a specific",
    "syntax": "{ DESCRIBE | DESC } MODEL MONITOR <monitor_name>",
    "example": ""
},
{
    "function_name": "DESCRIBE MATERIALIZED VIEW",
    "summary": "Describes the columns in a materialized view.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-materialized-view",
    "title": "DESCRIBE MATERIALIZED VIEW",
    "description": "",
    "syntax": "DESC[RIBE] MATERIALIZED VIEW <name>",
    "example": "CREATE MATERIALIZED VIEW emp_view\n    AS\n    SELECT id \"Employee Number\", lname \"Last Name\", location \"Home Base\" FROM emp;\n\nDESC MATERIALIZED VIEW emp_view;\n\n+-----------------+--------------+--------+-------+---------+-------------+------------+-------+------------+---------+\n| name            | type         | kind   | null? | default | primary key | unique key | check | expression | comment |\n|-----------------+--------------+--------+-------+---------+-------------+------------+-------+------------+---------|\n| Employee Number | NUMBER(38,0) | COLUMN | Y     | NULL    | N           | N          | NULL  | NULL       | NULL    |\n| Last Name       | VARCHAR(50)  | COLUMN | Y     | NULL    | N           | N          | NULL  | NULL       | NULL    |\n| Home Base       | VARCHAR(100) | COLUMN | Y     | NULL    | N           | N          | NULL  | NULL       | NULL    |\n+-----------------+--------------+--------+-------+---------+-------------+------------+-------+------------+---------+"
},
{
    "function_name": "DESCRIBE MASKING POLICY",
    "summary": "Describes the details about a masking policy, including the creation date, name, data type, and SQL expression.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-masking-policy",
    "title": "DESCRIBE MASKING POLICY",
    "description": "",
    "syntax": "DESC[RIBE] MASKING POLICY <name>",
    "example": ""
},
{
    "function_name": "DESCRIBE LISTING",
    "summary": "Describes the columns in a listing.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-listing",
    "title": "DESCRIBE LISTING",
    "description": "Describes the columns in a",
    "syntax": "{ DESC | DESCRIBE } LISTING <name>  [ REVISION = { DRAFT | PUBLISHED } ]",
    "example": "DESC LISTING MYLISTING;\n\nn|   global_name                |   name              |   owner          |   owner_role_type   |   created_on                         |   updated_on                         |   published_on                       |   title                                                        |   subtitle                                         |   description                                                                                                              |   target_accounts   |   is_monetized   |   is_application   |   is_targeted   |   state       |   revisions         |   comment   |   refresh_schedule   |   refresh_type    |   business_needs                                                                                                                                         |   usage_examples                                                                                                     |   listing_terms         |   profile                                        |   customized_contact_info   |  application_package |  data_dictionary                                                                                                                   |   regions   |   manifest_yaml                                                                   |   review_state   |   rejection_reason   |   categories   |   resources                                                                                                     |   unpublished_by_admin_reason   | request_approval_type |\n+------------------------------+---------------------+------------------+---------------------+--------------------------------------+--------------------------------------+--------------------------------------+----------------------------------------------------------------+----------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------+---------------------+------------------+--------------------+-----------------+---------------+---------------------+-------------+----------------------+-------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------+-------------------------+--------------------------------------------------+-----------------------------+----------------------+------------------------------------------------------------------------------------------------------------------------------------+-------------+-----------------------------------------------------------------------------------+------------------+----------------------+----------------+-----------------------------------------------------------------------------------------------------------------+---------------------------------+-----------------------+\n|   GZ13Z1VEWNG                |   CDC_COVID_19_DATA |   ACCOUNTADMIN   |   ROLE              |   2023-12-01T13:01:13.367-08:00      |   2023-12-01T13:25:11.331-08:00      |   2023-12-01T13:25:11.331-08:00      |   Understanding COVID-19: Explore the Latest Data from the CDC |   Track cases, deaths, vaccination rates, and more |   Get the most up-to-date information on the COVID-19 pandemic from the Centers for Disease Control and Prevention (CDC).  |                     |   false          |   false            |   false         |   PUBLISHED   |   DRAFT,PUBLISHED   |             |   60 MINUTE          |   FULL_DATABASE   |   [{\"\"type\"\":\"\"CUSTOM\"\",\"\"name\"\":\"\"Public Health Monitoring and Response\"\",\"\"description\"\":\"\"Monitor trends in cases, deaths, and other key metrics.\"\"}] |   [{\"\"title\"\":\"\"Identify potential outbreaks of COVID-19 in [country name] by tracking trends in confirmed cases\"    |   {\"type\":\"STANDARD\"}   |   RAVENCLAW_9A314599_F644_4664_946B_4DE0B2169C28 |                             |                      |  {\"\"database\"\":\"\"COVIDDATADB\"\",\"\"objects\"\":[{\"\"schema\"\":\"\"PUBLIC\"\",\"\"domain\"\":\"\"TABLE\"\",\"\"name\"\":\"\"GLOBAL_COVID_STATISTICS\"\"}]}\"   |   ALL       |   title: \"Understanding COVID-19: Explore the Latest Data from the CDC\"  . . .    |                  |                      |   HEALTH       |   \"{\"\"documentation\"\":\"\"https://snowflake.com/doc\"\",\"\"media\"\":\"\"https://www.youtube.com/watch?v=AR88dZG-hwo\"\"}\" |                                 | NULL                  |\n
},
{
    "function_name": "DESCRIBE JOIN POLICY",
    "summary": "Describes the details about a join policy, including the creation date, name, and the SQL expression.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-join-policy",
    "title": "DESCRIBE JOIN POLICY",
    "description": "",
    "syntax": "{ DESCRIBE | DESC } JOIN POLICY <name>",
    "example": ""
},
{
    "function_name": "DESCRIBE INTEGRATION",
    "summary": "Describes the properties of an integration.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-integration",
    "title": "DESCRIBE INTEGRATION",
    "description": "Describes the properties of an integration.",
    "syntax": "{ DESC | DESCRIBE } [ { API | CATALOG | EXTERNAL ACCESS | NOTIFICATION | SECURITY | STORAGE } ] INTEGRATION <name>",
    "example": "DESC INTEGRATION my_int;"
},
{
    "function_name": "DESCRIBE ICEBERG TABLE",
    "summary": "Describes either the columns in an Apache Iceberg™ table or the current values, as well as the default values, for the properties of an Iceberg table.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-iceberg-table",
    "title": "DESCRIBE ICEBERG TABLE",
    "description": "Describes either the columns in an",
    "syntax": "DESC[RIBE] [ ICEBERG ] TABLE <name> [ TYPE =  { COLUMNS | STAGE } ]",
    "example": ""
},
{
    "function_name": "DESCRIBE GIT REPOSITORY",
    "summary": "Describes an existing Snowflake Git repository clone.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-git-repository",
    "title": "DESCRIBE GIT REPOSITORY",
    "description": "Describes an existing Snowflake",
    "syntax": "{ DESC | DESCRIBE } GIT REPOSITORY <name>",
    "example": "DESCRIBE GIT REPOSITORY snowflake_extensions;\n\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n| CREATED_ON                    | NAME                 | DATABASE_NAME | SCHEMA_NAME | ORIGIN                                                 | API_INTEGRATION     | GIT_CREDENTIALS           | OWNER        | OWNER_ROLE_TYPE | COMMENT |\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n| 2023-06-28 08:46:10.886 -0700 | SNOWFLAKE_EXTENSIONS | MY_DB         | MAIN        | https://github.com/my-account/snowflake-extensions.git | GIT_API_INTEGRATION | MY_DB.MAIN.GIT_SECRET     | ACCOUNTADMIN | ROLE            |         |\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------"
},
{
    "function_name": "DESCRIBE FUNCTION (Snowpark Container Services)",
    "summary": "Describes the specified service function, including the signature (arguments), return value, language, and body (path to the Snowpark Container Services service).",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-function-spcs",
    "title": "DESCRIBE FUNCTION (Snowpark Container Services)",
    "description": "Describes the specified",
    "syntax": "{ DESC | DESCRIBE } FUNCTION [ IF EXISTS ] <name> ( [ <arg_data_type> ] [ , ... ] )",
    "example": "DESC FUNCTION my_echo_udf(VARCHAR);\n\n+--------------------+----------------------+\n| property           | value                |\n|--------------------+----------------------|\n| signature          | (INPUTTEXT VARCHAR)  |\n| returns            | VARCHAR              |\n| language           | NULL                 |\n| null handling      | CALLED ON NULL INPUT |\n| volatility         | VOLATILE             |\n| body               | /echo                |\n| headers            | null                 |\n| context_headers    | null                 |\n| max_batch_rows     | not set              |\n| service            | ECHO_SERVICE         |\n| service_endpoint   | echoendpoint         |\n| max_batch_retries  | 3                    |\n| on_batch_failure   | ABORT                |\n| batch_timeout_secs | not set              |\n+--------------------+----------------------+"
},
{
    "function_name": "DESCRIBE FUNCTION (DMF)",
    "summary": "Describes the specified data metric function (DMF), including the signature (arguments), return value, language, and body (definition).",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-function-dmf",
    "title": "DESCRIBE FUNCTION (DMF)",
    "description": "",
    "syntax": "{ DESC | DESCRIBE } FUNCTION [ IF EXISTS ] <name>(\n  TABLE(  <arg_data_type> [ , ... ] ) [ , TABLE( <arg_data_type> [ , ... ] ) ]\n  )",
    "example": ""
},
{
    "function_name": "DESCRIBE FUNCTION",
    "summary": "Describes the specified user-defined function (UDF) or external function, including the signature (i.e. arguments), return value, language, and body (i.e. definition).",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-function",
    "title": "DESCRIBE FUNCTION",
    "description": "Describes the specified user-defined function (UDF) or external function, including the signature (i.e. arguments),\nreturn value, language, and body (i.e. definition).",
    "syntax": "DESC[RIBE] FUNCTION <name> ( [ <arg_data_type> ] [ , ... ] )",
    "example": "DESC FUNCTION multiply(number, number);\n\n-----------+----------------------------------+\n property  |              value               |\n-----------+----------------------------------+\n signature | (a NUMBER(38,0), b NUMBER(38,0)) |\n returns   | NUMBER(38,0)                     |\n language  | SQL                              |\n body      | a * b                            |\n-----------+----------------------------------+"
},
{
    "function_name": "DESCRIBE FILE FORMAT",
    "summary": "Describes the property type (for example, String or Integer), the defined value of the property, and the default value for each property in a file format object definition.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-file-format",
    "title": "DESCRIBE FILE FORMAT",
    "description": "Describes the property type (for example,",
    "syntax": "DESC[RIBE] FILE FORMAT <name>",
    "example": "DESC FILE FORMAT my_csv_format;\n\n+--------------------------------+---------------+----------------+------------------+\n| property                       | property_type | property_value | property_default |\n+--------------------------------+---------------+----------------+------------------+\n| TYPE                           | String        | csv            | CSV              |\n| RECORD_DELIMITER               | String        | \\n             | \\n               |\n| FIELD_DELIMITER                | String        | ,              | ,                |\n| FILE_EXTENSION                 | String        |                |                  |\n| SKIP_HEADER                    | Integer       | 0              | 0                |\n| PARSE_HEADER                   | Boolean       | FALSE          | FALSE            |\n| DATE_FORMAT                    | String        | AUTO           | AUTO             |\n| TIME_FORMAT                    | String        | AUTO           | AUTO             |\n| TIMESTAMP_FORMAT               | String        | AUTO           | AUTO             |\n| BINARY_FORMAT                  | String        | HEX            | HEX              |\n| ESCAPE                         | String        | NONE           | NONE             |\n| ESCAPE_UNENCLOSED_FIELD        | String        | \\\\             | \\\\               |\n| TRIM_SPACE                     | Boolean       | FALSE          | FALSE            |\n| FIELD_OPTIONALLY_ENCLOSED_BY   | String        | NONE           | NONE             |\n| NULL_IF                        | List          | [\\\\N]          | [\\\\N]            |\n| COMPRESSION                    | String        | AUTO           | AUTO             |\n| ERROR_ON_COLUMN_COUNT_MISMATCH | Boolean       | TRUE           | TRUE             |\n| VALIDATE_UTF8                  | Boolean       | TRUE           | TRUE             |\n| SKIP_BLANK_LINES               | Boolean       | FALSE          | FALSE            |\n| REPLACE_INVALID_CHARACTERS     | Boolean       | FALSE          | FALSE            |\n| EMPTY_FIELD_AS_NULL            | Boolean       | TRUE           | TRUE             |\n| SKIP_BYTE_ORDER_MARK           | Boolean       | TRUE           | TRUE             |\n| ENCODING                       | String        | UTF8           | UTF8             |\n+--------------------------------+---------------+----------------+------------------+\n\nDESC FILE FORMAT `my_json_format`;\n\n+----------------------------+---------------+----------------+------------------+\n| property                   | property_type | property_value | property_default |\n+----------------------------+---------------+----------------+------------------+\n| TYPE                       | String        | JSON           | CSV              |\n| FILE_EXTENSION             | String        |                |                  |\n| DATE_FORMAT                | String        | AUTO           | AUTO             |\n| TIME_FORMAT                | String        | AUTO           | AUTO             |\n| TIMESTAMP_FORMAT           | String        | AUTO           | AUTO             |\n| BINARY_FORMAT              | String        | HEX            | HEX              |\n| TRIM_SPACE                 | Boolean       | FALSE          | FALSE            |\n| NULL_IF                    | List          | []             | [\\\\N]            |\n| COMPRESSION                | String        | AUTO           | AUTO             |\n| ENABLE_OCTAL               | Boolean       | FALSE          | FALSE            |\n| ALLOW_DUPLICATE            | Boolean       | FALSE          | FALSE            |\n| STRIP_OUTER_ARRAY          | Boolean       | FALSE          | FALSE            |\n| STRIP_NULL_VALUES          | Boolean       | FALSE          | FALSE            |\n| IGNORE_UTF8_ERRORS         | Boolean       | FALSE          | FALSE            |\n| REPLACE_INVALID_CHARACTERS | Boolean       | FALSE          | FALSE            |\n| SKIP_BYTE_ORDER_MARK       | Boolean       | TRUE           | TRUE             |\n+----------------------------+---------------+----------------+------------------+\n\nDESC FILE FORMAT `my_parquet_format`;\n\n+----------------+---------------+----------------+------------------+\n| property       | property_type | property_value | property_default |\n+----------------+---------------+----------------+------------------+\n| TYPE           | String        | PARQUET        | CSV              |\n| TRIM_SPACE     | Boolean       | FALSE          | FALSE            |\n| NULL_IF        | List          | []             | [\\\\N]            |\n| COMPRESSION    | String        | SNAPPY         | AUTO             |\n| BINARY_AS_TEXT | Boolean       | TRUE           | TRUE             |\n+----------------+---------------+----------------+------------------+"
},
{
    "function_name": "DESCRIBE FEATURE POLICY",
    "summary": "Describes the properties of a feature policy.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-feature-policy",
    "title": "DESCRIBE FEATURE POLICY",
    "description": "",
    "syntax": "{ DESC | DESCRIBE } FEATURE POLICY <name>",
    "example": "DESCRIBE FEATURE POLICY block_db_policy;\n\n+------------------------------------+-------------------------------+\n| property                           | value                         |\n+------------------------------------|-------------------------------+\n| created_on                         | 2025-05-23 08:19:49.483 -0700 |\n| name                               | BLOCK_CREATE_DB_POLICY        |\n| owner                              | ACCOUNTADMIN                  |\n| owner_role_type                    | ROLE                          |\n| comment                            |                               |\n| blocked_object_types_for_creation  | DATABASES                     |\n+------------------------------------+-------------------------------+"
},
{
    "function_name": "DESCRIBE EXTERNAL VOLUME",
    "summary": "Describes the properties of an external volume.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-external-volume",
    "title": "DESCRIBE EXTERNAL VOLUME",
    "description": "Describes the properties of an",
    "syntax": "DESC[RIBE] EXTERNAL VOLUME <name>",
    "example": "DESC EXTERNAL VOLUME my_external_volume;\n\n+-------------------+--------------------+---------------+-------------------------------------------------------------------------------------------+------------------+\n| parent_property   | property           | property_type | property_value                                                                            | property_default |\n|-------------------+--------------------+---------------+-------------------------------------------------------------------------------------------+------------------|\n|                   | ALLOW_WRITES       | Boolean       | true                                                                                      | true             |\n| STORAGE_LOCATIONS | STORAGE_LOCATION_1 | String        | {\"NAME\":\"my_storage_us_west\",\"STORAGE_PROVIDER\":\"S3\",\"STORAGE_BASE_URL\":\"s3://...\", ...}  |                  |\n| STORAGE_LOCATIONS | ACTIVE             | String        | my_storage_us_west                                                                        |                  |\n+-------------------+--------------------+---------------+-------------------------------------------------------------------------------------------+------------------+"
},

{
    "function_name": "DESCRIBE EXTERNAL TABLE",
    "summary": "Describes the VALUE column and virtual columns in an external table.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-external-table",
    "title": "DESCRIBE EXTERNAL TABLE",
    "description": "Describes the VALUE column and virtual columns in an external table.",
    "syntax": "DESC[RIBE] [ EXTERNAL ] TABLE <name> [ TYPE =  { COLUMNS | STAGE } ]",
    "example": "CREATE EXTERNAL TABLE emp ( ... );\n\nDESC EXTERNAL TABLE emp;"
},
{
    "function_name": "DESCRIBE EVENT TABLE",
    "summary": "Describes the columns in an event table.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-event-table",
    "title": "DESCRIBE EVENT TABLE",
    "description": "Describes the columns in an",
    "syntax": "DESC[RIBE] EVENT TABLE <name>",
    "example": "DESC EVENT TABLE my_logged_events;"
},
{
    "function_name": "DESCRIBE DYNAMIC TABLE",
    "summary": "Describes the columns in a dynamic table.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-dynamic-table",
    "title": "DESCRIBE DYNAMIC TABLE",
    "description": "Describes the columns in a",
    "syntax": "DESC[RIBE] DYNAMIC TABLE <name>",
    "example": "DESC DYNAMIC TABLE my_dynamic_table;"
},
{
    "function_name": "DESCRIBE DBT PROJECT",
    "summary": "Describes the properties of a dbt project object.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-dbt-project",
    "title": "DESCRIBE DBT PROJECT",
    "description": "",
    "syntax": "{ DESC | DESCRIBE } DBT PROJECT <name>",
    "example": "DESCRIBE DBT PROJECT my_dbt_project;\n\n+----------------+--------------+------------+--------------+\n|      name      |    owner     |  comment   | default_args |\n+----------------+--------------+------------+--------------+\n| my_dbt_project | ACCOUNTADMIN | My comment |              |\n+----------------+--------------+------------+--------------+"
},
{
    "function_name": "DESCRIBE DATABASE",
    "summary": "Describes the database.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-database",
    "title": "DESCRIBE DATABASE",
    "description": "Describes the database. For example, shows the schemas in the database.",
    "syntax": "DESC[RIBE] DATABASE <database_name>",
    "example": "CREATE DATABASE desc_demo;\n\nCREATE SCHEMA sample_schema_1;\n\nCREATE SCHEMA sample_schema_2;\n\nDESCRIBE DATABASE desc_demo;\n\n+-------------------------------+--------------------+--------+\n| created_on                    | name               | kind   |\n|-------------------------------+--------------------+--------|\n| 2022-06-23 00:00:00.000 -0700 | INFORMATION_SCHEMA | SCHEMA |\n| 2022-06-23 00:00:00.000 -0700 | PUBLIC             | SCHEMA |\n| 2022-06-23 01:00:00.000 -0700 | SAMPLE_SCHEMA_1    | SCHEMA |\n| 2022-06-23 02:00:00.000 -0700 | SAMPLE_SCHEMA_2    | SCHEMA |\n+-------------------------------+--------------------+--------+"
},
{
    "function_name": "DESCRIBE CORTEX SEARCH SERVICE",
    "summary": "Describes the properties of a Cortex Search service.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-cortex-search",
    "title": "DESCRIBE CORTEX SEARCH SERVICE",
    "description": "Describes the properties of a",
    "syntax": "{ DESC | DESCRIBE } CORTEX SEARCH SERVICE <name>;",
    "example": "DESCRIBE CORTEX SEARCH SERVICE mysvc;"
},
{
    "function_name": "DESCRIBE COMPUTE POOL",
    "summary": "Describes the properties of a compute pool.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-compute-pool",
    "title": "DESCRIBE COMPUTE POOL",
    "description": "",
    "syntax": "DESC[RIBE] COMPUTE POOL <name>",
    "example": "DESCRIBE COMPUTE POOL tutorial_compute_pool;\n\n+-----------------------+--------+-----------+-----------+-----------------+--------------+----------+-------------------+-------------+--------------+------------+--------------+-------------------------------+-------------------------------+-------------------------------+-----------+---------+--------------+-------------+--------+------------+----------------+\n| name                  | state  | min_nodes | max_nodes | instance_family | num_services | num_jobs | auto_suspend_secs | auto_resume | active_nodes | idle_nodes | target_nodes | created_on                    | resumed_on                    | updated_on                    | owner     | comment | is_exclusive | application | budget | error_code | status_message |\n|-----------------------+--------+-----------+-----------+-----------------+--------------+----------+-------------------+-------------+--------------+------------+--------------+-------------------------------+-------------------------------+-------------------------------+-----------+---------+--------------+-------------+--------+------------+----------------|\n| TUTORIAL_COMPUTE_POOL | ACTIVE |         1 |         1 | CPU_X64_XS      |            3 |        0 |              3600 | true        |            1 |          0 |            1 | 2024-02-24 20:41:31.978 -0800 | 2024-08-08 11:27:01.775 -0700 | 2024-08-18 13:29:08.124 -0700 | TEST_ROLE | NULL    | false        | NULL        | NULL   |            |                |\n+-----------------------+--------+-----------+-----------+-----------------+--------------+----------+-------------------+-------------+--------------+------------+--------------+-------------------------------+-------------------------------+-------------------------------+-----------+---------+--------------+-------------+--------+------------+----------------+"
},
{
    "function_name": "DESCRIBE CATALOG INTEGRATION",
    "summary": "Describes the properties of a catalog integration.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-catalog-integration",
    "title": "DESCRIBE CATALOG INTEGRATION",
    "description": "Describes the properties of a",
    "syntax": "DESC[RIBE] CATALOG INTEGRATION <name>",
    "example": "DESC CATALOG INTEGRATION my_catalog_integration;\n\n+-----------------------+---------------+----------------------------------+------------------+\n|       property        | property_type |          property_value          | property_default |\n+-----------------------+---------------+----------------------------------+------------------+\n| ENABLED               | Boolean       | true                             | false            |\n| CATALOG_SOURCE        | String        | GLUE                             |                  |\n| CATALOG_NAMESPACE     | String        | dbname                           |                  |\n| TABLE_FORMAT          | String        | ICEBERG                          |                  |\n| GLUE_AWS_ROLE_ARN     | String        | arn:aws:iam::123:role/dummy-role |                  |\n| GLUE_CATALOG_ID       | String        | 123456789012                     |                  |\n| GLUE_REGION           | String        | us-west-2                        |                  |\n| GLUE_AWS_IAM_USER_ARN | String        | arn:aws:iam::123:user/example    |                  |\n| GLUE_AWS_EXTERNAL_ID  | String        | exampleGlueExternalId            |                  |\n| COMMENT               | String        |                                  |                  |\n+-----------------------+---------------+----------------------------------+------------------+"
},
{
    "function_name": "DESCRIBE AVAILABLE ORGANIZATION PROFILE",
    "summary": "Describes the active organization profile that can be associated with organizational listings.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-available-organization-profile",
    "title": "DESCRIBE AVAILABLE ORGANIZATION PROFILE",
    "description": "",
    "syntax": "{ DESC | DESCRIBE } AVAILABLE ORGANIZATION PROFILE <name>",
    "example": "DESCRIBE AVAILABLE ORGANIZATION PROFILE orgprofile;\n\n+-------------------------+-------------+--------------------------+---------------------+---------------------+----------------------------------+---------------------+---------------------+--------------------+-----------------------------------+\n|created_on               |name         |title                     |system_generated     |state                |description                       |owner_contact        |approver_contact     |logo                |can_publish_listings_with_profile  |\n+-------------------------+-------------+--------------------------+---------------------+---------------------+----------------------------------+---------------------+---------------------+--------------------+-----------------------------------+\n|2025-01-01 01:01:01.000  |ORGPROFILE   |My Organization Profile   |FALSE                |ACTIVE               |Organization profile description  |test@test.com        |test@test.com        |urn:icon:shield     |TRUE                               |\n+-------------------------+-------------+--------------------------+---------------------+---------------------+----------------------------------+---------------------+---------------------+--------------------+-----------------------------------+"
},
{
    "function_name": "DESCRIBE AVAILABLE LISTING",
    "summary": "Describes the columns in the listings that are available to the user who runs the command.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-available-listing",
    "title": "DESCRIBE AVAILABLE LISTING",
    "description": "Describes the columns in the listings that are available to the user who runs the command. For more information on available listings, see",
    "syntax": "{ DESC | DESCRIBE } AVAILABLE LISTING <listing_global_name>",
    "example": "DESC AVAILABLE LISTING MYLISTING;\n\nn| global_name         | updated_on                   | first_published_on            | last_published_on            | created_on                    | title                  | subtitle | description | state     | profile   | regions | is_monetized | is_targeted | is_by_request | is_limited_trial | is_ready_for_import | is_imported  | is_application | application_data | evaluation_plan | business_needs      | usage_examples | categories | data_attributes | listing_terms        | resources | data_dictionary_url | data_preview_url | retired_on | scheduled_drop_time | trial_details | compliance_badges | request_approval_type |\nn| GZDZKY6O            |2023-11-15 13:13:54.840 -0800 | 2023-11-15 13:15:05.751 -0800 | 2023-11-15 13:15:05.751 -0800| 2023-11-15 13:12:48.988 -0800 | public-listing-test-v2 |          | test        | PUBLISHED | GZDZKY57  | ALL     | false        | false       | false.        | false            | false               | false        | true           | \"{...}\"          | NULL            |  [ {\"type\":'...' }] | NULL           | HEALTH     |   {...}         |  {\"type\":\"STANDARD\"} |  {...}    | NULL                | NULL             | NULL       | NULL                | NULL          | NULL              |  NULL                 |\n
},
{
    "function_name": "DESCRIBE AUTHENTICATION POLICY",
    "summary": "Describes the properties of an authentication policy.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-authentication-policy",
    "title": "DESCRIBE AUTHENTICATION POLICY",
    "description": "Describes the properties of an",
    "syntax": "{ DESC | DESCRIBE } AUTHENTICATION POLICY <name>",
    "example": "DESC AUTHENTICATION POLICY my_auth_policy;"
},
{
    "function_name": "DESCRIBE APPLICATION",
    "summary": "Displays information about a",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-application",
    "title": "DESCRIBE APPLICATION",
    "description": "",
    "syntax": "DESC[RIBE] APPLICATION <name>",
    "example": "DESC APPLICATION hello_snowflake_app;\n\n+------------------------------------+-------------------------------+\n| property                           | value                         |\n|------------------------------------+-------------------------------|\n| name                               | hello_snowflake_app           |\n| source_organization                | my_organization               |\n| source_account                     | provider_account              |\n| source_type                        | APPLICATION PACKAGE           |\n| source                             | hello_snowflake_package       |\n| version                            | v1_0                          |\n| version_label                      | NULL                          |\n| patch                              | 0                             |\n| created_on                         | 2024-05-25 08:30:41.520 -0700 |\n| last_upgraded_on                   |                               |\n| share_events_with_provider         | FALSE                         |\n| authorize_telemetry_event_sharing  | FALSE                         |\n| log_level                          | OFF                           |\n| trace_level                        | OFF                           |\n| debug_mode                         | FALSE                         |\n| upgrade_state                      | COMPLETE                      |\n| upgrade_target_version             | NULL                          |\n| upgrade_target_patch               | 0                             |\n| upgrade_attempt                    | NULL                          |\n| upgrade_task_id                    | NULL                          |\n| upgrade_started_on                 |                               |\n| upgrade_attempted_on               |                               |\n| upgrade_failure_type               | NULL                          |\n| upgrade_failure_reason             | NULL                          |\n| previous_version                   | NULL                          |\n| previous_patch                     | 0                             |\n| previous_version_state             | COMPLETE                      |\n| comment                            |                               |\n+------------------------------------+-------------------------------+"
},
{
    "function_name": "DESCRIBE ALERT",
    "summary": "Describes the properties of an alert.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-alert",
    "title": "DESCRIBE ALERT",
    "description": "Describes the properties of an",
    "syntax": "DESC[RIBE] ALERT <name>",
    "example": ""
},
{
    "function_name": "DESCRIBE AGGREGATION POLICY",
    "summary": "Describes the details about an aggregation policy, including the creation date, name, and the SQL expression.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc-aggregation-policy",
    "title": "DESCRIBE AGGREGATION POLICY",
    "description": "",
    "syntax": "DESC[RIBE] AGGREGATION POLICY <name>",
    "example": ""
},
{
    "function_name": "DESCRIBE <object>",
    "summary": "Describes the details for the specified object.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/desc",
    "title": "DESCRIBE",
    "description": "Describes the details for the specified object.",
    "syntax": "",
    "example": ""
},
{
    "function_name": "DELETE",
    "summary": "Remove rows from a table.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/delete",
    "title": "DELETE",
    "description": "Remove rows from a table. You can use a WHERE clause to specify which rows should be removed. If you need to use a subquery(s) or\nadditional table(s) to identify the rows to be removed, specify the subquery(s) or table(s) in a USING clause.",
    "syntax": "DELETE FROM <table_name>\n            [ USING <additional_table_or_query> [, <additional_table_or_query> ] ]\n            [ WHERE <condition> ]",
    "example": "CREATE TABLE leased_bicycles (bicycle_id INTEGER, customer_id INTEGER);\nCREATE TABLE returned_bicycles (bicycle_id INTEGER);\n\nINSERT INTO leased_bicycles (bicycle_ID, customer_ID) VALUES\n    (101, 1111),\n    (102, 2222),\n    (103, 3333),\n    (104, 4444),\n    (105, 5555);\nINSERT INTO returned_bicycles (bicycle_ID) VALUES\n    (102),\n    (104);\n\nDELETE FROM leased_bicycles WHERE bicycle_ID = 105;\n+------------------------+\n| number of rows deleted |\n|------------------------|\n|                      1 |\n+------------------------+\n\nSELECT * FROM leased_bicycles ORDER BY bicycle_ID;\n+------------+-------------+\n| BICYCLE_ID | CUSTOMER_ID |\n|------------+-------------|\n|        101 |        1111 |\n|        102 |        2222 |\n|        103 |        3333 |\n|        104 |        4444 |\n+------------+-------------+\n\nBEGIN WORK;\nDELETE FROM leased_bicycles \n    USING returned_bicycles\n    WHERE leased_bicycles.bicycle_ID = returned_bicycles.bicycle_ID;\nTRUNCATE TABLE returned_bicycles;\nCOMMIT WORK;\n\nSELECT * FROM leased_bicycles ORDER BY bicycle_ID;\n+------------+-------------+\n| BICYCLE_ID | CUSTOMER_ID |\n|------------+-------------|\n|        101 |        1111 |\n|        103 |        3333 |\n+------------+-------------+\n\nINSERT INTO returned_bicycles (bicycle_ID) VALUES (103);\n\nBEGIN WORK;\nDELETE FROM leased_bicycles \n    USING (SELECT bicycle_ID AS bicycle_ID FROM returned_bicycles) AS returned\n    WHERE leased_bicycles.bicycle_ID = returned.bicycle_ID;\nTRUNCATE TABLE returned_bicycles;\nCOMMIT WORK;\n\nSELECT * FROM leased_bicycles ORDER BY bicycle_ID;\n+------------+-------------+\n| BICYCLE_ID | CUSTOMER_ID |\n|------------+-------------|\n|        101 |        1111 |\n+------------+-------------+"
},
{
    "function_name": "CREATE WAREHOUSE",
    "summary": "Creates a new virtual warehouse in the system.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-warehouse",
    "title": "CREATE WAREHOUSE",
    "description": "Creates a new",
    "syntax": "CREATE [ OR REPLACE ] WAREHOUSE [ IF NOT EXISTS ] <name>\n       [ [ WITH ] objectProperties ]\n       [ [ WITH ] TAG ( <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' , ... ] ) ]\n       [ objectParams ]",
    "example": "CREATE OR REPLACE WAREHOUSE my_wh WITH WAREHOUSE_SIZE='X-LARGE';\n\nCREATE OR REPLACE WAREHOUSE my_wh WAREHOUSE_SIZE=LARGE INITIALLY_SUSPENDED=TRUE;\n\nCREATE WAREHOUSE so_warehouse WITH\n  WAREHOUSE_TYPE = 'SNOWPARK-OPTIMIZED'\n  WAREHOUSE_SIZE = xlarge\n  RESOURCE_CONSTRAINT = 'MEMORY_16X_x86';\n\nCREATE OR ALTER WAREHOUSE so_warehouse\n  WAREHOUSE_TYPE = 'SNOWPARK_OPTIMIZED'\n  WAREHOUSE_SIZE = 'X-LARGE'\n  RESOURCE_CONSTRAINT = 'MEMORY_16X_X86'\n  AUTO_RESUME = TRUE\n  COMMENT = 'Snowpark warehouse for ingestion';\n\nCREATE OR ALTER WAREHOUSE so_warehouse\n  WAREHOUSE_TYPE = 'SNOWPARK-OPTIMIZED'\n  WAREHOUSE_SIZE = 'X-LARGE'\n  RESOURCE_CONSTRAINT = 'MEMORY_16X_X86'\n  AUTO_RESUME = FALSE\n  COMMENT = 'Snowpark warehouse for ingestion (disabled for auto-resume)';"
},
{
    "function_name": "CREATE VIEW",
    "summary": "Creates a new view in the current/specified schema, based on a query of one or more existing tables (or any other valid query expression).",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-view",
    "title": "CREATE VIEW",
    "description": "Creates a new view in the current/specified schema, based on a query of one or more existing tables (or any other valid query expression).",
    "syntax": "CREATE [ OR REPLACE ] [ SECURE ] [ { [ { LOCAL | GLOBAL } ] TEMP | TEMPORARY | VOLATILE } ] [ RECURSIVE ] VIEW [ IF NOT EXISTS ] <name>\n  [ ( <column_list> ) ]\n  [ <col1> [ WITH ] MASKING POLICY <policy_name> [ USING ( <col1> , <cond_col1> , ... ) ]\n           [ WITH ] PROJECTION POLICY <policy_name>\n           [ WITH ] TAG ( <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' , ... ] ) ]\n  [ , <col2> [ ... ] ]\n  [ [ WITH ] ROW ACCESS POLICY <policy_name> ON ( <col_name> [ , <col_name> ... ] ) ]\n  [ [ WITH ] TAG ( <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' , ... ] ) ]\n  [ WITH CONTACT ( <purpose> = <contact_name> [ , <purpose> = <contact_name> ... ] ) ]\n  [ CHANGE_TRACKING = { TRUE | FALSE } ]\n  [ COPY GRANTS ]\n  [ COMMENT = '<string_literal>' ]\n  [ [ WITH ] ROW ACCESS POLICY <policy_name> ON ( <col_name> [ , <col_name> ... ] ) ]\n  [ [ WITH ] AGGREGATION POLICY <policy_name> [ ENTITY KEY ( <col_name> [ , <col_name> ... ] ) ] ]\n  [ [ WITH ] JOIN POLICY <policy_name> [ ALLOWED JOIN KEYS ( <col_name> [ , ... ] ) ] ]\n  [ [ WITH ] TAG ( <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' , ... ] ) ]\n  AS <select_statement>",
    "example": "CREATE VIEW myview COMMENT='Test view' AS SELECT col1, col2 FROM mytable;\n\nSHOW VIEWS;\n\n+---------------------------------+-------------------+----------+---------------+-------------+----------+-----------+--------------------------------------------------------------------------+\n| created_on                      | name              | reserved | database_name | schema_name | owner    | comment   | text                                                                     |\n|---------------------------------+-------------------+----------+---------------+-------------+----------+-----------+--------------------------------------------------------------------------|\n| Thu, 19 Jan 2017 15:00:37 -0800 | MYVIEW            |          | MYTEST1       | PUBLIC      | SYSADMIN | Test view | CREATE VIEW myview COMMENT='Test view' AS SELECT col1, col2 FROM mytable |\n+---------------------------------+-------------------+----------+---------------+-------------+----------+-----------+--------------------------------------------------------------------------+\n\nCREATE OR REPLACE SECURE VIEW myview COMMENT='Test secure view' AS SELECT col1, col2 FROM mytable;\n\nSELECT is_secure FROM information_schema.views WHERE table_name = 'MYVIEW';\n\nCREATE OR REPLACE TABLE employees (title VARCHAR, employee_ID INTEGER, manager_ID INTEGER);\n\nINSERT INTO employees (title, employee_ID, manager_ID) VALUES\n    ('President', 1, NULL),  -- The President has no manager.\n        ('Vice President Engineering', 10, 1),\n            ('Programmer', 100, 10),\n            ('QA Engineer', 101, 10),\n        ('Vice President HR', 20, 1),\n            ('Health Insurance Analyst', 200, 20);\n\nCREATE VIEW employee_hierarchy (title, employee_ID, manager_ID, \"MGR_EMP_ID (SHOULD BE SAME)\", \"MGR TITLE\") AS (\n   WITH RECURSIVE employee_hierarchy_cte (title, employee_ID, manager_ID, \"MGR_EMP_ID (SHOULD BE SAME)\", \"MGR TITLE\") AS (\n      -- Start at the top of the hierarchy ...\n      SELECT title, employee_ID, manager_ID, NULL AS \"MGR_EMP_ID (SHOULD BE SAME)\", 'President' AS \"MGR TITLE\"\n        FROM employees\n        WHERE title = 'President'\n      UNION ALL\n      -- ... and work our way down one level at a time.\n      SELECT employees.title, \n             employees.employee_ID, \n             employees.manager_ID, \n             employee_hierarchy_cte.employee_id AS \"MGR_EMP_ID (SHOULD BE SAME)\", \n             employee_hierarchy_cte.title AS \"MGR TITLE\"\n        FROM employees INNER JOIN employee_hierarchy_cte\n       WHERE employee_hierarchy_cte.employee_ID = employees.manager_ID\n   )\n   SELECT * \n      FROM employee_hierarchy_cte\n);\n\nSELECT * \n    FROM employee_hierarchy \n    ORDER BY employee_ID;\n+----------------------------+-------------+------------+-----------------------------+----------------------------+\n| TITLE                      | EMPLOYEE_ID | MANAGER_ID | MGR_EMP_ID (SHOULD BE SAME) | MGR TITLE                  |\n|----------------------------+-------------+------------+-----------------------------+----------------------------|\n| President                  |           1 |       NULL |                        NULL | President                  |\n| Vice President Engineering |          10 |          1 |                           1 | President                  |\n| Vice President HR          |          20 |          1 |                           1 | President                  |\n| Programmer                 |         100 |         10 |                          10 | Vice President Engineering |\n| QA Engineer                |         101 |         10 |                          10 | Vice President Engineering |\n| Health Insurance Analyst   |         200 |         20 |                          20 | Vice President HR          |\n+----------------------------+-------------+------------+-----------------------------+----------------------------+\n\nCREATE RECURSIVE VIEW employee_hierarchy_02 (title, employee_ID, manager_ID, \"MGR_EMP_ID (SHOULD BE SAME)\", \"MGR TITLE\") AS (\n      -- Start at the top of the hierarchy ...\n      SELECT title, employee_ID, manager_ID, NULL AS \"MGR_EMP_ID (SHOULD BE SAME)\", 'President' AS \"MGR TITLE\"\n        FROM employees\n        WHERE title = 'President'\n      UNION ALL\n      -- ... and work our way down one level at a time.\n      SELECT employees.title, \n             employees.employee_ID, \n             employees.manager_ID, \n             employee_hierarchy_02.employee_id AS \"MGR_EMP_ID (SHOULD BE SAME)\", \n             employee_hierarchy_02.title AS \"MGR TITLE\"\n        FROM employees INNER JOIN employee_hierarchy_02\n        WHERE employee_hierarchy_02.employee_ID = employees.manager_ID\n);\n\nSELECT * \n    FROM employee_hierarchy_02 \n    ORDER BY employee_ID;\n+----------------------------+-------------+------------+-----------------------------+----------------------------+\n| TITLE                      | EMPLOYEE_ID | MANAGER_ID | MGR_EMP_ID (SHOULD BE SAME) | MGR TITLE                  |\n|----------------------------+-------------+------------+-----------------------------+----------------------------|\n| President                  |           1 |       NULL |                        NULL | President                  |\n| Vice President Engineering |          10 |          1 |                           1 | President                  |\n| Vice President HR          |          20 |          1 |                           1 | President                  |\n| Programmer                 |         100 |         10 |                          10 | Vice President Engineering |\n| QA Engineer                |         101 |         10 |                          10 | Vice President Engineering |\n| Health Insurance Analyst   |         200 |         20 |                          20 | Vice President HR          |\n+----------------------------+-------------+------------+-----------------------------+----------------------------+\n\nCREATE OR ALTER TABLE my_table(a INT);\n\nCREATE OR ALTER VIEW v2(one)\n  AS SELECT a FROM my_table;\n\nCREATE OR ALTER VIEW v2(one)\n  COMMENT = 'fff'\n  CHANGE_TRACKING = true\n  AS SELECT a FROM my_table;\n\nCREATE OR ALTER VIEW v2(one COMMENT 'bar')\n  COMMENT = 'foo'\n  AS SELECT a FROM my_table;\n\nCREATE OR ALTER VIEW v2(one COMMENT 'bar')\n  CHANGE_TRACKING = true\n  AS SELECT a FROM my_table;"
},
{
    "function_name": "CREATE OR ALTER VERSIONED SCHEMA",
    "summary": "Creates a new versioned schema or modifies an existing versioned schema.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-versioned-schema",
    "title": "CREATE OR ALTER VERSIONED SCHEMA",
    "description": "",
    "syntax": "CREATE OR ALTER VERSIONED SCHEMA <name>\n  [ WITH MANAGED ACCESS ]\n  [ DATA_RETENTION_TIME_IN_DAYS = ]\n  [ MAX_DATA_EXTENSION_TIME_IN_DAYS = ]\n  [ DEFAULT_DDL_COLLATION = '<collation_specification>' ]\n  [ COMMENT = '<string_literal>' ]",
    "example": ""
},
{
    "function_name": "CREATE USER",
    "summary": "Creates a new user or replaces an existing user in the system.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-user",
    "title": "CREATE USER",
    "description": "Creates a new user or replaces an existing user in the system. For more details, see",
    "syntax": "CREATE [ OR REPLACE ] USER [ IF NOT EXISTS ] <name>\n  [ objectProperties ]\n  [ objectParams ]\n  [ sessionParams ]\n  [ [ WITH ] TAG ( <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' , ... ] ) ]",
    "example": "CREATE USER user1 PASSWORD='abc123' DEFAULT_ROLE = myrole DEFAULT_SECONDARY_ROLES = ('ALL') MUST_CHANGE_PASSWORD = TRUE;"
},
{
    "function_name": "CREATE TASK",
    "summary": "Creates a new task in the current/specified schema or replaces an existing task.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-task",
    "title": "CREATE TASK",
    "description": "Creates a new",
    "syntax": "CREATE [ OR REPLACE ] TASK [ IF NOT EXISTS ] <name>\n    [ WITH TAG ( <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' , ... ] ) ]\n    [ WITH CONTACT ( <purpose> = <contact_name> [ , <purpose> = <contact_name> ... ] ) ]\n    [ { WAREHOUSE = <string> }\n      | { USER_TASK_MANAGED_INITIAL_WAREHOUSE_SIZE = <string> } ]\n    [ SCHEDULE = { '<num> { HOURS | MINUTES | SECONDS }'\n      | 'USING CRON <expr> <time_zone>' } ]\n    [ CONFIG = <configuration_string> ]\n    [ ALLOW_OVERLAPPING_EXECUTION = TRUE | FALSE ]\n    [ <session_parameter> = <value>\n      [ , <session_parameter> = <value> ... ] ]\n    [ USER_TASK_TIMEOUT_MS = <num> ]\n    [ SUSPEND_TASK_AFTER_NUM_FAILURES = <num> ]\n    [ ERROR_INTEGRATION = <integration_name> ]\n    [ SUCCESS_INTEGRATION = <integration_name> ]\n    [ LOG_LEVEL = '<log_level>' ]\n    [ COMMENT = '<string_literal>' ]\n    [ FINALIZE = <string> ]\n    [ TASK_AUTO_RETRY_ATTEMPTS = <num> ]\n    [ USER_TASK_MINIMUM_TRIGGER_INTERVAL_IN_SECONDS = <num> ]\n    [ TARGET_COMPLETION_INTERVAL = '<num> { HOURS | MINUTES | SECONDS }' ]\n    [ SERVERLESS_TASK_MIN_STATEMENT_SIZE = '{ XSMALL | SMALL\n      | MEDIUM | LARGE | XLARGE | XXLARGE }' ]\n    [ SERVERLESS_TASK_MAX_STATEMENT_SIZE = '{ XSMALL | SMALL\n      | MEDIUM | LARGE | XLARGE | XXLARGE }' ]\n  [ AFTER <string> [ , <string> , ... ] ]\n  [ WHEN <boolean_expr> ]\n  AS\n    <sql>",
    "example": "CREATE TASK t1\n  SCHEDULE = 'USING CRON 0 9-17 * * SUN America/Los_Angeles'\n  USER_TASK_MANAGED_INITIAL_WAREHOUSE_SIZE = 'XSMALL'\n  AS\n    SELECT CURRENT_TIMESTAMP;\n\nCREATE TASK mytask_hour\n  WAREHOUSE = mywh\n  SCHEDULE = 'USING CRON 0 9-17 * * SUN America/Los_Angeles'\n  AS\n    SELECT CURRENT_TIMESTAMP;\n\nCREATE TASK t1\n  SCHEDULE = '60 MINUTES'\n  TIMESTAMP_INPUT_FORMAT = 'YYYY-MM-DD HH24'\n  USER_TASK_MANAGED_INITIAL_WAREHOUSE_SIZE = 'XSMALL'\n  AS\n    INSERT INTO mytable(ts) VALUES(CURRENT_TIMESTAMP);\n\nCREATE TASK mytask_minute\n  WAREHOUSE = mywh\n  SCHEDULE = '5 MINUTES'\n  AS\n    INSERT INTO mytable(ts) VALUES(CURRENT_TIMESTAMP);\n\nCREATE TASK mytask1\n  WAREHOUSE = mywh\n  SCHEDULE = '5 MINUTES'\n  WHEN\n    SYSTEM$STREAM_HAS_DATA('MYSTREAM')\n  AS\n    INSERT INTO mytable1(id,name) SELECT id, name FROM mystream WHERE METADATA$ACTION = 'INSERT';\n\n-- Create task5 and specify task2, task3, task4 as predecessors tasks.\n-- The new task is a serverless task that inserts the current timestamp into a table column.\nCREATE TASK task5\n  AFTER task2, task3, task4\nAS\n  INSERT INTO t1(ts) VALUES(CURRENT_TIMESTAMP);\n\n-- Create a stored procedure that unloads data from a table\n-- The COPY statement in the stored procedure unloads data to files in a path identified by epoch time (using the Date.now() method)\nCREATE OR REPLACE PROCEDURE my_unload_sp()\n  returns string not null\n  language javascript\n  AS\n    $$\n      var my_sql_command = \"\"\n      var my_sql_command = my_sql_command.concat(\"copy into @mystage\",\"/\",Date.now(),\"/\",\" from mytable overwrite=true;\");\n      var statement1 = snowflake.createStatement( {sqlText: my_sql_command} );\n      var result_set1 = statement1.execute();\n    return my_sql_command; // Statement returned for info/debug purposes\n    $$;\n\n-- Create a task that calls the stored procedure every hour\nCREATE TASK my_copy_task\n  WAREHOUSE = mywh\n  SCHEDULE = '60 MINUTES'\n  AS\n    CALL my_unload_sp();\n\n!set sql_delimiter=/\nCREATE OR REPLACE TASK test_logging\n  USER_TASK_MANAGED_INITIAL_WAREHOUSE_SIZE = 'XSMALL'\n  SCHEDULE = 'USING CRON  0 * * * * America/Los_Angeles'\n  AS\n    BEGIN\n      ALTER SESSION SET TIMESTAMP_OUTPUT_FORMAT = 'YYYY-MM-DD HH24:MI:SS.FF';\n      SELECT CURRENT_TIMESTAMP;\n    END;/\n!set sql_delimiter=';'\n\nCREATE TASK t1\n  USER_TASK_MANAGED_INITIAL_WAREHOUSE_SIZE = 'XSMALL'\n  SCHEDULE = '15 SECONDS'\n  AS\n    EXECUTE IMMEDIATE\n    $$\n    DECLARE\n      radius_of_circle float;\n      area_of_circle float;\n    BEGIN\n      radius_of_circle := 3;\n      area_of_circle := pi() * radius_of_circle * radius_of_circle;\n      return area_of_circle;\n    END;\n    $$;\n\nCREATE OR REPLACE TASK root_task_with_config\n  WAREHOUSE=mywarehouse\n  SCHEDULE='10 m'\n  CONFIG=$${\"output_dir\": \"/temp/test_directory/\", \"learning_rate\": 0.1}$$\n  AS\n    BEGIN\n      LET OUTPUT_DIR STRING := SYSTEM$GET_TASK_GRAPH_CONFIG('output_dir')::string;\n      LET LEARNING_RATE DECIMAL := SYSTEM$GET_TASK_GRAPH_CONFIG('learning_rate')::DECIMAL;\n    ...\n    END;\n\nCREATE TASK finalize_task\n  WAREHOUSE = my_warehouse\n  FINALIZE = my_root_task\n  AS\n    CALL SYSTEM$SEND_EMAIL(\n      'my_email_int',\n      'first.last@example.com, first2.last2@example.com',\n      'Email Alert: Task A has finished.',\n      'Task A has successfully finished.\\nStart Time: 10:10:32\\nEnd Time: 12:15:45\\nTotal Records Processed: 115678'\n    );\n\nCREATE TASK triggeredTask  WAREHOUSE = my_warehouse\n  WHEN system$stream_has_data('my_stream')\n  AS\n    INSERT INTO my_downstream_table\n    SELECT * FROM my_stream;\n\nALTER TASK triggeredTask RESUME;\n\nCREATE OR ALTER TASK my_task\n  WAREHOUSE = my_warehouse\n  SCHEDULE = '60 MINUTES'\n  AS\n    SELECT PI();\n\nCREATE OR ALTER TASK my_task\n  WAREHOUSE = regress\n  AFTER my_other_task\n  AS\n    SELECT 2 * PI();"
},
{
    "function_name": "CREATE TAG",
    "summary": "Creates a new tag or replaces an existing tag in the system.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-tag",
    "title": "CREATE TAG",
    "description": "Creates a new tag or replaces an existing tag in the system.",
    "syntax": "CREATE [ OR REPLACE ] TAG [ IF NOT EXISTS ] <name>\n    [ ALLOWED_VALUES '<val_1>' [ , '<val_2>' [ , ... ] ] ]\n    [ PROPAGATE = { ON_DEPENDENCY_AND_DATA_MOVEMENT | ON_DEPENDENCY | ON_DATA_MOVEMENT }\n      [ ON_CONFLICT = { '<string>' | ALLOWED_VALUES_SEQUENCE } ] ]\n    [ COMMENT = '<string_literal>' ]",
    "example": "CREATE TAG cost_center COMMENT = 'cost_center tag';\n\nCREATE OR ALTER TAG cost_center ALLOWED_VALUES 'finance', 'engineering', 'sales';"
},
{
    "function_name": "CREATE | ALTER TABLE … CONSTRAINT",
    "summary": "This topic describes how to create constraints by specifying a CONSTRAINT clause in a CREATE TABLE, CREATE HYBRID TABLE, or ALTER TABLE statement.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-table-constraint",
    "title": "CREATE | ALTER TABLE … CONSTRAINT",
    "description": "This topic describes how to create constraints by specifying a CONSTRAINT clause in a",
    "syntax": "",
    "example": ""
},
{
    "function_name": "CREATE TABLE",
    "summary": "Creates a new table in the current/specified schema, replaces an existing table, or alters an existing table.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-table",
    "title": "CREATE TABLE",
    "description": "Creates a new table in the current/specified schema, replaces an existing table, or alters an existing table. A table can have multiple\ncolumns, with each column definition consisting of a name, data type, and optionally whether the column:",
    "syntax": "CREATE [ OR REPLACE ]\n    [ { [ { LOCAL | GLOBAL } ] TEMP | TEMPORARY | VOLATILE | TRANSIENT } ]\n  TABLE [ IF NOT EXISTS ] <table_name>\n\n  (\n    -- Column definition\n    <col_name> <col_type>\n      [ inlineConstraint ]\n      [ NOT NULL ]\n      [ COLLATE '<collation_specification>' ]\n      [\n        {\n          DEFAULT <expr>\n          | { AUTOINCREMENT | IDENTITY }\n            [\n              {\n                ( <start_num> , <step_num> )\n                | START <num> INCREMENT <num>\n              }\n            ]\n            [ { ORDER | NOORDER } ]\n        }\n      ]\n      [ [ WITH ] MASKING POLICY <policy_name> [ USING ( <col_name> , <cond_col1> , ... ) ] ]\n      [ [ WITH ] PROJECTION POLICY <policy_name> ]\n      [ [ WITH ] TAG ( <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' , ... ] ) ]\n      [ COMMENT '<string_literal>' ]\n\n    -- Additional column definitions\n    [ , <col_name> <col_type> [ ... ] ]\n\n    -- Out-of-line constraints\n    [ , outoflineConstraint [ ... ] ]\n  )\n\n  [ CLUSTER BY ( <expr> [ , <expr> , ... ] ) ]\n  [ ENABLE_SCHEMA_EVOLUTION = { TRUE | FALSE } ]\n  [ DATA_RETENTION_TIME_IN_DAYS = <integer> ]\n  [ MAX_DATA_EXTENSION_TIME_IN_DAYS = <integer> ]\n  [ CHANGE_TRACKING = { TRUE | FALSE } ]\n  [ DEFAULT_DDL_COLLATION = '<collation_specification>' ]\n  [ COPY GRANTS ]\n  [ COMMENT = '<string_literal>' ]\n  [ [ WITH ] ROW ACCESS POLICY <policy_name> ON ( <col_name> [ , <col_name> ... ] ) ]\n  [ [ WITH ] AGGREGATION POLICY <policy_name> [ ENTITY KEY ( <col_name> [ , <col_name> ... ] ) ] ]\n  [ [ WITH ] JOIN POLICY <policy_name> [ ALLOWED JOIN KEYS ( <col_name> [ , ... ] ) ] ]\n  [ [ WITH ] TAG ( <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' , ... ] ) ]\n  [ WITH CONTACT ( <purpose> = <contact_name> [ , <purpose> = <contact_name> ... ] ) ]",
    "example": "CREATE TABLE mytable (amount NUMBER);\n\n+-------------------------------------+\n| status                              |\n|-------------------------------------|\n| Table MYTABLE successfully created. |\n+-------------------------------------+\n\nINSERT INTO mytable VALUES(1);\n\nSHOW TABLES like 'mytable';\n\n+---------------------------------+---------+---------------+-------------+-------+---------+------------+------+-------+--------------+----------------+\n| created_on                      | name    | database_name | schema_name | kind  | comment | cluster_by | rows | bytes | owner        | retention_time |\n|---------------------------------+---------+---------------+-------------+-------+---------+------------+------+-------+--------------+----------------|\n| Mon, 11 Sep 2017 16:32:28 -0700 | MYTABLE | TESTDB        | PUBLIC      | TABLE |         |            |    1 |  1024 | ACCOUNTADMIN | 1              |\n+---------------------------------+---------+---------------+-------------+-------+---------+------------+------+-------+--------------+----------------+\n\nDESC TABLE mytable;\n\n+--------+--------------+--------+-------+---------+-------------+------------+-------+------------+---------+\n| name   | type         | kind   | null? | default | primary key | unique key | check | expression | comment |\n|--------+--------------+--------+-------+---------+-------------+------------+-------+------------+---------|\n| AMOUNT | NUMBER(38,0) | COLUMN | Y     | NULL    | N           | N          | NULL  | NULL       | NULL    |\n+--------+--------------+--------+-------+---------+-------------+------------+-------+------------+---------+\n\nCREATE TABLE example (col1 NUMBER COMMENT 'a column comment') COMMENT='a table comment';\n\n+-------------------------------------+\n| status                              |\n|-------------------------------------|\n| Table EXAMPLE successfully created. |\n+-------------------------------------+\n\nSHOW TABLES LIKE 'example';\n\n+---------------------------------+---------+---------------+-------------+-------+-----------------+------------+------+-------+--------------+----------------+\n| created_on                      | name    | database_name | schema_name | kind  | comment         | cluster_by | rows | bytes | owner        | retention_time |\n|---------------------------------+---------+---------------+-------------+-------+-----------------+------------+------+-------+--------------+----------------|\n| Mon, 11 Sep 2017 16:35:59 -0700 | EXAMPLE | TESTDB        | PUBLIC      | TABLE | a table comment |            |    0 |     0 | ACCOUNTADMIN | 1              |\n+---------------------------------+---------+---------------+-------------+-------+-----------------+------------+------+-------+--------------+----------------+\n\nDESC TABLE example;\n\n+------+--------------+--------+-------+---------+-------------+------------+-------+------------+------------------+\n| name | type         | kind   | null? | default | primary key | unique key | check | expression | comment          |\n|------+--------------+--------+-------+---------+-------------+------------+-------+------------+------------------|\n| COL1 | NUMBER(38,0) | COLUMN | Y     | NULL    | N           | N          | NULL  | NULL       | a column comment |\n+------+--------------+--------+-------+---------+-------------+------------+-------+------------+------------------+\n\nCREATE TABLE mytable_copy (b) AS SELECT * FROM mytable;\n\nDESC TABLE mytable_copy;\n\n+------+--------------+--------+-------+---------+-------------+------------+-------+------------+---------+\n| name | type         | kind   | null? | default | primary key | unique key | check | expression | comment |\n|------+--------------+--------+-------+---------+-------------+------------+-------+------------+---------|\n| B    | NUMBER(38,0) | COLUMN | Y     | NULL    | N           | N          | NULL  | NULL       | NULL    |\n+------+--------------+--------+-------+---------+-------------+------------+-------+------------+---------+\n\nCREATE TABLE mytable_copy2 AS SELECT b+1 AS c FROM mytable_copy;\n\nDESC TABLE mytable_copy2;\n\n+------+--------------+--------+-------+---------+-------------+------------+-------+------------+---------+\n| name | type         | kind   | null? | default | primary key | unique key | check | expression | comment |\n|------+--------------+--------+-------+---------+-------------+------------+-------+------------+---------|\n| C    | NUMBER(39,0) | COLUMN | Y     | NULL    | N           | N          | NULL  | NULL       | NULL    |\n+------+--------------+--------+-------+---------+-------------+------------+-------+------------+---------+\n\nSELECT * FROM mytable_copy2;\n\n+---+\n| C |\n|---|\n| 2 |\n+---+\n\nCREATE TABLE testtable_summary (name, summary_amount) AS SELECT name, amount1 + amount2 FROM testtable;\n\nCREATE OR REPLACE TABLE parquet_col (\n  custKey NUMBER DEFAULT NULL,\n  orderDate DATE DEFAULT NULL,\n  orderStatus VARCHAR(100) DEFAULT NULL,\n  price VARCHAR(255)\n)\nAS SELECT\n  $1:o_custkey::number,\n  $1:o_orderdate::date,\n  $1:o_orderstatus::text,\n  $1:o_totalprice::text\nFROM @my_stage;\n\n+-----------------------------------------+\n| status                                  |\n|-----------------------------------------|\n| Table PARQUET_COL successfully created. |\n+-----------------------------------------+\n\nDESC TABLE parquet_col;\n\n+-------------+--------------+--------+-------+---------+-------------+------------+-------+------------+---------+\n| name        | type         | kind   | null? | default | primary key | unique key | check | expression | comment |\n|-------------+--------------+--------+-------+---------+-------------+------------+-------+------------+---------|\n| CUSTKEY     | NUMBER(38,0) | COLUMN | Y     | NULL    | N           | N          | NULL  | NULL       | NULL    |\n| ORDERDATE   | DATE         | COLUMN | Y     | NULL    | N           | N          | NULL  | NULL       | NULL    |\n| ORDERSTATUS | VARCHAR(100) | COLUMN | Y     | NULL    | N           | N          | NULL  | NULL       | NULL    |\n| PRICE       | VARCHAR(255) | COLUMN | Y     | NULL    | N           | N          | NULL  | NULL       | NULL    |\n+-------------+--------------+--------+-------+---------+-------------+------------+-------+------------+---------+\n\nCREATE TABLE mytable (amount NUMBER);\n\nINSERT INTO mytable VALUES(1);\n\nSELECT * FROM mytable;\n\n+--------+\n| AMOUNT |\n|--------|\n|      1 |\n+--------+\n\nCREATE TABLE mytable_2 LIKE mytable;\n\nDESC TABLE mytable_2;\n\n+--------+--------------+--------+-------+---------+-------------+------------+-------+------------+---------+\n| name   | type         | kind   | null? | default | primary key | unique key | check | expression | comment |\n|--------+--------------+--------+-------+---------+-------------+------------+-------+------------+---------|\n| AMOUNT | NUMBER(38,0) | COLUMN | Y     | NULL    | N           | N          | NULL  | NULL       | NULL    |\n+--------+--------------+--------+-------+---------+-------------+------------+-------+------------+---------+\n\nSELECT * FROM mytable_2;\n\n+--------+\n| AMOUNT |\n|--------|\n+--------+\n\nCREATE TABLE mytable (date TIMESTAMP_NTZ, id NUMBER, content VARIANT) CLUSTER BY (date, id);\n\nSHOW TABLES LIKE 'mytable';\n\n+---------------------------------+---------+---------------+-------------+-------+---------+------------------+------+-------+--------------+----------------+\n| created_on                      | name    | database_name | schema_name | kind  | comment | cluster_by       | rows | bytes | owner        | retention_time |\n|---------------------------------+---------+---------------+-------------+-------+---------+------------------+------+-------+--------------+----------------|\n| Mon, 11 Sep 2017 16:20:41 -0700 | MYTABLE | TESTDB        | PUBLIC      | TABLE |         | LINEAR(DATE, ID) |    0 |     0 | ACCOUNTADMIN | 1              |\n+---------------------------------+---------+---------------+-------------+-------+---------+------------------+------+-------+--------------+----------------+\n\nCREATE OR REPLACE TABLE collation_demo (\n  uncollated_phrase VARCHAR, \n  utf8_phrase VARCHAR COLLATE 'utf8',\n  english_phrase VARCHAR COLLATE 'en',\n  spanish_phrase VARCHAR COLLATE 'es');\n\nINSERT INTO collation_demo (\n      uncollated_phrase, \n      utf8_phrase, \n      english_phrase, \n      spanish_phrase) \n   VALUES (\n     'pinata', \n     'pinata', \n     'pinata', \n     'piñata');\n\nCREATE TABLE mytable\n  USING TEMPLATE (\n    SELECT ARRAY_AGG(OBJECT_CONSTRUCT(*))\n    WITHIN GROUP (ORDER BY order_id)\n      FROM TABLE(\n        INFER_SCHEMA(\n          LOCATION=>'@mystage',\n          FILE_FORMAT=>'my_parquet_format'\n        )\n      ));\n\nCREATE TEMPORARY TABLE demo_temporary (i INTEGER);\nCREATE TEMP TABLE demo_temp (i INTEGER);\n\nCREATE LOCAL TEMPORARY TABLE demo_local_temporary (i INTEGER);\nCREATE LOCAL TEMP TABLE demo_local_temp (i INTEGER);\n\nCREATE GLOBAL TEMPORARY TABLE demo_global_temporary (i INTEGER);\nCREATE GLOBAL TEMP TABLE demo_global_temp (i INTEGER);\n\nCREATE VOLATILE TABLE demo_volatile (i INTEGER);\n\nCREATE OR ALTER TABLE my_table(a INT);\n\nCREATE OR ALTER TABLE my_table(\n    a INT PRIMARY KEY,\n    b VARCHAR(200)\n  )\n  DATA_RETENTION_TIME_IN_DAYS = 5\n  DEFAULT_DDL_COLLATION = 'de';\n\nCREATE OR ALTER TABLE my_table(\n    a INT PRIMARY KEY,\n    c VARCHAR(200)\n  )\n  DEFAULT_DDL_COLLATION = 'de';\n\nCREATE OR ALTER TABLE my_table(\n    a INT PRIMARY KEY,\n    b INT\n  );\n\nINSERT INTO my_table VALUES (1, 2), (2, 3);\n\nSELECT * FROM my_table;\n\n+---+---+\n| A | B |\n|---+---|\n| 1 | 2 |\n| 2 | 3 |\n+---+---+\n\nCREATE OR ALTER TABLE my_table(\n    a INT PRIMARY KEY,\n    c INT\n  );\n\nSELECT * FROM my_table;\n\n+---+------+\n| A | C    |\n|---+------|\n| 1 | NULL |\n| 2 | NULL |\n+---+------+\n\nCREATE TABLE t(a INT);\n\nCREATE OR ALTER TABLE t(a INT PRIMARY KEY);\n\nDESC TABLE t;\n\n+------+--------------+--------+-------+---------+-------------+------------+-------+------------+---------+-------------+----------------+\n| name | type         | kind   | null? | default | primary key | unique key | check | expression | comment | policy name | privacy domain |\n|------+--------------+--------+-------+---------+-------------+------------+-------+------------+---------+-------------+----------------|\n| A    | NUMBER(38,0) | COLUMN | N     | NULL    | Y           | N          | NULL  | NULL       | NULL    | NULL        | NULL           |\n+------+--------------+--------+-------+---------+-------------+------------+-------+------------+---------+-------------+----------------+\n\nCREATE OR REPLACE TABLE t(a INT);\n\nINSERT INTO t VALUES (null);\n\nCREATE OR ALTER TABLE t(a INT PRIMARY KEY);\n\n001471 (42601): SQL compilation error:\nColumn 'A' contains null values. Not null constraint cannot be added."
},
{
    "function_name": "CREATE STREAMLIT",
    "summary": "Creates a new Streamlit application object in Snowflake or replaces an existing Streamlit application object in the same schema.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-streamlit",
    "title": "CREATE STREAMLIT",
    "description": "Creates a new Streamlit application object in Snowflake or replaces an existing Streamlit\napplication object in the same schema.",
    "syntax": "CREATE [ OR REPLACE ] STREAMLIT [ IF NOT EXISTS ] <name>\n  FROM <source_location>\n  MAIN_FILE = '<path_to_main_file_in_root_directory>'\n  QUERY_WAREHOUSE = <warehouse_name>\n  [ COMMENT = '<string_literal>' ]\n  [ TITLE = '<app_title>' ]\n  [ IMPORTS = ( '<stage_path_and_file_name_to_read>' [ , ... ] ) ]\n  [ EXTERNAL_ACCESS_INTEGRATIONS = ( <integration_name> [ , ... ] ) ]\n  [ ROOT_LOCATION = '<stage_path_and_root_directory>' ]",
    "example": "CREATE STREAMLIT hello_streamlit\n  FROM @streamlit_db.streamlit_schema.streamlit_stage\n  MAIN_FILE = 'streamlit_main.py'\n  QUERY_WAREHOUSE = my_warehouse;\n\nCREATE STREAMLIT hello_streamlit\n  FROM @streamlit_db.streamlit_schema.streamlit_repo/branches/streamlit_branch/\n  MAIN_FILE = 'streamlit_main.py'\n  QUERY_WAREHOUSE = my_warehouse;"
},
{
    "function_name": "CREATE STREAM",
    "summary": "Creates a new stream in the current/specified schema or replaces an existing stream.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-stream",
    "title": "CREATE STREAM",
    "description": "Creates a new stream in the current/specified schema or replaces an existing",
    "syntax": "-- table\nCREATE [ OR REPLACE ] STREAM [IF NOT EXISTS]\n  <name>\n  [ [ WITH ] TAG ( <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' , ... ] ) ]\n  [ COPY GRANTS ]\n  ON TABLE <table_name>\n  [ { AT | BEFORE } ( { TIMESTAMP => <timestamp> | OFFSET => <time_difference> | STATEMENT => <id> | STREAM => '<name>' } ) ]\n  [ APPEND_ONLY = TRUE | FALSE ]\n  [ SHOW_INITIAL_ROWS = TRUE | FALSE ]\n  [ COMMENT = '<string_literal>' ]\n\n-- Event table\nCREATE [ OR REPLACE ] STREAM [IF NOT EXISTS]\n  <name>\n  [ [ WITH ] TAG ( <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' , ... ] ) ]\n  [ COPY GRANTS ]\n  ON EVENT TABLE <table_name>\n  [ COMMENT = '<string_literal>' ]\n\n-- External table\nCREATE [ OR REPLACE ] STREAM [IF NOT EXISTS]\n  <name>\n  [ [ WITH ] TAG ( <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' , ... ] ) ]\n  [ COPY GRANTS ]\n  ON EXTERNAL TABLE <external_table_name>\n  [ { AT | BEFORE } ( { TIMESTAMP => <timestamp> | OFFSET => <time_difference> | STATEMENT => <id> | STREAM => '<name>' } ) ]\n  [ INSERT_ONLY = TRUE ]\n  [ COMMENT = '<string_literal>' ]\n\n-- Directory table\nCREATE [ OR REPLACE ] STREAM [IF NOT EXISTS]\n  <name>\n  [ [ WITH ] TAG ( <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' , ... ] ) ]\n  [ COPY GRANTS ]\n  ON STAGE <stage_name>\n  [ COMMENT = '<string_literal>' ]\n\n-- Dynamic table\nCREATE [ OR REPLACE ] STREAM [IF NOT EXISTS]\n  <name>\n  [ [ WITH ] TAG ( <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' , ... ] ) ]\n  [ COPY GRANTS ]\n  ON DYNAMIC TABLE <table_name>\n  [ COMMENT = '<string_literal>' ]\n\n-- View\nCREATE [ OR REPLACE ] STREAM [IF NOT EXISTS]\n  <name>\n  [ [ WITH ] TAG ( <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' , ... ] ) ]\n  [ COPY GRANTS ]\n  ON VIEW <view_name>\n  [ { AT | BEFORE } ( { TIMESTAMP => <timestamp> | OFFSET => <time_difference> | STATEMENT => <id> | STREAM => '<name>' } ) ]\n  [ APPEND_ONLY = TRUE | FALSE ]\n  [ SHOW_INITIAL_ROWS = TRUE | FALSE ]\n  [ COMMENT = '<string_literal>' ]",
    "example": "CREATE STREAM mystream ON TABLE mytable;\n\nCREATE STREAM mystream ON TABLE mytable BEFORE (TIMESTAMP => TO_TIMESTAMP(40*365*86400));\n\nCREATE STREAM mystream ON TABLE mytable AT (TIMESTAMP => TO_TIMESTAMP_TZ('02/02/2019 01:02:03', 'mm/dd/yyyy hh24:mi:ss'));\n\nCREATE STREAM mystream ON TABLE mytable AT(OFFSET => -60*5);\n\nCREATE STREAM mystream ON TABLE mytable AT(STREAM => 'oldstream');\n\nCREATE OR REPLACE STREAM mystream ON TABLE mytable AT(STREAM => 'mystream');\n\nCREATE STREAM mystream ON TABLE mytable BEFORE(STATEMENT => '8e5d0ca9-005e-44e6-b858-a8f5b37c5726');\n\nCREATE STREAM mystream ON VIEW myview;\n\n-- Create an external table that points to the MY_EXT_STAGE stage.\n-- The external table is partitioned by the date (in YYYY/MM/DD format) in the file path.\nCREATE EXTERNAL TABLE my_ext_table (\n  date_part date as to_date(substr(metadata$filename, 1, 10), 'YYYY/MM/DD'),\n  ts timestamp AS (value:time::timestamp),\n  user_id varchar AS (value:userId::varchar),\n  color varchar AS (value:color::varchar)\n) PARTITION BY (date_part)\n  LOCATION=@my_ext_stage\n  AUTO_REFRESH = false\n  FILE_FORMAT=(TYPE=JSON);\n\n-- Create a stream on the external table\nCREATE STREAM my_ext_table_stream ON EXTERNAL TABLE my_ext_table INSERT_ONLY = TRUE;\n\n-- Execute SHOW streams\n-- The MODE column indicates that the new stream is an INSERT_ONLY stream\nSHOW STREAMS;\n+-------------------------------+------------------------+---------------+-------------+--------------+-----------+------------------------------------+-------+-------+-------------+\n| created_on                    | name                   | database_name | schema_name | owner        | comment   | table_name                         | type  | stale | mode        |\n|-------------------------------+------------------------+---------------+-------------+--------------+-----------+------------------------------------+-------+-------+-------------|\n| 2020-08-02 05:13:20.174 -0800 | MY_EXT_TABLE_STREAM    | MYDB          | PUBLIC      | MYROLE       |           | MYDB.PUBLIC.EXTTABLE_S3_PART       | DELTA | false | INSERT_ONLY |\n+-------------------------------+------------------------+---------------+-------------+--------------+-----------+------------------------------------+-------+-------+-------------+\n\n-- Add a file named '2020/08/05/1408/log-08051409.json' to the stage using the appropriate tool for the cloud storage service.\n\n-- Manually refresh the external table metadata.\nALTER EXTERNAL TABLE my_ext_table REFRESH;\n\n-- Query the external table stream.\n-- The stream indicates that the rows in the added JSON file were recorded in the external table metadata.\nSELECT * FROM my_ext_table_stream;\n+----------------------------------------+------------+-------------------------+---------+-------+-----------------+-------------------+-----------------+---------------------------------------------+\n| VALUE                                  | DATE_PART  | TS                      | USER_ID | COLOR | METADATA$ACTION | METADATA$ISUPDATE | METADATA$ROW_ID | METADATA$FILENAME                           |\n|----------------------------------------+------------+-------------------------+---------+-------+-----------------+-------------------+-----------------+---------------------------------------------|\n| {                                      | 2020-08-05 | 2020-08-05 15:57:01.000 | user25  | green | INSERT          | False             |                 | test/logs/2020/08/05/1408/log-08051409.json |\n|   \"color\": \"green\",                    |            |                         |         |       |                 |                   |                 |                                             |\n|   \"time\": \"2020-08-05 15:57:01-07:00\", |            |                         |         |       |                 |                   |                 |                                             |\n|   \"userId\": \"user25\"                   |            |                         |         |       |                 |                   |                 |                                             |\n| }                                      |            |                         |         |       |                 |                   |                 |                                             |\n| {                                      | 2020-08-05 | 2020-08-05 15:58:02.000 | user56  | brown | INSERT          | False             |                 | test/logs/2020/08/05/1408/log-08051409.json |\n|   \"color\": \"brown\",                    |            |                         |         |       |                 |                   |                 |                                             |\n|   \"time\": \"2020-08-05 15:58:02-07:00\", |            |                         |         |       |                 |                   |                 |                                             |\n|   \"userId\": \"user56\"                   |            |                         |         |       |                 |                   |                 |                                             |\n| }                                      |            |                         |         |       |                 |                   |                 |                                             |\n+----------------------------------------+------------+-------------------------+---------+-------+-----------------+-------------------+-----------------+---------------------------------------------+\n\nCREATE STREAM dirtable_mystage_s ON STAGE mystage;\n\nALTER STAGE mystage REFRESH;\n\nSELECT * FROM dirtable_mystage_s;\n\n+-------------------+--------+-------------------------------+----------------------------------+----------------------------------+-------------------------------------------------------------------------------------------+-----------------+-------------------+-----------------+\n| RELATIVE_PATH     | SIZE   | LAST_MODIFIED                 | MD5                              | ETAG                             | FILE_URL                                                                                  | METADATA$ACTION | METADATA$ISUPDATE | METADATA$ROW_ID |\n|-------------------+--------+-------------------------------+----------------------------------+----------------------------------+-------------------------------------------------------------------------------------------+-----------------+-------------------+-----------------|\n| file1.csv.gz      |   1048 | 2021-05-14 06:09:08.000 -0700 | c98f600c492c39bef249e2fcc7a4b6fe | c98f600c492c39bef249e2fcc7a4b6fe | https://myaccount.snowflakecomputing.com/api/files/MYDB/MYSCHEMA/MYSTAGE/file1%2ecsv%2egz | INSERT          | False             |                 |\n| file2.csv.gz      |   3495 | 2021-05-14 06:09:09.000 -0700 | 7f1a4f98ef4c7c42a2974504d11b0e20 | 7f1a4f98ef4c7c42a2974504d11b0e20 | https://myaccount.snowflakecomputing.com/api/files/MYDB/MYSCHEMA/MYSTAGE/file2%2ecsv%2egz | INSERT          | False             |                 |\n+-------------------+--------+-------------------------------+----------------------------------+----------------------------------+-------------------------------------------------------------------------------------------+-----------------+-------------------+-----------------+"
},
{
    "function_name": "CREATE STORAGE INTEGRATION",
    "summary": "Creates a new storage integration in the account or replaces an existing integration.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-storage-integration",
    "title": "CREATE STORAGE INTEGRATION",
    "description": "Creates a new storage integration in the account or replaces an existing integration.",
    "syntax": "CREATE [ OR REPLACE ] STORAGE INTEGRATION [IF NOT EXISTS]\n  <name>\n  TYPE = EXTERNAL_STAGE\n  cloudProviderParams\n  ENABLED = { TRUE | FALSE }\n  STORAGE_ALLOWED_LOCATIONS = ('<cloud>://<bucket>/<path>/' [ , '<cloud>://<bucket>/<path>/' ... ] )\n  [ STORAGE_BLOCKED_LOCATIONS = ('<cloud>://<bucket>/<path>/' [ , '<cloud>://<bucket>/<path>/' ... ] ) ]\n  [ COMMENT = '<string_literal>' ]",
    "example": "CREATE STORAGE INTEGRATION s3_int\n  TYPE = EXTERNAL_STAGE\n  STORAGE_PROVIDER = 'S3'\n  STORAGE_AWS_ROLE_ARN = 'arn:aws:iam::001234567890:role/myrole'\n  ENABLED = TRUE\n  STORAGE_ALLOWED_LOCATIONS = ('s3://mybucket1/path1/', 's3://mybucket2/path2/');\n\nCREATE STORAGE INTEGRATION gcs_int\n  TYPE = EXTERNAL_STAGE\n  STORAGE_PROVIDER = 'GCS'\n  ENABLED = TRUE\n  STORAGE_ALLOWED_LOCATIONS = ('gcs://mybucket1/path1/', 'gcs://mybucket2/path2/');\n\nCREATE STORAGE INTEGRATION azure_int\n  TYPE = EXTERNAL_STAGE\n  STORAGE_PROVIDER = 'AZURE'\n  ENABLED = TRUE\n  AZURE_TENANT_ID = '<tenant_id>'\n  STORAGE_ALLOWED_LOCATIONS = ('azure://myaccount.blob.core.windows.net/mycontainer/path1/', 'azure://myaccount.blob.core.windows.net/mycontainer/path2/');\n\nCREATE STORAGE INTEGRATION s3_int\n  TYPE = EXTERNAL_STAGE\n  STORAGE_PROVIDER = 'S3'\n  STORAGE_AWS_ROLE_ARN = 'arn:aws:iam::001234567890:role/myrole'\n  ENABLED = TRUE\n  STORAGE_ALLOWED_LOCATIONS = ('*')\n  STORAGE_BLOCKED_LOCATIONS = ('s3://mybucket3/path3/', 's3://mybucket4/path4/');\n\nCREATE STORAGE INTEGRATION gcs_int\n  TYPE = EXTERNAL_STAGE\n  STORAGE_PROVIDER = 'GCS'\n  ENABLED = TRUE\n  STORAGE_ALLOWED_LOCATIONS = ('*')\n  STORAGE_BLOCKED_LOCATIONS = ('gcs://mybucket3/path3/', 'gcs://mybucket4/path4/');\n\nCREATE STORAGE INTEGRATION azure_int\n  TYPE = EXTERNAL_STAGE\n  STORAGE_PROVIDER = 'AZURE'\n  ENABLED = TRUE\n  AZURE_TENANT_ID = 'a123b4c5-1234-123a-a12b-1a23b45678c9'\n  STORAGE_ALLOWED_LOCATIONS = ('*')\n  STORAGE_BLOCKED_LOCATIONS = ('azure://myaccount.blob.core.windows.net/mycontainer/path3/', 'azure://myaccount.blob.core.windows.net/mycontainer/path4/');"
},
{
    "function_name": "CREATE STAGE",
    "summary": "Creates a new named internal or external stage to use for loading data from files into Snowflake tables and unloading data from tables into files.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-stage",
    "title": "CREATE STAGE",
    "description": "Creates a new named",
    "syntax": "-- Internal stage\nCREATE [ OR REPLACE ] [ { TEMP | TEMPORARY } ] STAGE [ IF NOT EXISTS ] <internal_stage_name>\n    internalStageParams\n    directoryTableParams\n  [ FILE_FORMAT = ( { FORMAT_NAME = '<file_format_name>' | TYPE = { CSV | JSON | AVRO | ORC | PARQUET | XML | CUSTOM } [ formatTypeOptions ] } ) ]\n  [ COMMENT = '<string_literal>' ]\n  [ [ WITH ] TAG ( <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' , ... ] ) ]\n\n-- External stage\nCREATE [ OR REPLACE ] [ { TEMP | TEMPORARY } ] STAGE [ IF NOT EXISTS ] <external_stage_name>\n    externalStageParams\n    directoryTableParams\n  [ FILE_FORMAT = ( { FORMAT_NAME = '<file_format_name>' | TYPE = { CSV | JSON | AVRO | ORC | PARQUET | XML | CUSTOM } [ formatTypeOptions ] } ) ]\n  [ COMMENT = '<string_literal>' ]\n  [ [ WITH ] TAG ( <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' , ... ] ) ]",
    "example": "CREATE STAGE my_int_stage\n  ENCRYPTION = (TYPE = 'SNOWFLAKE_SSE');\n\nCREATE TEMPORARY STAGE my_temp_int_stage;\n\nCREATE TEMPORARY STAGE my_int_stage\n  FILE_FORMAT = my_csv_format;\n\nCREATE STAGE mystage\n  DIRECTORY = (ENABLE = TRUE)\n  FILE_FORMAT = myformat;\n\nCREATE STAGE my_ext_stage\n  URL='s3://load/files/'\n  STORAGE_INTEGRATION = myint;\n\nCREATE STAGE my_ext_stage1\n  URL='s3://load/files/'\n  CREDENTIALS=(AWS_KEY_ID='1a2b3c' AWS_SECRET_KEY='4x5y6z');\n\nCREATE STAGE my_ext_stage2\n  URL='s3://load/encrypted_files/'\n  CREDENTIALS=(AWS_KEY_ID='1a2b3c' AWS_SECRET_KEY='4x5y6z')\n  ENCRYPTION=(MASTER_KEY = 'eSx...');\n\nCREATE STAGE my_ext_stage3\n  URL='s3://load/encrypted_files/'\n  CREDENTIALS=(AWS_KEY_ID='1a2b3c' AWS_SECRET_KEY='4x5y6z')\n  ENCRYPTION=(TYPE='AWS_SSE_KMS' KMS_KEY_ID = 'aws/key');\n\nCREATE STAGE my_ext_stage3\n  URL='s3://load/encrypted_files/'\n  CREDENTIALS=(AWS_ROLE='arn:aws:iam::001234567890:role/mysnowflakerole')\n  ENCRYPTION=(TYPE='AWS_SSE_KMS' KMS_KEY_ID = 'aws/key');\n\nCREATE STAGE mystage\n  URL='s3://load/files/'\n  STORAGE_INTEGRATION = my_storage_int\n  DIRECTORY = (\n    ENABLE = true\n    AUTO_REFRESH = true\n  );\n\nCREATE STAGE my_ext_stage\n  URL='gcs://load/files/'\n  STORAGE_INTEGRATION = myint;\n\nCREATE STAGE mystage\n  URL='gcs://load/files/'\n  STORAGE_INTEGRATION = my_storage_int\n  DIRECTORY = (\n    ENABLE = true\n    AUTO_REFRESH = true\n    NOTIFICATION_INTEGRATION = 'MY_NOTIFICATION_INT'\n  );\n\nCREATE STAGE my_ext_stage2\n  URL='gcs://load/encrypted_files/'\n  STORAGE_INTEGRATION = my_storage_int\n  ENCRYPTION=(TYPE = 'GCS_SSE_KMS' KMS_KEY_ID = '{a1b2c3});\n\nCREATE STAGE my_ext_stage\n  URL='azure://myaccount.blob.core.windows.net/load/files/'\n  STORAGE_INTEGRATION = myint;\n\nCREATE STAGE mystage\n  URL='azure://myaccount.blob.core.windows.net/mycontainer/files/'\n  CREDENTIALS=(AZURE_SAS_TOKEN='?sv=2016-05-31&ss=b&srt=sco&sp=rwdl&se=2018-06-27T10:05:50Z&st=2017-06-27T02:05:50Z&spr=https,http&sig=bgqQwoXwxzuD2GJfagRg7VOS8hzNr3QLT7rhS8OFRLQ%3D')\n  ENCRYPTION=(TYPE='AZURE_CSE' MASTER_KEY = 'kPx...');\n\nCREATE STAGE mystage\n  URL='azure://myaccount.blob.core.windows.net/load/files/'\n  STORAGE_INTEGRATION = my_storage_int\n  DIRECTORY = (\n    ENABLE = true\n    AUTO_REFRESH = true\n    NOTIFICATION_INTEGRATION = 'MY_NOTIFICATION_INT'\n  );\n\nCREATE OR ALTER STAGE my_int_stage\n  COMMENT='my_comment'\n  ;\n\nCREATE OR ALTER STAGE my_int_stage\n  DIRECTORY=(ENABLE=true);\n\nCREATE OR ALTER STAGE my_ext_stage\n  URL='s3://load/files/'\n  CREDENTIALS=(AWS_KEY_ID='1a2b3c' AWS_SECRET_KEY='4x5y6z');\n\nCREATE OR ALTER STAGE my_ext_stage\n  URL='s3://load/files/'\n  CREDENTIALS=(AWS_KEY_ID='1a2b3c' AWS_SECRET_KEY='4x5y6z')\n  DIRECTORY=(ENABLE=true);"
},
{
    "function_name": "CREATE SNAPSHOT",
    "summary": "Creates or replaces a snapshot of a named volume from the specified service instance.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-snapshot",
    "title": "CREATE SNAPSHOT",
    "description": "",
    "syntax": "CREATE [ OR REPLACE ] SNAPSHOT [ IF NOT EXISTS ] <name>\n  FROM SERVICE <service_name>\n  VOLUME \"<volume_name>\"\n  INSTANCE <instance_id>\n  [ COMMENT = '<string_literal>']\n  [ [ WITH ] TAG ( <tag_name> = '<tag_value>' [ , ... ] ) ]",
    "example": "CREATE SNAPSHOT snapshot_0\n  FROM SERVICE example_service\n  VOLUME \"data\"\n  INSTANCE 0\n  COMMENT='new snapshot';"
},
{
    "function_name": "CREATE SHARE",
    "summary": "Creates a new, empty share.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-share",
    "title": "CREATE SHARE",
    "description": "",
    "syntax": "CREATE [ OR REPLACE ] SHARE [ IF NOT EXISTS ] <name>\n  [ COMMENT = '<string_literal>' ]",
    "example": "CREATE SHARE sales_s;\n\n+-----------------------------------------+\n| status                                  |\n|-----------------------------------------|\n| Share SALES_S successfully created.     |\n+-----------------------------------------+"
},
{
    "function_name": "CREATE SESSION POLICY",
    "summary": "Creates a new session policy or replaces an existing session policy.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-session-policy",
    "title": "CREATE SESSION POLICY",
    "description": "",
    "syntax": "CREATE [OR REPLACE] SESSION POLICY [IF NOT EXISTS] <name>\n  [ SESSION_IDLE_TIMEOUT_MINS = <integer> ]\n  [ SESSION_UI_IDLE_TIMEOUT_MINS = <integer> ]\n  [ ALLOWED_SECONDARY_ROLES = ( [ { 'ALL' | <role_name> [ , <role_name> ... ] } ] ) ]\n  [ COMMENT = '<string_literal>' ]",
    "example": "CREATE SESSION POLICY session_policy_prod_1\n  SESSION_IDLE_TIMEOUT_MINS = 30\n  SESSION_UI_IDLE_TIMEOUT_MINS = 30\n  COMMENT = 'session policy for use in the prod_1 environment'\n;"
},
{
    "function_name": "CREATE SERVICE",
    "summary": "Creates a new Snowpark Container Services service in the current schema.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-service",
    "title": "CREATE SERVICE",
    "description": "",
    "syntax": "CREATE SERVICE [ IF NOT EXISTS ] <name>\n  IN COMPUTE POOL <compute_pool_name>\n  {\n     fromSpecification\n     | fromSpecificationTemplate\n  }\n  [ AUTO_SUSPEND_SECS = <num> ]\n  [ EXTERNAL_ACCESS_INTEGRATIONS = ( <EAI_name> [ , ... ] ) ]\n  [ AUTO_RESUME = { TRUE | FALSE } ]\n  [ MIN_INSTANCES = <num> ]\n  [ MIN_READY_INSTANCES = <num> ]\n  [ MAX_INSTANCES = <num> ]\n  [ LOG_LEVEL = '<log_level>' ]\n  [ QUERY_WAREHOUSE = <warehouse_name> ]\n  [ [ WITH ] TAG ( <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' , ... ] ) ]\n  [ COMMENT = '{string_literal}']",
    "example": "CREATE SERVICE echo_service\n  IN COMPUTE POOL tutorial_compute_pool\n  FROM @tutorial_stage\n  SPECIFICATION_FILE='echo_spec.yaml'\n  MIN_INSTANCES=2\n  MAX_INSTANCES=2"
},
{
    "function_name": "CREATE SEQUENCE",
    "summary": "Creates a new sequence, which can be used for generating sequential, unique numbers.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-sequence",
    "title": "CREATE SEQUENCE",
    "description": "Creates a new sequence, which can be used for generating sequential, unique numbers.",
    "syntax": "CREATE [ OR REPLACE ] SEQUENCE [ IF NOT EXISTS ] <name>\n  [ WITH ]\n  [ START [ WITH ] [ = ] <initial_value> ]\n  [ INCREMENT [ BY ] [ = ] <sequence_interval> ]\n  [ { ORDER | NOORDER } ]\n  [ COMMENT = '<string_literal>' ]",
    "example": "CREATE OR REPLACE SEQUENCE seq_01 START = 1 INCREMENT = 1;\nCREATE OR REPLACE TABLE sequence_test_table (i INTEGER);\n\nSELECT seq_01.nextval;\n+---------+\n| NEXTVAL |\n|---------|\n|       1 |\n+---------+\n\nSELECT seq_01.nextval;\n+---------+\n| NEXTVAL |\n|---------|\n|       2 |\n+---------+\n\nINSERT INTO sequence_test_table (i) VALUES (seq_01.nextval);\n\nSELECT i FROM sequence_test_table;\n+---+\n| I |\n|---|\n| 3 |\n+---+\n\nCREATE OR REPLACE SEQUENCE seq_5 START = 1 INCREMENT = 5;\n\nSELECT seq_5.nextval a, seq_5.nextval b, seq_5.nextval c, seq_5.nextval d;\n+---+---+----+----+\n| A | B |  C |  D |\n|---+---+----+----|\n| 1 | 6 | 11 | 16 |\n+---+---+----+----+\n\nSELECT seq_5.nextval a, seq_5.nextval b, seq_5.nextval c, seq_5.nextval d;\n+----+----+----+----+\n|  A |  B |  C |  D |\n|----+----+----+----|\n| 36 | 41 | 46 | 51 |\n+----+----+----+----+\n\nCREATE OR REPLACE SEQUENCE seq90;\nCREATE OR REPLACE TABLE sequence_demo (i INTEGER DEFAULT seq90.nextval, dummy SMALLINT);\nINSERT INTO sequence_demo (dummy) VALUES (0);\n\n-- Keep doubling the number of rows:\nINSERT INTO sequence_demo (dummy) SELECT dummy FROM sequence_demo;\nINSERT INTO sequence_demo (dummy) SELECT dummy FROM sequence_demo;\nINSERT INTO sequence_demo (dummy) SELECT dummy FROM sequence_demo;\nINSERT INTO sequence_demo (dummy) SELECT dummy FROM sequence_demo;\nINSERT INTO sequence_demo (dummy) SELECT dummy FROM sequence_demo;\nINSERT INTO sequence_demo (dummy) SELECT dummy FROM sequence_demo;\nINSERT INTO sequence_demo (dummy) SELECT dummy FROM sequence_demo;\nINSERT INTO sequence_demo (dummy) SELECT dummy FROM sequence_demo;\nINSERT INTO sequence_demo (dummy) SELECT dummy FROM sequence_demo;\nINSERT INTO sequence_demo (dummy) SELECT dummy FROM sequence_demo;\n\nSELECT i FROM sequence_demo ORDER BY i LIMIT 10;\n+----+\n|  I |\n|----|\n|  1 |\n|  2 |\n|  3 |\n|  4 |\n|  5 |\n|  6 |\n|  7 |\n|  8 |\n|  9 |\n| 10 |\n+----+\n\nSELECT COUNT(i), COUNT(DISTINCT i) FROM sequence_demo;\n+----------+-------------------+\n| COUNT(I) | COUNT(DISTINCT I) |\n|----------+-------------------|\n|     1024 |              1024 |\n+----------+-------------------+"
},
{
    "function_name": "CREATE SEMANTIC VIEW",
    "summary": "Creates a new semantic view in the current/specified schema.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-semantic-view",
    "title": "CREATE SEMANTIC VIEW",
    "description": "Creates a new",
    "syntax": "CREATE [ OR REPLACE ] SEMANTIC VIEW [ IF NOT EXISTS ] <name>\n  TABLES ( logicalTable [ , ... ] )\n  [ RELATIONSHIPS ( relationshipDef [ , ... ] ) ]\n  [ FACTS ( semanticExpression [ , ... ] ) ]\n  [ DIMENSIONS ( semanticExpression [ , ... ] ) ]\n  [ METRICS ( semanticExpression [ , ... ] ) ]\n  [ COMMENT = '<comment_about_semantic_view>' ]\n  [ COPY GRANTS ]",
    "example": ""
},
{
    "function_name": "CREATE SECURITY INTEGRATION (SCIM)",
    "summary": "Creates a new SCIM security integration in the account or replaces an existing integration.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-security-integration-scim",
    "title": "CREATE SECURITY INTEGRATION (SCIM)",
    "description": "",
    "syntax": "CREATE [ OR REPLACE ] SECURITY INTEGRATION [ IF NOT EXISTS ]\n    <name>\n    TYPE = SCIM\n    ENABLED = { TRUE | FALSE }\n    SCIM_CLIENT = { 'OKTA' | 'AZURE' | 'GENERIC' }\n    RUN_AS_ROLE = { 'OKTA_PROVISIONER' | 'AAD_PROVISIONER' | 'GENERIC_SCIM_PROVISIONER' }\n    [ NETWORK_POLICY = '<network_policy>' ]\n    [ SYNC_PASSWORD = { TRUE | FALSE } ]\n    [ COMMENT = '<string_literal>' ]",
    "example": "CREATE OR REPLACE SECURITY INTEGRATION okta_provisioning\n    TYPE = scim\n    SCIM_CLIENT = 'AZURE'\n    RUN_AS_ROLE = 'AAD_PROVISIONER';\n\nDESC SECURITY INTEGRATION aad_provisioning;\n\nCREATE OR REPLACE SECURITY INTEGRATION okta_provisioning\n    TYPE = scim\n    SCIM_CLIENT = 'OKTA'\n    RUN_AS_ROLE = 'OKTA_PROVISIONER';\n\nDESC SECURITY INTEGRATION okta_provisioning;"
},
{
    "function_name": "CREATE SECURITY INTEGRATION (SAML2)",
    "summary": "Creates a new SAML2 security integration in the account or replaces an existing integration.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-security-integration-saml2",
    "title": "CREATE SECURITY INTEGRATION (SAML2)",
    "description": "Creates a new SAML2 security integration in the account or replaces an existing integration. A SAML2 security integration provides\nsingle sign-on (SSO) workflows by creating an interface between Snowflake and a third-party Identity Provider (IdP).",
    "syntax": "CREATE [ OR REPLACE ] SECURITY INTEGRATION [ IF NOT EXISTS ]\n    <name>\n    TYPE = SAML2\n    ENABLED = { TRUE | FALSE }\n    SAML2_ISSUER = '<string_literal>'\n    SAML2_SSO_URL = '<string_literal>'\n    SAML2_PROVIDER = '<string_literal>'\n    SAML2_X509_CERT = '<string_literal>'\n    [ ALLOWED_USER_DOMAINS = ( '<string_literal>' [ , '<string_literal>' , ... ] ) ]\n    [ ALLOWED_EMAIL_PATTERNS = ( '<string_literal>' [ , '<string_literal>' , ... ] ) ]\n    [ SAML2_SP_INITIATED_LOGIN_PAGE_LABEL = '<string_literal>' ]\n    [ SAML2_ENABLE_SP_INITIATED = TRUE | FALSE ]\n    [ SAML2_SNOWFLAKE_X509_CERT = '<string_literal>' ]\n    [ SAML2_SIGN_REQUEST = TRUE | FALSE ]\n    [ SAML2_REQUESTED_NAMEID_FORMAT = '<string_literal>' ]\n    [ SAML2_POST_LOGOUT_REDIRECT_URL = '<string_literal>' ]\n    [ SAML2_FORCE_AUTHN = TRUE | FALSE ]\n    [ SAML2_SNOWFLAKE_ISSUER_URL = '<string_literal>' ]\n    [ SAML2_SNOWFLAKE_ACS_URL = '<string_literal>' ]\n    [ COMMENT = '<string_literal>' ]",
    "example": ""
},
{
    "function_name": "CREATE SECURITY INTEGRATION (Snowflake OAuth)",
    "summary": "Creates a new Snowflake OAuth security integration in the account or replaces an existing integration.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-security-integration-oauth-snowflake",
    "title": "CREATE SECURITY INTEGRATION (Snowflake OAuth)",
    "description": "Creates a new Snowflake OAuth security integration in the account or replaces an existing integration. A Snowflake OAuth security\nintegration enables clients that support OAuth to redirect users to an authorization page and generate access tokens (and optionally,\nrefresh tokens) for access to Snowflake.",
    "syntax": "CREATE [ OR REPLACE ] SECURITY INTEGRATION [IF NOT EXISTS]\n  <name>\n  TYPE = OAUTH\n  OAUTH_CLIENT = <partner_application>\n  OAUTH_REDIRECT_URI = '<uri>'  -- Required when OAUTH_CLIENT=LOOKER\n  [ ENABLED = { TRUE | FALSE } ]\n  [ OAUTH_ISSUE_REFRESH_TOKENS = TRUE | FALSE ]\n  [ OAUTH_REFRESH_TOKEN_VALIDITY = <integer> ]\n  [ OAUTH_USE_SECONDARY_ROLES = IMPLICIT | NONE ]\n  [ BLOCKED_ROLES_LIST = ( '<role_name>' [ , '<role_name>' , ... ] ) ]\n  [ COMMENT = '<string_literal>' ]",
    "example": "CREATE SECURITY INTEGRATION td_oauth_int1\n  TYPE = oauth\n  ENABLED = true\n  OAUTH_CLIENT = tableau_desktop;\n\nDESC SECURITY INTEGRATION td_oauth_int1;\n\nCREATE SECURITY INTEGRATION td_oauth_int2\n  TYPE = oauth\n  ENABLED = true\n  OAUTH_CLIENT = tableau_desktop\n  OAUTH_REFRESH_TOKEN_VALIDITY = 36000\n  BLOCKED_ROLES_LIST = ('SYSADMIN');\n\nCREATE SECURITY INTEGRATION ts_oauth_int1\n  TYPE = oauth\n  ENABLED = true\n  OAUTH_CLIENT = tableau_server;\n\nDESC SECURITY INTEGRATION ts_oauth_int1;\n\nCREATE SECURITY INTEGRATION ts_oauth_int2\n  TYPE = oauth\n  ENABLED = true\n  OAUTH_CLIENT = tableau_server\n  OAUTH_REFRESH_TOKEN_VALIDITY = 86400\n  BLOCKED_ROLES_LIST = ('SYSADMIN');\n\nCREATE SECURITY INTEGRATION oauth_kp_int\n  TYPE = oauth\n  ENABLED = true\n  OAUTH_CLIENT = custom\n  OAUTH_CLIENT_TYPE = 'CONFIDENTIAL'\n  OAUTH_REDIRECT_URI = 'https://localhost.com'\n  OAUTH_ISSUE_REFRESH_TOKENS = TRUE\n  OAUTH_REFRESH_TOKEN_VALIDITY = 86400\n  PRE_AUTHORIZED_ROLES_LIST = ('MYROLE')\n  BLOCKED_ROLES_LIST = ('SYSADMIN');"
},
{
    "function_name": "CREATE SECURITY INTEGRATION (External OAuth)",
    "summary": "Creates a new External OAuth security integration in the account or replaces an existing integration.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-security-integration-oauth-external",
    "title": "CREATE SECURITY INTEGRATION (External OAuth)",
    "description": "",
    "syntax": "CREATE [ OR REPLACE ] SECURITY INTEGRATION [IF NOT EXISTS]\n  <name>\n  TYPE = EXTERNAL_OAUTH\n  ENABLED = { TRUE | FALSE }\n  EXTERNAL_OAUTH_TYPE = { OKTA | AZURE | PING_FEDERATE | CUSTOM }\n  EXTERNAL_OAUTH_ISSUER = '<string_literal>'\n  EXTERNAL_OAUTH_TOKEN_USER_MAPPING_CLAIM = { '<string_literal>' | ('<string_literal>' [ , '<string_literal>' , ... ] ) }\n  EXTERNAL_OAUTH_SNOWFLAKE_USER_MAPPING_ATTRIBUTE = { 'LOGIN_NAME' | 'EMAIL_ADDRESS' }\n  [ EXTERNAL_OAUTH_JWS_KEYS_URL = { '<string_literal>' | ('<string_literal>' [ , '<string_literal>' , ... ] ) } ]\n  [ EXTERNAL_OAUTH_BLOCKED_ROLES_LIST = ( '<role_name>' [ , '<role_name>' , ... ] ) ]\n  [ EXTERNAL_OAUTH_ALLOWED_ROLES_LIST = ( '<role_name>' [ , '<role_name>' , ... ] ) ]\n  [ EXTERNAL_OAUTH_RSA_PUBLIC_KEY = <public_key1> ]\n  [ EXTERNAL_OAUTH_RSA_PUBLIC_KEY_2 = <public_key2> ]\n  [ EXTERNAL_OAUTH_AUDIENCE_LIST = { '<string_literal>' | ('<string_literal>' [ , '<string_literal>' , ... ] ) } ]\n  [ EXTERNAL_OAUTH_ANY_ROLE_MODE = { DISABLE | ENABLE | ENABLE_FOR_PRIVILEGE } ]\n  [ EXTERNAL_OAUTH_SCOPE_DELIMITER = '<string_literal>' ]\n  [ EXTERNAL_OAUTH_SCOPE_MAPPING_ATTRIBUTE = '<string_literal>' ]\n  [ COMMENT = '<string_literal>' ]",
    "example": "CREATE SECURITY INTEGRATION external_oauth_azure_1\n    TYPE = external_oauth\n    ENABLED = true\n    EXTERNAL_OAUTH_TYPE = azure\n    EXTERNAL_OAUTH_ISSUER = '<AZURE_AD_ISSUER>'\n    EXTERNAL_OAUTH_JWS_KEYS_URL = '<AZURE_AD_JWS_KEY_ENDPOINT>'\n    EXTERNAL_OAUTH_TOKEN_USER_MAPPING_CLAIM = 'upn'\n    EXTERNAL_OAUTH_SNOWFLAKE_USER_MAPPING_ATTRIBUTE = 'login_name';\n\nDESC SECURITY INTEGRATION external_oauth_azure_1;\n\nCREATE SECURITY INTEGRATION external_oauth_okta_1\n    TYPE = external_oauth\n    ENABLED = true\n    EXTERNAL_OAUTH_TYPE = okta\n    EXTERNAL_OAUTH_ISSUER = '<OKTA_ISSUER>'\n    EXTERNAL_OAUTH_JWS_KEYS_URL = '<OKTA_JWS_KEY_ENDPOINT>'\n    EXTERNAL_OAUTH_TOKEN_USER_MAPPING_CLAIM = 'sub'\n    EXTERNAL_OAUTH_SNOWFLAKE_USER_MAPPING_ATTRIBUTE = 'login_name';\n\nDESC SECURITY INTEGRATION external_oauth_okta_1;"
},
{
    "function_name": "CREATE SECURITY INTEGRATION (AWS IAM Authentication)",
    "summary": "Creates a new security integration for external authentication using Amazon Web Services (AWS) Identity and Access Management (IAM).",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-security-integration-aws-iam",
    "title": "CREATE SECURITY INTEGRATION (AWS IAM Authentication)",
    "description": "Creates a new security integration for external authentication using Amazon Web Services (AWS) Identity and Access Management (IAM).",
    "syntax": "CREATE SECURITY INTEGRATION <name>\n  TYPE = API_AUTHENTICATION\n  AUTH_TYPE = AWS_IAM\n  AWS_ROLE_ARN = '<iam_role_arn>'\n  ENABLED = { TRUE | FALSE }\n  [ COMMENT = '<string_literal>' ]",
    "example": "CREATE SECURITY INTEGRATION aws_iam\n  TYPE = API_AUTHENTICATION\n  AUTH_TYPE = AWS_IAM\n  AWS_ROLE_ARN = 'arn:aws:iam::001234567890:role/myrole'\n  ENABLED = true;"
},
{
    "function_name": "CREATE SECURITY INTEGRATION (External API Authentication)",
    "summary": "Creates a new security integration for external API Authentication in the account or replaces an existing integration.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-security-integration-api-auth",
    "title": "CREATE SECURITY INTEGRATION (External API Authentication)",
    "description": "Creates a new security integration for external API Authentication in the account or replaces an existing integration.",
    "syntax": "CREATE SECURITY INTEGRATION <name>\n  TYPE = API_AUTHENTICATION\n  AUTH_TYPE = OAUTH2\n  ENABLED = { TRUE | FALSE }\n  [ OAUTH_TOKEN_ENDPOINT = '<string_literal>' ]\n  [ OAUTH_CLIENT_AUTH_METHOD = CLIENT_SECRET_POST ]\n  [ OAUTH_CLIENT_ID = '<string_literal>' ]\n  [ OAUTH_CLIENT_SECRET = '<string_literal>' ]\n  [ OAUTH_GRANT = 'CLIENT_CREDENTIALS']\n  [ OAUTH_ACCESS_TOKEN_VALIDITY = <integer> ]\n  [ OAUTH_ALLOWED_SCOPES = ( '<scope_1>' [ , '<scope_2>' ... ] ) ]\n  [ COMMENT = '<string_literal>' ]",
    "example": "CREATE SECURITY INTEGRATION servicenow_oauth\n  TYPE = API_AUTHENTICATION\n  AUTH_TYPE = OAUTH2\n  OAUTH_CLIENT_AUTH_METHOD = CLIENT_SECRET_POST\n  OAUTH_CLIENT_ID = 'sn-oauth-134o9erqfedlc'\n  OAUTH_CLIENT_SECRET = 'eb9vaXsrcEvrFdfcvCaoijhilj4fc'\n  OAUTH_TOKEN_ENDPOINT = 'https://myinstance.service-now.com/oauth_token.do'\n  ENABLED = TRUE;\n\nCREATE SECURITY INTEGRATION sharepoint_security_integration\n  TYPE = API_AUTHENTICATION\n  AUTH_TYPE = OAUTH2\n  OAUTH_CLIENT_AUTH_METHOD = CLIENT_SECRET_POST\n  OAUTH_CLIENT_ID = 'YOUR_CLIENT_ID'\n  OAUTH_CLIENT_SECRET = 'YOUR_CLIENT_SECRET'\n  OAUTH_GRANT = 'CLIENT_CREDENTIALS'\n  OAUTH_TOKEN_ENDPOINT = 'https://login.microsoftonline.com/YOUR_TENANT_ID/oauth2/v2.0/token'\n  OAUTH_ALLOWED_SCOPES = ('https://graph.microsoft.com/.default')\n  ENABLED = TRUE;"
},
{
    "function_name": "CREATE SECURITY INTEGRATION",
    "summary": "Creates a new security integration in the account or replaces an existing integration.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-security-integration",
    "title": "CREATE SECURITY INTEGRATION",
    "description": "Creates a new security integration in the account or replaces an existing integration. An integration is a Snowflake object that provides\nan interface between Snowflake and a third-party service.",
    "syntax": "CREATE [ OR REPLACE ] SECURITY INTEGRATION [ IF NOT EXISTS ]\n  <name>\n  TYPE = { API_AUTHENTICATION | EXTERNAL_OAUTH | OAUTH | SAML2 | SCIM }\n  ...",
    "example": ""
},
{
    "function_name": "CREATE SECRET",
    "summary": "Creates a new secret in the current or specified schema or replaces an existing secret.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-secret",
    "title": "CREATE SECRET",
    "description": "Creates a new secret in the current or specified schema or replaces an existing secret.",
    "syntax": "CREATE [ OR REPLACE ] SECRET [ IF NOT EXISTS ] <name>\n  TYPE = OAUTH2\n  API_AUTHENTICATION = <security_integration_name>\n  OAUTH_SCOPES = ( '<scope_1>' [ , '<scope_2>' ... ] )\n  [ COMMENT = '<string_literal>' ]",
    "example": "CREATE OR REPLACE SECRET mysecret\n  TYPE = OAUTH2\n  API_AUTHENTICATION = mysecurityintegration\n  OAUTH_SCOPES = ('useraccount')\n  COMMENT = 'secret for the service now connector'\n\nCREATE SECRET service_now_creds_oauth_code\n  TYPE = OAUTH2\n  OAUTH_REFRESH_TOKEN = '34n;vods4nQsdg09wee4qnfvadH'\n  OAUTH_REFRESH_TOKEN_EXPIRY_TIME = '2022-01-06 20:00:00'\n  API_AUTHENTICATION = sn_oauth;\n\nCREATE SECRET aws_secret\n  TYPE = CLOUD_PROVIDER_TOKEN\n  API_AUTHENTICATION = myawsiamintegration\n  ENABLED = TRUE;\n\nCREATE SECRET service_now_creds_pw\n  TYPE = password\n  USERNAME = 'jsmith1'\n  PASSWORD = 'W3dr@fg*7B1c4j';"
},
{
    "function_name": "CREATE SCHEMA",
    "summary": "Creates a new schema in the current database.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-schema",
    "title": "CREATE SCHEMA",
    "description": "Creates a new schema in the current database.",
    "syntax": "CREATE [ OR REPLACE ] [ TRANSIENT ] SCHEMA [ IF NOT EXISTS ] <name>\n  [ CLONE <source_schema>\n      [ { AT | BEFORE } ( { TIMESTAMP => <timestamp> | OFFSET => <time_difference> | STATEMENT => <id> } ) ]\n      [ IGNORE TABLES WITH INSUFFICIENT DATA RETENTION ]\n      [ IGNORE HYBRID TABLES ] ]\n  [ WITH MANAGED ACCESS ]\n  [ DATA_RETENTION_TIME_IN_DAYS = <integer> ]\n  [ MAX_DATA_EXTENSION_TIME_IN_DAYS = <integer> ]\n  [ EXTERNAL_VOLUME = <external_volume_name> ]\n  [ CATALOG = <catalog_integration_name> ]\n  [ REPLACE_INVALID_CHARACTERS = { TRUE | FALSE } ]\n  [ DEFAULT_DDL_COLLATION = '<collation_specification>' ]\n  [ STORAGE_SERIALIZATION_POLICY = { COMPATIBLE | OPTIMIZED } ]\n  [ CLASSIFICATION_PROFILE = '<classification_profile>' ]\n  [ COMMENT = '<string_literal>' ]\n  [ CATALOG_SYNC = '<snowflake_open_catalog_integration_name>' ]\n  [ [ WITH ] TAG ( <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' , ... ] ) ]\n  [ WITH CONTACT ( <purpose> = <contact_name> [ , <purpose> = <contact_name> ... ] ) ]",
    "example": "CREATE SCHEMA myschema;\n\nSHOW SCHEMAS;\n\n+-------------------------------+--------------------+------------+------------+---------------+--------------+-----------------------------------------------------------+---------+----------------+\n| created_on                    | name               | is_default | is_current | database_name | owner        | comment                                                   | options | retention_time |\n|-------------------------------+--------------------+------------+------------+---------------+--------------+-----------------------------------------------------------+---------+----------------|\n| 2018-12-10 09:34:02.127 -0800 | INFORMATION_SCHEMA | N          | N          | MYDB          |              | Views describing the contents of schemas in this database |         | 1              |\n| 2018-12-10 09:33:56.793 -0800 | MYSCHEMA           | N          | Y          | MYDB          | PUBLIC       |                                                           |         | 1              |\n| 2018-11-26 06:08:24.263 -0800 | PUBLIC             | N          | N          | MYDB          | PUBLIC       |                                                           |         | 1              |\n+-------------------------------+--------------------+------------+------------+---------------+--------------+-----------------------------------------------------------+---------+----------------+\n\nCREATE TRANSIENT SCHEMA tschema;\n\nSHOW SCHEMAS;\n\n+-------------------------------+--------------------+------------+------------+---------------+--------------+-----------------------------------------------------------+-----------+----------------+\n| created_on                    | name               | is_default | is_current | database_name | owner        | comment                                                   | options   | retention_time |\n|-------------------------------+--------------------+------------+------------+---------------+--------------+-----------------------------------------------------------+-----------+----------------|\n| 2018-12-10 09:34:02.127 -0800 | INFORMATION_SCHEMA | N          | N          | MYDB          |              | Views describing the contents of schemas in this database |           | 1              |\n| 2018-12-10 09:33:56.793 -0800 | MYSCHEMA           | N          | Y          | MYDB          | PUBLIC       |                                                           |           | 1              |\n| 2018-11-26 06:08:24.263 -0800 | PUBLIC             | N          | N          | MYDB          | PUBLIC       |                                                           |           | 1              |\n| 2018-12-10 09:35:32.326 -0800 | TSCHEMA            | N          | Y          | MYDB          | PUBLIC       |                                                           | TRANSIENT | 1              |\n+-------------------------------+--------------------+------------+------------+---------------+--------------+-----------------------------------------------------------+-----------+----------------+\n\nCREATE SCHEMA mschema WITH MANAGED ACCESS;\n\nSHOW SCHEMAS;\n\n+-------------------------------+--------------------+------------+------------+---------------+--------------+-----------------------------------------------------------+----------------+----------------+\n| created_on                    | name               | is_default | is_current | database_name | owner        | comment                                                   | options        | retention_time |\n|-------------------------------+--------------------+------------+------------+---------------+--------------+-----------------------------------------------------------+----------------+----------------|\n| 2018-12-10 09:34:02.127 -0800 | INFORMATION_SCHEMA | N          | N          | MYDB          |              | Views describing the contents of schemas in this database |                | 1              |\n| 2018-12-10 09:36:47.738 -0800 | MSCHEMA            | N          | Y          | MYDB          | ROLE1        |                                                           | MANAGED ACCESS | 1              |\n| 2018-12-10 09:33:56.793 -0800 | MYSCHEMA           | N          | Y          | MYDB          | PUBLIC       |                                                           |                | 1              |\n| 2018-11-26 06:08:24.263 -0800 | PUBLIC             | N          | N          | MYDB          | PUBLIC       |                                                           |                | 1              |\n| 2018-12-10 09:35:32.326 -0800 | TSCHEMA            | N          | Y          | MYDB          | PUBLIC       |                                                           | TRANSIENT      | 1              |\n+-------------------------------+--------------------+------------+------------+---------------+--------------+-----------------------------------------------------------+----------------+----------------+"
},
{
    "function_name": "CREATE ROW ACCESS POLICY",
    "summary": "Creates a new row access policy in the current/specified schema or replaces an existing row access policy.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-row-access-policy",
    "title": "CREATE ROW ACCESS POLICY",
    "description": "",
    "syntax": "CREATE [ OR REPLACE ] ROW ACCESS POLICY [ IF NOT EXISTS ] <name> AS\n( <arg_name> <arg_type> [ , ... ] ) RETURNS BOOLEAN -> <body>\n[ COMMENT = '<string_literal>' ]",
    "example": "create or replace row access policy rap_it as (empl_id varchar) returns boolean ->\n  case\n      when 'it_admin' = current_role() then true\n      else false\n  end\n;\n\nuse role securityadmin;\n\ncreate or replace row access policy rap_sales_manager_regions_1 as (sales_region varchar) returns boolean ->\n  'sales_executive_role' = current_role()\n      or exists (\n            select 1 from salesmanagerregions\n              where sales_manager = current_role()\n                and region = sales_region\n          )\n;\n\ncreate or replace row access policy rap_test2 as (n number, v varchar)\n  returns boolean -> true;"
},
{
    "function_name": "CREATE ROLE",
    "summary": "Create a new role or replace an existing role in the system.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-role",
    "title": "CREATE ROLE",
    "description": "Create a new role or replace an existing role in the system.",
    "syntax": "CREATE [ OR REPLACE ] ROLE [ IF NOT EXISTS ] <name>\n  [ COMMENT = '<string_literal>' ]\n  [ [ WITH ] TAG ( <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' , ... ] ) ]",
    "example": "CREATE ROLE myrole;"
},
{
    "function_name": "CREATE RESOURCE MONITOR",
    "summary": "Creates a new resource monitor.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-resource-monitor",
    "title": "CREATE RESOURCE MONITOR",
    "description": "Creates a new",
    "syntax": "CREATE [ OR REPLACE ] RESOURCE MONITOR [ IF NOT EXISTS ] <name> WITH\n                      [ CREDIT_QUOTA = <number> ]\n                      [ FREQUENCY = { MONTHLY | DAILY | WEEKLY | YEARLY | NEVER } ]\n                      [ START_TIMESTAMP = { <timestamp> | IMMEDIATELY } ]\n                      [ END_TIMESTAMP = <timestamp> ]\n                      [ NOTIFY_USERS = ( <user_name> [ , <user_name> , ... ] ) ]\n                      [ TRIGGERS triggerDefinition [ triggerDefinition ... ] ]",
    "example": "CREATE OR REPLACE RESOURCE MONITOR limiter\n  WITH CREDIT_QUOTA = 5000\n  TRIGGERS ON 75 PERCENT DO NOTIFY\n           ON 100 PERCENT DO SUSPEND\n           ON 110 PERCENT DO SUSPEND_IMMEDIATE;\n\nCREATE OR REPLACE RESOURCE MONITOR limiter\n  WITH CREDIT_QUOTA = 5000\n       NOTIFY_USERS = (JDOE, \"Jane Smith\", \"John Doe\")\n  TRIGGERS ON 75 PERCENT DO NOTIFY\n           ON 100 PERCENT DO SUSPEND\n           ON 110 PERCENT DO SUSPEND_IMMEDIATE;"
},
{
    "function_name": "CREATE PROVISIONED THROUGHPUT",
    "summary": "Creates a new Provisioned Throughput resource or replaces an existing one.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-provisioned-throughput",
    "title": "CREATE PROVISIONED THROUGHPUT",
    "description": "Creates a new",
    "syntax": "CREATE [ OR REPLACE ] PROVISIONED THROUGHPUT <name>\n    CLOUD_PROVIDER = '<cloud_provider>'\n    MODEL = '<model_name>'\n    PTUS = <num_ptus>\n    TERM_START = '<start_date>'\n    TERM_END = '<end_date>';",
    "example": ""
},
{
    "function_name": "CREATE REPLICATION GROUP",
    "summary": "Creates a new replication group of specified objects in the system.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-replication-group",
    "title": "CREATE REPLICATION GROUP",
    "description": "",
    "syntax": "CREATE REPLICATION GROUP [ IF NOT EXISTS ] <name>\n    OBJECT_TYPES = <object_type> [ , <object_type> , ... ]\n    [ ALLOWED_DATABASES = <db_name> [ , <db_name> , ... ] ]\n    [ ALLOWED_SHARES = <share_name> [ , <share_name> , ... ] ]\n    [ ALLOWED_INTEGRATION_TYPES = <integration_type_name> [ , <integration_type_name> , ... ] ]\n    ALLOWED_ACCOUNTS = <org_name>.<target_account_name> [ , <org_name>.<target_account_name> , ... ]\n    [ IGNORE EDITION CHECK ]\n    [ REPLICATION_SCHEDULE = '{ <num> MINUTE | USING CRON <expr> <time_zone> }' ]\n    [ [ WITH ] TAG ( <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' , ... ] ) ]\n    [ ERROR_INTEGRATION = <integration_name> ]",
    "example": "CREATE REPLICATION GROUP myrg\n    OBJECT_TYPES = DATABASES\n    ALLOWED_DATABASES = db1\n    ALLOWED_ACCOUNTS = myorg.myaccount2\n    REPLICATION_SCHEDULE = '10 MINUTE';\n\nCREATE REPLICATION GROUP myrg\n    AS REPLICA OF myorg.myaccount1.myrg;\n\nCREATE REPLICATION GROUP myrg\n    OBJECT_TYPES = DATABASES, SHARES\n    ALLOWED_DATABASES = db1\n    ALLOWED_SHARES = s1\n    ALLOWED_ACCOUNTS = myorg.myaccount2\n    REPLICATION_SCHEDULE = '10 MINUTE';\n\nCREATE REPLICATION GROUP myrg\n    AS REPLICA OF myorg.myaccount1.myrg;"
},
{
    "function_name": "CREATE PROJECTION POLICY",
    "summary": "Creates a new projection policy in the current/specified schema or replaces an existing projection policy.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-projection-policy",
    "title": "CREATE PROJECTION POLICY",
    "description": "",
    "syntax": "CREATE [ OR REPLACE ] PROJECTION POLICY [ IF NOT EXISTS ] <name>\n  AS () RETURNS PROJECTION_CONSTRAINT -> <body>\n  [ COMMENT = '<string_literal>' ]",
    "example": "CREATE OR REPLACE PROJECTION POLICY do_not_project AS ()\n  RETURNS PROJECTION_CONSTRAINT ->\n  PROJECTION_CONSTRAINT(ALLOW => false);\n\nCREATE OR REPLACE PROJECTION POLICY project_analyst_only AS ()\n  RETURNS PROJECTION_CONSTRAINT ->\n    CASE\n      WHEN CURRENT_ROLE() = 'ANALYST'\n        THEN PROJECTION_CONSTRAINT(ALLOW => true)\n      ELSE PROJECTION_CONSTRAINT(ALLOW => false, ENFORCEMENT => 'NULLIFY')\n    END;"
},
{
    "function_name": "CREATE PROCEDURE",
    "summary": "Creates a new stored procedure.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-procedure",
    "title": "CREATE PROCEDURE",
    "description": "Creates a new",
    "syntax": "CREATE [ OR REPLACE ] [ { TEMP | TEMPORARY } ] [ SECURE ] PROCEDURE <name> (\n    [ <arg_name> <arg_data_type> [ DEFAULT <default_value> ] ] [ , ... ] )\n  [ COPY GRANTS ]\n  RETURNS { <result_data_type> [ [ NOT ] NULL ] | TABLE ( [ <col_name> <col_data_type> [ , ... ] ] ) }\n  LANGUAGE JAVA\n  RUNTIME_VERSION = '<java_runtime_version>'\n  PACKAGES = ( 'com.snowflake:snowpark:<version>' [, '<package_name_and_version>' ...] )\n  [ IMPORTS = ( '<stage_path_and_file_name_to_read>' [, '<stage_path_and_file_name_to_read>' ...] ) ]\n  HANDLER = '<fully_qualified_method_name>'\n  [ EXTERNAL_ACCESS_INTEGRATIONS = ( <name_of_integration> [ , ... ] ) ]\n  [ SECRETS = ('<secret_variable_name>' = <secret_name> [ , ... ] ) ]\n  [ TARGET_PATH = '<stage_path_and_file_name_to_write>' ]\n  [ { CALLED ON NULL INPUT | { RETURNS NULL ON NULL INPUT | STRICT } } ]\n  [ { VOLATILE | IMMUTABLE } ] -- Note: VOLATILE and IMMUTABLE are deprecated.\n  [ COMMENT = '<string_literal>' ]\n  [ EXECUTE AS { OWNER | CALLER | RESTRICTED CALLER } ]\n  AS '<procedure_definition>'",
    "example": "CREATE OR REPLACE PROCEDURE sp_pi()\n    RETURNS FLOAT NOT NULL\n    LANGUAGE JAVASCRIPT\n    AS\n    $$\n    return 3.1415926;\n    $$\n    ;\n\nCREATE OR REPLACE PROCEDURE stproc1(FLOAT_PARAM1 FLOAT)\n    RETURNS STRING\n    LANGUAGE JAVASCRIPT\n    STRICT\n    EXECUTE AS OWNER\n    AS\n    $$\n    var sql_command = \n     \"INSERT INTO stproc_test_table1 (num_col1) VALUES (\" + FLOAT_PARAM1 + \")\";\n    try {\n        snowflake.execute (\n            {sqlText: sql_command}\n            );\n        return \"Succeeded.\";   // Return a success/error indicator.\n        }\n    catch (err)  {\n        return \"Failed: \" + err;   // Return a success/error indicator.\n        }\n    $$\n    ;\n\nCREATE OR REPLACE PROCEDURE my_proc(from_table STRING, to_table STRING, count INT)\n  RETURNS STRING\n  LANGUAGE PYTHON\n  RUNTIME_VERSION = '3.9'\n  PACKAGES = ('snowflake-snowpark-python')\n  HANDLER = 'run'\nAS\n$$\ndef run(session, from_table, to_table, count):\n  session.table(from_table).limit(count).write.save_as_table(to_table)\n  return \"SUCCESS\"\n$$;\n\nCREATE OR REPLACE PROCEDURE my_proc(fromTable STRING, toTable STRING, count INT)\n  RETURNS STRING\n  LANGUAGE JAVA\n  RUNTIME_VERSION = '11'\n  PACKAGES = ('com.snowflake:snowpark:latest')\n  IMPORTS = ('@mystage/myjar.jar')\n  HANDLER = 'MyClass.myMethod';"
},
{
    "function_name": "CREATE PRIVACY POLICY",
    "summary": "Creates a new privacy policy or replaces an existing privacy policy.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-privacy-policy",
    "title": "CREATE PRIVACY POLICY",
    "description": "",
    "syntax": "CREATE [ OR REPLACE ] PRIVACY POLICY [ IF NOT EXISTS ] <name>\n  AS () RETURNS PRIVACY_BUDGET -> <body>\n  [ COMMENT = '<string_literal>' ]",
    "example": "CREATE PRIVACY POLICY my_priv_policy\n  AS ( ) RETURNS PRIVACY_BUDGET ->\n  PRIVACY_BUDGET(BUDGET_NAME=> 'analysts');\n\nCREATE PRIVACY POLICY my_priv_policy\n  AS () RETURNS PRIVACY_BUDGET ->\n    CASE\n      WHEN CURRENT_USER() = 'ADMIN'\n        THEN NO_PRIVACY_POLICY()\n      ELSE PRIVACY_BUDGET(BUDGET_NAME => 'analysts')\n    END;"
},
{
    "function_name": "CREATE PIPE",
    "summary": "Creates a new pipe in the system for defining the COPY INTO <table> statement used by Snowpipe to load data from an ingestion queue into tables.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-pipe",
    "title": "CREATE PIPE",
    "description": "Creates a new pipe in the system for defining the",
    "syntax": "CREATE [ OR REPLACE ] PIPE [ IF NOT EXISTS ] <name>\n  [ AUTO_INGEST = [ TRUE | FALSE ] ]\n  [ ERROR_INTEGRATION = <integration_name> ]\n  [ AWS_SNS_TOPIC = '<string>' ]\n  [ INTEGRATION = '<string>' ]\n  [ COMMENT = '<string_literal>' ]\n  AS <copy_statement>",
    "example": "CREATE PIPE mypipe\n  AS\n  COPY INTO mytable\n  FROM @mystage\n  FILE_FORMAT = (TYPE = 'JSON');\n\nCREATE PIPE mypipe2\n  AS\n  COPY INTO mytable(C1, C2)\n  FROM (SELECT $5, $4 FROM @mystage)\n  FILE_FORMAT = (TYPE = 'JSON');\n\nCREATE PIPE mypipe3\n  AS\n  (COPY INTO mytable\n    FROM @mystage\n    MATCH_BY_COLUMN_NAME=CASE_INSENSITIVE\n    INCLUDE_METADATA = (c1= METADATA$START_SCAN_TIME, c2=METADATA$FILENAME)\n    FILE_FORMAT = (TYPE = 'JSON'));\n\nCREATE PIPE mypipe_s3\n  AUTO_INGEST = TRUE\n  AWS_SNS_TOPIC = 'arn:aws:sns:us-west-2:001234567890:s3_mybucket'\n  AS\n  COPY INTO snowpipe_db.public.mytable\n  FROM @snowpipe_db.public.mystage\n  FILE_FORMAT = (TYPE = 'JSON');\n\nCREATE PIPE mypipe_gcs\n  AUTO_INGEST = TRUE\n  INTEGRATION = 'MYINT'\n  AS\n  COPY INTO snowpipe_db.public.mytable\n  FROM @snowpipe_db.public.mystage\n  FILE_FORMAT = (TYPE = 'JSON');\n\nCREATE PIPE mypipe_azure\n  AUTO_INGEST = TRUE\n  INTEGRATION = 'MYINT'\n  AS\n  COPY INTO snowpipe_db.public.mytable\n  FROM @snowpipe_db.public.mystage\n  FILE_FORMAT = (TYPE = 'JSON');\n\nCREATE PIPE mypipe_aws\n  AUTO_INGEST = TRUE\n  AS\n  COPY INTO snowpipe_db.public.mytable\n  FROM @snowpipe_db.public.mystage\n  FILE_FORMAT = (TYPE = 'JSON');"
},
{
    "function_name": "CREATE PASSWORD POLICY",
    "summary": "Creates a new password policy or replaces an existing password policy.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-password-policy",
    "title": "CREATE PASSWORD POLICY",
    "description": "Creates a new password policy or replaces an existing password policy.",
    "syntax": "CREATE [ OR REPLACE ] PASSWORD POLICY [ IF NOT EXISTS ] <name>\n  [ PASSWORD_MIN_LENGTH = <integer> ]\n  [ PASSWORD_MAX_LENGTH = <integer> ]\n  [ PASSWORD_MIN_UPPER_CASE_CHARS = <integer> ]\n  [ PASSWORD_MIN_LOWER_CASE_CHARS = <integer> ]\n  [ PASSWORD_MIN_NUMERIC_CHARS = <integer> ]\n  [ PASSWORD_MIN_SPECIAL_CHARS = <integer> ]\n  [ PASSWORD_MIN_AGE_DAYS = <integer> ]\n  [ PASSWORD_MAX_AGE_DAYS = <integer> ]\n  [ PASSWORD_MAX_RETRIES = <integer> ]\n  [ PASSWORD_LOCKOUT_TIME_MINS = <integer> ]\n  [ PASSWORD_HISTORY = <integer> ]\n  [ COMMENT = '<string_literal>' ]",
    "example": "CREATE PASSWORD POLICY PASSWORD_POLICY_PROD_1\n    PASSWORD_MIN_LENGTH = 14\n    PASSWORD_MAX_LENGTH = 24\n    PASSWORD_MIN_UPPER_CASE_CHARS = 2\n    PASSWORD_MIN_LOWER_CASE_CHARS = 2\n    PASSWORD_MIN_NUMERIC_CHARS = 2\n    PASSWORD_MIN_SPECIAL_CHARS = 2\n    PASSWORD_MAX_AGE_DAYS = 30\n    PASSWORD_MAX_RETRIES = 3\n    PASSWORD_LOCKOUT_TIME_MINS = 30\n    PASSWORD_HISTORY = 5\n    COMMENT = 'production account password policy';"
},
{
    "function_name": "CREATE PACKAGES POLICY",
    "summary": "Creates a new packages policy or replaces an existing packages policy.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-packages-policy",
    "title": "CREATE PACKAGES POLICY",
    "description": "Creates a new",
    "syntax": "CREATE [ OR REPLACE ] PACKAGES POLICY [ IF NOT EXISTS ] <name>\n  LANGUAGE PYTHON\n  [ ALLOWLIST = ( [ '<packageSpec>' ] [ , '<packageSpec>' ... ] ) ]\n  [ BLOCKLIST = ( [ '<packageSpec>' ] [ , '<packageSpec>' ... ] ) ]\n  [ ADDITIONAL_CREATION_BLOCKLIST = ( [ '<packageSpec>' ] [ , '<packageSpec>' ... ] ) ]\n  [ COMMENT = '<string_literal>' ]",
    "example": "CREATE PACKAGES POLICY yourdb.yourschema.packages_policy_prod_1\n  LANGUAGE PYTHON\n  ALLOWLIST = ('numpy', 'pandas==1.2.3', ...)\n  BLOCKLIST = ('numpy==1.2.3', 'bad_package', ...)\n  COMMENT = 'Packages policy for the prod_1 environment';"
},
{
    "function_name": "CREATE ORGANIZATION USER GROUP",
    "summary": "Creates a new organization user group.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-organization-user-group",
    "title": "CREATE ORGANIZATION USER GROUP",
    "description": "",
    "syntax": "CREATE ORGANIZATION USER GROUP [ IF NOT EXISTS ] <name>",
    "example": "CREATE ORGANIZATION USER GROUP data_stewards;"
},
{
    "function_name": "CREATE ORGANIZATION USER",
    "summary": "Creates a new organization user.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-organization-user",
    "title": "CREATE ORGANIZATION USER",
    "description": "",
    "syntax": "CREATE ORGANIZATION USER [ IF NOT EXISTS ] <name>\n  [ objectProperties ]",
    "example": "CREATE ORGANIZATION USER joe EMAIL = 'joe.davis@example.com';"
},
{
    "function_name": "CREATE ORGANIZATION PROFILE",
    "summary": "Create the organization profile that forms part of the Uniform Listing Locator (ULL) used to publish organizational listings or query organizational listing information without mounting the listing.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-organization-profile",
    "title": "CREATE ORGANIZATION PROFILE",
    "description": "",
    "syntax": "CREATE ORGANIZATION PROFILE [ IF NOT EXISTS ] <name>\n\nCREATE ORGANIZATION PROFILE [ IF NOT EXISTS ] <name>\n  FROM @<yaml_manifest_stage_location>\n  [ VERSION <version_alias_name> ]\n  [ PUBLISH = { TRUE | FALSE } ]",
    "example": "CREATE DATABASE OrgProfileDB;\nCREATE STAGE my_test_stage_org_profile;\nCOPY INTO @my_test_stage_org_profile/manifest.yml\n  FROM (\n    SELECT $$\n      title: \"MY_ORG_PROFILE\"\n      description: \"Profile for SE Business Unit\"\n      contact: \"contact_name@myemail.com\"\n      approver_contact: \"approver_name@email.com\"\n      allowed_publishers:\n        access:\n          - all_internal_accounts: \"true\"\n      logo: \"urn:icon:shieldlock:blue\"\n    $$\n  )\n  SINGLE = TRUE\n  OVERWRITE = TRUE\n  FILE_FORMAT = (\n    COMPRESSION = NONE\n    ESCAPE_UNENCLOSED_FIELD = NONE\n  );\n\nCREATE ORGANIZATION PROFILE MYPROFILENAME\n FROM @my_test_stage_org_profile\n PUBLISH=TRUE;"
},
{
    "function_name": "CREATE ORGANIZATION LISTING",
    "summary": "Create an organization listing to share data products securely within your organization.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-organization-listing",
    "title": "CREATE ORGANIZATION LISTING",
    "description": "Create an organization listing to share data products securely within your organization.",
    "syntax": "CREATE ORGANIZATION LISTING [ IF NOT EXISTS ] <name>\n  [ { SHARE <share_name>  |  APPLICATION PACKAGE <package_name> } ]\n  AS '<yaml_manifest_string>'\n  [ PUBLISH = { TRUE | FALSE } ]",
    "example": "USE ROLE <organization_listing_role>;\n\nCREATE ORGANIZATION LISTING MYORGLISTING\nSHARE <share_name> AS\n$$\ntitle: \"My title\"\ndescription: \"One region, all accounts\"\norganization_profile: \"INTERNAL\"\norganization_targets:\ndiscovery:\n   - account: \"<account_name>\"\nroles:\n   - \"<role>\"\naccess:\n   - account: \"<account_name>\"\n   roles:\n   - \"<role>\"\nsupport_contact: \"support@somedomain.com\"\napprover_contact: \"approver@somedomain.com\"\nlocations:\n   access_regions:\n   - name: \"PUBLIC.<snowflake_region>\"\n$$\n;"
},
{
    "function_name": "CREATE ORGANIZATION ACCOUNT",
    "summary": "Creates a new organization account.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-organization-account",
    "title": "CREATE ORGANIZATION ACCOUNT",
    "description": "",
    "syntax": "CREATE ORGANIZATION ACCOUNT <name>\n    ADMIN_NAME = <string>\n    { ADMIN_PASSWORD = '<string_literal>' | ADMIN_RSA_PUBLIC_KEY = <string> }\n    [ FIRST_NAME = <string> ]\n    [ LAST_NAME = <string> ]\n    EMAIL = '<string>'\n    [ MUST_CHANGE_PASSWORD = { TRUE | FALSE } ]\n    EDITION = { ENTERPRISE | BUSINESS_CRITICAL }\n    [ REGION_GROUP = <region_group_id> ]\n    [ REGION = <snowflake_region_id> ]\n    [ COMMENT = '<string_literal>' ]",
    "example": "CREATE ORGANIZATION ACCOUNT myorgaccount\n  ADMIN_NAME = admin\n  ADMIN_PASSWORD = 'TestPassword1'\n  EMAIL = 'myemail@myorg.org'\n  MUST_CHANGE_PASSWORD = true\n  EDITION = enterprise;"
},
{
    "function_name": "CREATE OR ALTER <object>",
    "summary": "CREATE OR ALTER commands are DDL commands that combine the functionality of the CREATE command and the ALTER command, enabling you to define an object using the syntax supported by the CREATE <object> command with the limitations of the ALTER <object> command.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-or-alter",
    "title": "CREATE OR ALTER",
    "description": "",
    "syntax": "",
    "example": ""
},
{
    "function_name": "CREATE NOTIFICATION INTEGRATION (webhooks)",
    "summary": "Creates a new notification integration or replaces an existing integration for a webhook.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-notification-integration-webhooks",
    "title": "CREATE NOTIFICATION INTEGRATION (webhooks)",
    "description": "Creates a new notification integration or replaces an existing integration for a",
    "syntax": "CREATE [ OR REPLACE ] NOTIFICATION INTEGRATION [ IF NOT EXISTS ] <name>\n  TYPE = WEBHOOK\n  ENABLED = { TRUE | FALSE }\n  WEBHOOK_URL = '<url>'\n  [ WEBHOOK_SECRET = <secret_name> ]\n  [ WEBHOOK_BODY_TEMPLATE = '<template_for_http_request_body>' ]\n  [ WEBHOOK_HEADERS = ( '<header_1>'='<value_1>' [ , '<header_N>'='<value_N>', ... ] ) ]\n  [ COMMENT = '<string_literal>' ]",
    "example": ""
},
{
    "function_name": "CREATE NOTIFICATION INTEGRATION (outbound to a Google Pub/Sub topic)",
    "summary": "Creates a new notification integration in the account or replaces an existing integration for sending a message to a Google Pub/Sub topic.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-notification-integration-queue-outbound-gcp",
    "title": "CREATE NOTIFICATION INTEGRATION (outbound to a Google Pub/Sub topic)",
    "description": "Creates a new notification integration in the account or replaces an existing integration for",
    "syntax": "CREATE [ OR REPLACE ] NOTIFICATION INTEGRATION [ IF NOT EXISTS ] <name>\n  ENABLED = { TRUE | FALSE }\n  TYPE = QUEUE\n  DIRECTION = OUTBOUND\n  NOTIFICATION_PROVIDER = GCP_PUBSUB\n  GCP_PUBSUB_TOPIC_NAME = '<topic_id>'\n  [ COMMENT = '<string_literal>' ]",
    "example": ""
},
{
    "function_name": "CREATE NOTIFICATION INTEGRATION (outbound to an Azure Event Grid topic)",
    "summary": "Creates a new notification integration in the account or replaces an existing integration for sending a message to an Azure Event Grid topic.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-notification-integration-queue-outbound-azure",
    "title": "CREATE NOTIFICATION INTEGRATION (outbound to an Azure Event Grid topic)",
    "description": "Creates a new notification integration in the account or replaces an existing integration for",
    "syntax": "CREATE [ OR REPLACE ] NOTIFICATION INTEGRATION [ IF NOT EXISTS ] <name>\n  ENABLED = { TRUE | FALSE }\n  TYPE = QUEUE\n  DIRECTION = OUTBOUND\n  NOTIFICATION_PROVIDER = AZURE_EVENT_GRID\n  AZURE_EVENT_GRID_TOPIC_ENDPOINT = '<event_grid_topic_endpoint>'\n  AZURE_TENANT_ID = '<ad_directory_id>';\n  [ COMMENT = '<string_literal>' ]",
    "example": ""
},
{
    "function_name": "CREATE NOTIFICATION INTEGRATION (outbound to an Amazon SNS topic)",
    "summary": "Creates a new notification integration in the account or replaces an existing integration for sending a message to an Amazon SNS topic.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-notification-integration-queue-outbound-aws",
    "title": "CREATE NOTIFICATION INTEGRATION (outbound to an Amazon SNS topic)",
    "description": "Creates a new notification integration in the account or replaces an existing integration for",
    "syntax": "CREATE [ OR REPLACE ] NOTIFICATION INTEGRATION [ IF NOT EXISTS ] <name>\n  ENABLED = { TRUE | FALSE }\n  TYPE = QUEUE\n  DIRECTION = OUTBOUND\n  NOTIFICATION_PROVIDER = AWS_SNS\n  AWS_SNS_TOPIC_ARN = '<topic_arn>'\n  AWS_SNS_ROLE_ARN = '<iam_role_arn>'\n  [ COMMENT = '<string_literal>' ]",
    "example": ""
},
{
    "function_name": "CREATE NOTIFICATION INTEGRATION (inbound from a Google Pub/Sub topic)",
    "summary": "Creates a new notification integration in the account or replaces an existing integration for receiving messages from a Google Pub/Sub topic.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-notification-integration-queue-inbound-gcp",
    "title": "CREATE NOTIFICATION INTEGRATION (inbound from a Google Pub/Sub topic)",
    "description": "Creates a new notification integration in the account or replaces an existing integration for receiving messages from a Google\nPub/Sub topic.",
    "syntax": "CREATE [ OR REPLACE ] NOTIFICATION INTEGRATION [ IF NOT EXISTS ] <name>\n  ENABLED = { TRUE | FALSE }\n  TYPE = QUEUE\n  NOTIFICATION_PROVIDER = GCP_PUBSUB\n  GCP_PUBSUB_SUBSCRIPTION_NAME = '<subscription_id>'\n  [ COMMENT = '<string_literal>' ]",
    "example": ""
},
{
    "function_name": "CREATE NOTIFICATION INTEGRATION (inbound from an Azure Event Grid topic)",
    "summary": "Creates a new notification integration in the account or replaces an existing integration for receiving messages from an Azure Event Grid topic.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-notification-integration-queue-inbound-azure",
    "title": "CREATE NOTIFICATION INTEGRATION (inbound from an Azure Event Grid topic)",
    "description": "Creates a new notification integration in the account or replaces an existing integration for receiving messages from an Azure\nEvent Grid topic.",
    "syntax": "CREATE [ OR REPLACE ] NOTIFICATION INTEGRATION [ IF NOT EXISTS ] <name>\n  ENABLED = { TRUE | FALSE }\n  TYPE = QUEUE\n  NOTIFICATION_PROVIDER = AZURE_STORAGE_QUEUE\n  AZURE_STORAGE_QUEUE_PRIMARY_URI = '<queue_url>'\n  AZURE_TENANT_ID = '<ad_directory_id>';\n  [ USE_PRIVATELINK_ENDPOINT = { TRUE | FALSE } ]\n  [ COMMENT = '<string_literal>' ]",
    "example": ""
},
{
    "function_name": "CREATE NOTIFICATION INTEGRATION (email)",
    "summary": "Creates a new notification integration in the account or replaces an existing integration for sending email messages.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-notification-integration-email",
    "title": "CREATE NOTIFICATION INTEGRATION (email)",
    "description": "Creates a new notification integration in the account or replaces an existing integration for",
    "syntax": "CREATE [ OR REPLACE ] NOTIFICATION INTEGRATION [ IF NOT EXISTS ] <name>\n  TYPE = EMAIL\n  ENABLED = { TRUE | FALSE }\n  [ ALLOWED_RECIPIENTS = ( '<email_address>' [ , ... '<email_address>' ] ) ]\n  [ DEFAULT_RECIPIENTS = ( '<email_address>' [ , ... '<email_address>' ] ) ]\n  [ DEFAULT_SUBJECT = '<subject_line>' ]\n  [ COMMENT = '<string_literal>' ]",
    "example": ""
},
{
    "function_name": "CREATE NOTIFICATION INTEGRATION",
    "summary": "Creates a new notification integration in the account or replaces an existing integration.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-notification-integration",
    "title": "CREATE NOTIFICATION INTEGRATION",
    "description": "Creates a new notification integration in the account or replaces an existing integration. A notification integration is a\nSnowflake object that provides an interface between Snowflake and third-party messaging services (third-party cloud message\nqueuing services, email services, webhooks, etc.).",
    "syntax": "",
    "example": ""
},
{
    "function_name": "CREATE NOTEBOOK",
    "summary": "Creates a new Snowflake notebook or replaces an existing notebook.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-notebook",
    "title": "CREATE NOTEBOOK",
    "description": "",
    "syntax": "CREATE [ OR REPLACE ] NOTEBOOK [ IF NOT EXISTS ] <name>\n  [ FROM '<source_location>' ]\n  [ MAIN_FILE = '<main_file_name>' ]\n  [ COMMENT = '<string_literal>' ]\n  [ QUERY_WAREHOUSE = <warehouse_to_run_nb_and_sql_queries_in> ]\n  [ IDLE_AUTO_SHUTDOWN_TIME_SECONDS = <number_of_seconds> ]\n  [ WAREHOUSE = <warehouse_to_run_notebook_python_runtime> ]",
    "example": "CREATE NOTEBOOK mynotebook;\n\nCREATE NOTEBOOK mynotebook\n QUERY_WAREHOUSE = my_warehouse;\n\nCREATE NOTEBOOK mynotebook\n FROM '@my_db.my_schema.my_stage'\n MAIN_FILE = 'my_notebook_file.ipynb'\n QUERY_WAREHOUSE = my_warehouse;"
},
{
    "function_name": "CREATE NETWORK RULE",
    "summary": "Creates a network rule or replaces an existing network rule.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-network-rule",
    "title": "CREATE NETWORK RULE",
    "description": "Creates a network rule or replaces an existing network rule.",
    "syntax": "CREATE [ OR REPLACE ] NETWORK RULE <name>\n   TYPE = { IPV4 | AWSVPCEID | AZURELINKID | HOST_PORT | PRIVATE_HOST_PORT }\n   VALUE_LIST = ( '<value>' [, '<value>', ... ] )\n   MODE = { INGRESS | INTERNAL_STAGE | EGRESS }\n   [ COMMENT = '<string_literal>' ]",
    "example": "CREATE NETWORK RULE corporate_network\n  TYPE = AWSVPCEID\n  VALUE_LIST = ('vpce-123abc3420c1931')\n  MODE = INTERNAL_STAGE\n  COMMENT = 'corporate privatelink endpoint';\n\nCREATE NETWORK RULE cloud_network\n  TYPE = IPV4\n  VALUE_LIST = ('47.88.25.32/27')\n  COMMENT ='cloud egress ip range';\n\nCREATE NETWORK RULE external_access_rule\n  TYPE = HOST_PORT\n  MODE = EGRESS\n  VALUE_LIST = ('example.com', 'example.com:443');\n\nCREATE OR REPLACE NETWORK RULE ext_network_access_db.network_rules.azure_sql_private_rule\n  MODE = EGRESS\n  TYPE = PRIVATE_HOST_PORT\n  VALUE_LIST = ('externalaccessdemo.database.windows.net');"
},
{
    "function_name": "CREATE NETWORK POLICY",
    "summary": "Creates a network policy or replaces an existing network policy.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-network-policy",
    "title": "CREATE NETWORK POLICY",
    "description": "Creates a network policy or replaces an existing network policy.",
    "syntax": "CREATE [ OR REPLACE ] NETWORK POLICY [ IF NOT EXISTS ] <name>\n  [ ALLOWED_NETWORK_RULE_LIST = ( '<network_rule>' [ , '<network_rule>' , ... ] ) ]\n  [ BLOCKED_NETWORK_RULE_LIST = ( '<network_rule>' [ , '<network_rule>' , ... ] ) ]\n  [ ALLOWED_IP_LIST = ( [ '<ip_address>' ] [ , '<ip_address>' , ... ] ) ]\n  [ BLOCKED_IP_LIST = ( [ '<ip_address>' ] [ , '<ip_address>' , ... ] ) ]\n  [ COMMENT = '<string_literal>' ]",
    "example": ""
},
{
    "function_name": "CREATE MODEL MONITOR",
    "summary": "Create or replace a model monitor in the current or specified schema.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-model-monitor",
    "title": "CREATE MODEL MONITOR",
    "description": "Create or replace a",
    "syntax": "CREATE [ OR REPLACE ] MODEL MONITOR [ IF NOT EXISTS ] <monitor_name> WITH\n    MODEL = <model_name>\n    VERSION = '<version_name>'\n    FUNCTION = '<function_name>'\n    SOURCE = <source_name>\n    WAREHOUSE = <warehouse_name>\n    REFRESH_INTERVAL = '<refresh_interval>'\n    AGGREGATION_WINDOW = '<aggregation_window>'\n    TIMESTAMP_COLUMN = <timestamp_name>\n    [ BASELINE = <baseline_name> ]\n    [ ID_COLUMNS = <id_column_name_array> ]\n    [ PREDICTION_CLASS_COLUMNS = <prediction_class_column_name_array> ]\n    [ PREDICTION_SCORE_COLUMNS = <prediction_column-name_array> ]\n    [ ACTUAL_CLASS_COLUMNS = <actual_class_column_name_array> ]\n    [ ACTUAL_SCORE_COLUMNS = <actual_column_name_array> ]",
    "example": ""
},
{
    "function_name": "CREATE MODEL",
    "summary": "Creates a new machine learning model in the current/specified schema or replaces an existing model.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-model",
    "title": "CREATE MODEL",
    "description": "Creates a new machine learning model in the current/specified schema or replaces an existing model.",
    "syntax": "CREATE [ OR REPLACE ] MODEL [ IF NOT EXISTS ] <name> [ WITH VERSION <version_name> ]\n    FROM MODEL <source_model_name> [ VERSION <source_version_or_alias_name> ]",
    "example": ""
},
{
    "function_name": "CREATE MATERIALIZED VIEW",
    "summary": "Creates a new materialized view in the current/specified schema, based on a query of an existing table, and populates the view with data.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-materialized-view",
    "title": "CREATE MATERIALIZED VIEW",
    "description": "",
    "syntax": "CREATE [ OR REPLACE ] [ SECURE ] MATERIALIZED VIEW [ IF NOT EXISTS ] <name>\n  [ COPY GRANTS ]\n  ( <column_list> )\n  [ <col1> [ WITH ] MASKING POLICY <policy_name> [ USING ( <col1> , <cond_col1> , ... ) ]\n           [ WITH ] PROJECTION POLICY <policy_name>\n           [ WITH ] TAG ( <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' , ... ] ) ]\n  [ , <col2> [ ... ] ]\n  [ COMMENT = '<string_literal>' ]\n  [ [ WITH ] ROW ACCESS POLICY <policy_name> ON ( <col_name> [ , <col_name> ... ] ) ]\n  [ [ WITH ] AGGREGATION POLICY <policy_name> [ ENTITY KEY ( <col_name> [ , <col_name> ... ] ) ] ]\n  [ [ WITH ] TAG ( <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' , ... ] ) ]\n  [ WITH CONTACT ( <purpose> = <contact_name> [ , <purpose> = <contact_name> ... ] ) ]\n  [ CLUSTER BY ( <expr1> [, <expr2> ... ] ) ]\n  AS <select_statement>",
    "example": "CREATE MATERIALIZED VIEW mymv\n    COMMENT='Test view'\n    AS\n    SELECT col1, col2 FROM mytable;"
},
{
    "function_name": "CREATE MASKING POLICY",
    "summary": "Creates a new masking policy in the current/specified schema or replaces an existing masking policy.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-masking-policy",
    "title": "CREATE MASKING POLICY",
    "description": "",
    "syntax": "CREATE [ OR REPLACE ] MASKING POLICY [ IF NOT EXISTS ] <name> AS\n( <arg_name_to_mask> <arg_type_to_mask> [ , <arg_1> <arg_type_1> ... ] )\nRETURNS <arg_type_to_mask> -> <body>\n[ COMMENT = '<string_literal>' ]\n[ EXEMPT_OTHER_POLICIES = { TRUE | FALSE } ]",
    "example": ""
},
{
    "function_name": "CREATE LISTING",
    "summary": "Create a free listing to share directly with specific consumers, with an inline YAML manifest, or from a file located in a stage location.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-listing",
    "title": "CREATE LISTING",
    "description": "Create a free listing to share directly with specific consumers, with an inline YAML manifest, or from a file located in a stage location.",
    "syntax": "CREATE EXTERNAL LISTING [ IF NOT EXISTS ] <name>\n  [ { SHARE <share_name>  |  APPLICATION PACKAGE <package_name> } ]\n  AS '<yaml_manifest_string>'\n  [ PUBLISH = { TRUE | FALSE } ]\n  [ REVIEW = { TRUE | FALSE } ]\n  [ COMMENT = '<string>' ]\n\nCREATE EXTERNAL LISTING [ IF NOT EXISTS ] <name>\n  [ { SHARE <share_name>  |  APPLICATION PACKAGE <package_name> } ]\n  FROM '<yaml_manifest_stage_location>'\n  [ PUBLISH = { TRUE | FALSE } ]\n  [ REVIEW = { TRUE | FALSE } ]",
    "example": "CREATE EXTERNAL LISTING MYLISTING\nSHARE MySHARE AS\n$$\ntitle: \"MyListing\"\nsubtitle: \"Subtitle for MyListing\"\ndescription: \"Description for MyListing\"\nlisting_terms:\n   type: \"STANDARD\"\ntargets:\n    accounts: [\"Org1.Account1\"]\nusage_examples:\n    - title: \"this is a test sql\"\n      description: \"Simple example\"\n      query: \"select *\"\n$$\n;\n\nCREATE EXTERNAL LISTING MYLISTING\nSHARE MySHARE AS\n$$\ntitle: \"MyListing\"\nsubtitle: \"Subtitle for MyListing\"\ndescription: \"Description for MyListing\"\nlisting_terms:\n  type: \"OFFLINE\"\ntargets:\n   regions: [\"PUBLIC.AWS_US_EAST_1\", \"PUBLIC.AZURE_WESTUS2\"]\nusage_examples:\n   - title: \"this is a test sql\"\n     description: \"Simple example\"\n     query: \"select *\"\n$$ PUBLISH=FALSE REVIEW=FALSE;\n\nCREATE EXTERNAL LISTING MYLISTING\nSHARE MySHARE FROM @dbforstage.public.listingstage/listingmanifests;"
},
{
    "function_name": "CREATE MANAGED ACCOUNT",
    "summary": "Creates a new managed account.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-managed-account",
    "title": "CREATE MANAGED ACCOUNT",
    "description": "",
    "syntax": "CREATE MANAGED ACCOUNT <name>\n    ADMIN_NAME = <username> , ADMIN_PASSWORD = <user_password> ,\n    TYPE = READER ,\n    [ COMMENT = '<string_literal>' ]",
    "example": "CREATE MANAGED ACCOUNT reader_acct1\n    ADMIN_NAME = user1 , ADMIN_PASSWORD = 'Sdfed43da!44' ,\n    TYPE = READER;\n\n+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| status                                                                                                                                                                            |\n|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| {\"accountName\":\"READER_ACCT1\",\"accountLocator\":\"IIB88126\",\"url\":\"https://myorg-reader_acct1.snowflakecomputing.com\",\"accountLocatorUrl\":\"https://iib88126.snowflakecomputing.com\"}|\n+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+"
},
{
    "function_name": "CREATE JOIN POLICY",
    "summary": "Creates a new join policy in the current/specified schema or replaces an existing join policy.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-join-policy",
    "title": "CREATE JOIN POLICY",
    "description": "",
    "syntax": "CREATE [ OR REPLACE ] JOIN POLICY [ IF NOT EXISTS ] <name>\n  AS () RETURNS JOIN_CONSTRAINT -> <body>\n  [ COMMENT = '<string_literal>' ]",
    "example": "CREATE JOIN POLICY jp1 AS ()\n  RETURNS JOIN_CONSTRAINT -> JOIN_CONSTRAINT(JOIN_REQUIRED => TRUE);\n\nCREATE JOIN POLICY jp2 AS ()\n  RETURNS JOIN_CONSTRAINT ->\n    CASE\n      WHEN CURRENT_ROLE() = 'ACCOUNTADMIN'\n        THEN JOIN_CONSTRAINT(JOIN_REQUIRED => FALSE)\n      ELSE JOIN_CONSTRAINT(JOIN_REQUIRED => TRUE)\n    END;"
},
{
    "function_name": "CREATE INTEGRATION",
    "summary": "Creates a new integration in the system or replaces an existing integration.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-integration",
    "title": "CREATE INTEGRATION",
    "description": "Creates a new integration in the system or replaces an existing integration. An integration is a Snowflake object that provides an\ninterface between Snowflake and third-party services.",
    "syntax": "CREATE [ OR REPLACE ] <integration_type> INTEGRATION [ IF NOT EXISTS ] <object_name>\n  [ <integration_type_params> ]\n  [ COMMENT = '<string_literal>' ]",
    "example": ""
},
{
    "function_name": "CREATE INDEX",
    "summary": "Creates a new secondary index in an existing hybrid table and populates the index with data.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-index",
    "title": "CREATE INDEX",
    "description": "",
    "syntax": "CREATE [ OR REPLACE ] INDEX [ IF NOT EXISTS ] <index_name>\n  ON <table_name>\n    ( <col_name> [ , <col_name> , ... ] )",
    "example": "CREATE OR REPLACE HYBRID TABLE mytable (\n  pk INT PRIMARY KEY,\n  val INT,\n  val2 INT\n);\n\nINSERT INTO mytable SELECT seq, seq+100, seq+200\n  FROM (SELECT seq8() seq FROM TABLE(GENERATOR(rowcount => 100)) v);\n\nCREATE OR REPLACE INDEX vidx ON mytable (val);\n\n+----------------------------------+\n| status                           |\n|----------------------------------|\n| Statement executed successfully. |\n+----------------------------------+\n\nBUILD FAILURE Index build failed. Please drop the index and re-create it.\n\nDROP INDEX mytable.vidx;\n\n+-------------------------------------+\n| status                              |\n|-------------------------------------|\n| Statement executed successfully.    |\n+-------------------------------------+"
},
{
    "function_name": "CREATE IMAGE REPOSITORY",
    "summary": "Creates a new image repository in the current schema.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-image-repository",
    "title": "CREATE IMAGE REPOSITORY",
    "description": "",
    "syntax": "CREATE [ OR REPLACE ] IMAGE REPOSITORY [ IF NOT EXISTS ] <name>\n  [ ENCRYPTION = ( TYPE = 'SNOWFLAKE_FULL' | TYPE = 'SNOWFLAKE_SSE' ) ]",
    "example": "CREATE OR REPLACE IMAGE REPOSITORY tutorial_repository;\n\nCREATE OR REPLACE IMAGE REPOSITORY tutorial_repository\nENCRYPTION = (type = 'SNOWFLAKE_FULL');"
},
{
    "function_name": "CREATE ICEBERG TABLE (Snowflake as the Iceberg catalog)",
    "summary": "Creates or replaces an Apache Iceberg™ table that uses Snowflake as the Iceberg catalog in the current/specified schema.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-iceberg-table-snowflake",
    "title": "CREATE ICEBERG TABLE (Snowflake as the Iceberg catalog)",
    "description": "Creates or replaces an",
    "syntax": "CREATE [ OR REPLACE ] ICEBERG TABLE [ IF NOT EXISTS ] <table_name> (\n    -- Column definition\n    <col_name> <col_type>\n      [ inlineConstraint ]\n      [ NOT NULL ]\n      [ [ WITH ] MASKING POLICY <policy_name> [ USING ( <col_name> , <cond_col1> , ... ) ] ]\n      [ [ WITH ] PROJECTION POLICY <policy_name> ]\n      [ [ WITH ] TAG ( <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' , ... ] ) ]\n      [ COMMENT '<string_literal>' ]\n\n    -- Additional column definitions\n    [ , <col_name> <col_type> [ ... ] ]\n\n    -- Out-of-line constraints\n    [ , outoflineConstraint [ ... ] ]\n  )\n  [ CLUSTER BY ( <expr> [ , <expr> , ... ] ) ]\n  [ EXTERNAL_VOLUME = '<external_volume_name>' ]\n  [ CATALOG = 'SNOWFLAKE' ]\n  [ BASE_LOCATION = '<directory_for_table_files>' ]\n  [ CATALOG_SYNC = '<open_catalog_integration_name>']\n  [ STORAGE_SERIALIZATION_POLICY = { COMPATIBLE | OPTIMIZED } ]\n  [ DATA_RETENTION_TIME_IN_DAYS = <integer> ]\n  [ MAX_DATA_EXTENSION_TIME_IN_DAYS = <integer> ]\n  [ CHANGE_TRACKING = { TRUE | FALSE } ]\n  [ COPY GRANTS ]\n  [ COMMENT = '<string_literal>' ]\n  [ [ WITH ] ROW ACCESS POLICY <policy_name> ON ( <col_name> [ , <col_name> ... ] ) ]\n  [ [ WITH ] AGGREGATION POLICY <policy_name> ]\n  [ [ WITH ] TAG ( <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' , ... ] ) ]\n  [ WITH CONTACT ( <purpose> = <contact_name> [ , <purpose> = <contact_name> ... ] ) ]",
    "example": "CREATE ICEBERG TABLE my_iceberg_table (amount int)\n  CATALOG = 'SNOWFLAKE'\n  EXTERNAL_VOLUME = 'my_external_volume'\n  BASE_LOCATION = 'my_iceberg_table';\n\nCREATE OR REPLACE ICEBERG TABLE iceberg_table_copy (column1 int)\n  EXTERNAL_VOLUME = 'my_external_volume'\n  CATALOG = 'SNOWFLAKE'\n  BASE_LOCATION = 'iceberg_table_copy'\n  AS SELECT * FROM base_iceberg_table;\n\nCREATE OR REPLACE ICEBERG TABLE table_with_quoted_external_volume\n  EXTERNAL_VOLUME = '\"external_volume_1\"'\n  CATALOG = 'SNOWFLAKE'\n  BASE_LOCATION = 'my/relative/path/from/external_volume';"
},
{
    "function_name": "CREATE ICEBERG TABLE (Iceberg REST catalog)",
    "summary": "Creates or replaces an Apache Iceberg™ table in the current/specified schema for an Iceberg REST catalog.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-iceberg-table-rest",
    "title": "CREATE ICEBERG TABLE (Iceberg REST catalog)",
    "description": "Creates or replaces an",
    "syntax": "CREATE [ OR REPLACE ] ICEBERG TABLE [ IF NOT EXISTS ] <table_name>\n  [ EXTERNAL_VOLUME = '<external_volume_name>' ]\n  [ CATALOG = '<catalog_integration_name>' ]\n  CATALOG_TABLE_NAME = '<rest_catalog_table_name>'\n  [ CATALOG_NAMESPACE = '<catalog_namespace>' ]\n  [ REPLACE_INVALID_CHARACTERS = { TRUE | FALSE } ]\n  [ AUTO_REFRESH = { TRUE | FALSE } ]\n  [ COMMENT = '<string_literal>' ]\n  [ [ WITH ] TAG ( <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' , ... ] ) ]\n  [ WITH CONTACT ( <purpose> = <contact_name> [ , <purpose> = <contact_name> ... ] ) ]",
    "example": "CREATE OR REPLACE ICEBERG TABLE my_iceberg_table\n  EXTERNAL_VOLUME = 'my_external_volume'\n  CATALOG = 'my_rest_catalog_integration'\n  CATALOG_TABLE_NAME = 'my_remote_table'\n  AUTO_REFRESH = TRUE;\n\nCREATE ICEBERG TABLE open_catalog_iceberg_table\n  EXTERNAL_VOLUME = 'my_external_volume'\n  CATALOG = 'open_catalog_int'\n  CATALOG_TABLE_NAME = 'my_open_catalog_table'\n  AUTO_REFRESH = TRUE;"
},
{
    "function_name": "CREATE ICEBERG TABLE (Iceberg files in object storage)",
    "summary": "Creates or replaces an Apache Iceberg™ table in the current/specified schema using Iceberg files in object storage (external cloud storage).",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-iceberg-table-iceberg-files",
    "title": "CREATE ICEBERG TABLE (Iceberg files in object storage)",
    "description": "Creates or replaces an",
    "syntax": "CREATE [ OR REPLACE ] ICEBERG TABLE [ IF NOT EXISTS ] <table_name>\n  [ EXTERNAL_VOLUME = '<external_volume_name>' ]\n  [ CATALOG = '<catalog_integration_name>' ]\n  METADATA_FILE_PATH = '<metadata_file_path>'\n  [ REPLACE_INVALID_CHARACTERS = { TRUE | FALSE } ]\n  [ COMMENT = '<string_literal>' ]\n  [ [ WITH ] TAG ( <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' , ... ] ) ]\n  [ WITH CONTACT ( <purpose> = <contact_name> [ , <purpose> = <contact_name> ... ] ) ]",
    "example": "CREATE ICEBERG TABLE my_iceberg_table\n  EXTERNAL_VOLUME='my_external_volume'\n  CATALOG='my_catalog_integration'\n  METADATA_FILE_PATH='path/to/metadata/v1.metadata.json';\n\nCREATE OR REPLACE ICEBERG TABLE itable_with_quoted_catalog\n  EXTERNAL_VOLUME = '\"external_volume_1\"'\n  CATALOG = '\"catalog_integration_1\"'\n  METADATA_FILE_PATH='path/to/metadata/v1.metadata.json';"
},
{
    "function_name": "CREATE ICEBERG TABLE (Delta files in object storage)",
    "summary": "Creates or replaces an Apache Iceberg™ table in the current/specified schema using Delta table files in object storage (external cloud storage).",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-iceberg-table-delta",
    "title": "CREATE ICEBERG TABLE (Delta files in object storage)",
    "description": "Creates or replaces an",
    "syntax": "CREATE [ OR REPLACE ] ICEBERG TABLE [ IF NOT EXISTS ] <table_name>\n  [ EXTERNAL_VOLUME = '<external_volume_name>' ]\n  [ CATALOG = '<catalog_integration_name>' ]\n  BASE_LOCATION = '<relative_path_from_external_volume>'\n  [ REPLACE_INVALID_CHARACTERS = { TRUE | FALSE } ]\n  [ AUTO_REFRESH = { TRUE | FALSE } ]\n  [ COMMENT = '<string_literal>' ]\n  [ [ WITH ] TAG ( <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' , ... ] ) ]\n  [ WITH CONTACT ( <purpose> = <contact_name> [ , <purpose> = <contact_name> ... ] ) ]",
    "example": "CREATE ICEBERG TABLE my_delta_iceberg_table\n  CATALOG = delta_catalog_integration\n  EXTERNAL_VOLUME = delta_external_volume\n  BASE_LOCATION = 'relative/path/from/ext/vol/'\n  AUTO_REFRESH = TRUE;"
},
{
    "function_name": "CREATE ICEBERG TABLE (AWS Glue as the Iceberg catalog)",
    "summary": "Creates or replaces an Apache Iceberg™ table in the current/specified schema using an Iceberg table that is registered in the AWS Glue Data Catalog.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-iceberg-table-aws-glue",
    "title": "CREATE ICEBERG TABLE (AWS Glue as the Iceberg catalog)",
    "description": "",
    "syntax": "CREATE [ OR REPLACE ] ICEBERG TABLE [ IF NOT EXISTS ] <table_name>\n  [ EXTERNAL_VOLUME = '<external_volume_name>' ]\n  [ CATALOG = '<catalog_integration_name>' ]\n  CATALOG_TABLE_NAME = '<catalog_table_name>'\n  [ CATALOG_NAMESPACE = '<catalog_namespace>' ]\n  [ REPLACE_INVALID_CHARACTERS = { TRUE | FALSE } ]\n  [ AUTO_REFRESH = { TRUE | FALSE } ]\n  [ COMMENT = '<string_literal>' ]\n  [ [ WITH ] TAG ( <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' , ... ] ) ]\n  [ WITH CONTACT ( <purpose> = <contact_name> [ , <purpose> = <contact_name> ... ] ) ]",
    "example": "CREATE ICEBERG TABLE glue_iceberg_table\n  EXTERNAL_VOLUME='glue_catalog_volume'\n  CATALOG='glue_catalog_integration'\n  CATALOG_TABLE_NAME='my_glue_catalog_table'\n  CATALOG_NAMESPACE='icebergcatalogdb2'\n  AUTO_REFRESH = TRUE;\n\nCREATE OR REPLACE ICEBERG TABLE itable_with_quoted_catalog\n  EXTERNAL_VOLUME = '\"glue_volume_1\"'\n  CATALOG = '\"glue_catalog_integration_1\"'\n  CATALOG_TABLE_NAME='my_glue_catalog_table'\n  CATALOG_NAMESPACE='icebergcatalogdb2'\n  AUTO_REFRESH = TRUE;"
},
{
    "function_name": "CREATE ICEBERG TABLE",
    "summary": "Creates or replaces an Apache Iceberg™ table in the current/specified schema.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-iceberg-table",
    "title": "CREATE ICEBERG TABLE",
    "description": "Creates or replaces an",
    "syntax": "CREATE [ OR REPLACE ] ICEBERG TABLE [ IF NOT EXISTS ] <table_name> (\n    -- Column definition\n    <col_name> <col_type>\n      [ inlineConstraint ]\n      [ NOT NULL ]\n      [ [ WITH ] MASKING POLICY <policy_name> [ USING ( <col_name> , <cond_col1> , ... ) ] ]\n      [ [ WITH ] PROJECTION POLICY <policy_name> ]\n      [ [ WITH ] TAG ( <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' , ... ] ) ]\n      [ COMMENT '<string_literal>' ]\n\n    -- Additional column definitions\n    [ , <col_name> <col_type> [ ... ] ]\n\n    -- Out-of-line constraints\n    [ , outoflineConstraint [ ... ] ]\n  )\n  [ CLUSTER BY ( <expr> [ , <expr> , ... ] ) ]\n  [ EXTERNAL_VOLUME = '<external_volume_name>' ]\n  [ CATALOG = 'SNOWFLAKE' ]\n  [ BASE_LOCATION = '<directory_for_table_files>' ]\n  [ CATALOG_SYNC = '<open_catalog_integration_name>']\n  [ STORAGE_SERIALIZATION_POLICY = { COMPATIBLE | OPTIMIZED } ]\n  [ DATA_RETENTION_TIME_IN_DAYS = <integer> ]\n  [ MAX_DATA_EXTENSION_TIME_IN_DAYS = <integer> ]\n  [ CHANGE_TRACKING = { TRUE | FALSE } ]\n  [ COPY GRANTS ]\n  [ COMMENT = '<string_literal>' ]\n  [ [ WITH ] ROW ACCESS POLICY <policy_name> ON ( <col_name> [ , <col_name> ... ] ) ]\n  [ [ WITH ] AGGREGATION POLICY <policy_name> ]\n  [ [ WITH ] TAG ( <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' , ... ] ) ]\n  [ WITH CONTACT ( <purpose> = <contact_name> [ , <purpose> = <contact_name> ... ] ) ]",
    "example": ""
},
{
    "function_name": "CREATE HYBRID TABLE",
    "summary": "Creates a new hybrid table in the current/specified schema or replaces an existing table.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-hybrid-table",
    "title": "CREATE HYBRID TABLE",
    "description": "",
    "syntax": "CREATE [ OR REPLACE ] HYBRID TABLE [ IF NOT EXISTS ] <table_name>\n  ( <col_name> <col_type>\n    [\n      {\n        DEFAULT <expr>\n        | { AUTOINCREMENT | IDENTITY }\n          [\n            {\n              ( <start_num> , <step_num> )\n              | START <num> INCREMENT <num>\n            }\n          ]\n          [ { ORDER | NOORDER } ]\n      }\n    ]\n    [ NOT NULL ]\n    [ inlineConstraint ]\n    [ COMMENT '<string_literal>' ]\n    [ , <col_name> <col_type> [ ... ] ]\n    [ , outoflineConstraint ]\n    [ , outoflineIndex ]\n    [ , ... ]\n  )\n  [ COMMENT = '<string_literal>' ]",
    "example": "CREATE HYBRID TABLE mytable (\n  customer_id INT AUTOINCREMENT PRIMARY KEY,\n  full_name VARCHAR(255),\n  email VARCHAR(255) UNIQUE,\n  extended_customer_info VARIANT,\n  INDEX index_full_name (full_name)\n);\n\n+-------------------------------------+\n| status                              |\n|-------------------------------------|\n| Table MYTABLE successfully created. |\n+-------------------------------------+\n\nINSERT INTO mytable (customer_id, full_name, email, extended_customer_info)\n  SELECT 100, 'Jane Doe', 'jdoe@example.com',\n    parse_json('{\"address\": \"1234 Main St\", \"city\": \"San Francisco\", \"state\": \"CA\", \"zip\":\"94110\"}');\n\n+-------------------------+\n| number of rows inserted |\n|-------------------------|\n|                       1 |\n+-------------------------+\n\n200001 (22000): Primary key already exists\n\nDuplicate key value violates unique constraint \"SYS_INDEX_MYTABLE_UNIQUE_EMAIL\"\n\nSHOW TABLES LIKE 'mytable';\n\n+-------------------------------+---------+---------------+-------------+-------+-----------+---------+------------+------+-------+--------+----------------+----------------------+-----------------+---------------------+------------------------------+---------------------------+-------------+\n| created_on                    | name    | database_name | schema_name | kind  | is_hybrid | comment | cluster_by | rows | bytes | owner  | retention_time | automatic_clustering | change_tracking | search_optimization | search_optimization_progress | search_optimization_bytes | is_external |\n|-------------------------------+---------+---------------+-------------+-------+-----------+---------+------------+------+-------+--------+----------------+----------------------+-----------------+---------------------+------------------------------+---------------------------+-------------|\n| 2022-02-23 23:53:19.707 +0000 | MYTABLE | MYDB          | PUBLIC      | TABLE | Y         |         |            | NULL |  NULL | MYROLE | 10             | OFF                  | OFF             | OFF                 |                         NULL |                      NULL | N           |\n+-------------------------------+---------+---------------+-------------+-------+-----------+---------+------------+------+-------+--------+----------------+----------------------+-----------------+---------------------+------------------------------+---------------------------+-------------+\n\nSHOW HYBRID TABLES;\n\n+-------------------------------+---------------------------+---------------+-------------+--------------+--------------+------+-------+---------+\n| created_on                    | name                      | database_name | schema_name | owner        | datastore_id | rows | bytes | comment |\n|-------------------------------+---------------------------+---------------+-------------+--------------+--------------+------+-------+---------|\n| 2022-02-24 02:07:31.877 +0000 | MYTABLE                   | DEMO_DB       | PUBLIC      | ACCOUNTADMIN |         2002 | NULL |  NULL |         |\n+-------------------------------+---------------------------+---------------+-------------+--------------+--------------+------+-------+---------+\n\nDESCRIBE TABLE mytable;\n\n+-------------------+--------------+--------+-------+---------+-------------+------------+-------+------------+---------+-------------+\n| name              | type         | kind   | null? | default | primary key | unique key | check | expression | comment | policy name |\n|-------------------+--------------+--------+-------+---------+-------------+------------+-------+------------+---------+-------------|\n| CUSTOMER_ID       | NUMBER(38,0) | COLUMN | N     | NULL    | Y           | N          | NULL  | NULL       | NULL    | NULL        |\n| FULL_NAME         | VARCHAR(256) | COLUMN | Y     | NULL    | N           | N          | NULL  | NULL       | NULL    | NULL        |\n| APPLICATION_STATE | VARIANT      | COLUMN | Y     | NULL    | N           | N          | NULL  | NULL       | NULL    | NULL        |\n+-------------------+--------------+--------+-------+---------+-------------+------------+-------+------------+---------+-------------+\n\nSELECT customer_id, full_name, email, extended_customer_info\n  FROM mytable\n  WHERE extended_customer_info['state'] = 'CA';\n\n+-------------+-----------+------------------+------------------------------+\n| CUSTOMER_ID | FULL_NAME | EMAIL            | EXTENDED_CUSTOMER_INFO       |\n|-------------+-----------+------------------+------------------------------|\n|         100 | Jane Doe  | jdoe@example.com | {                            |\n|             |           |                  |   \"address\": \"1234 Main St\", |\n|             |           |                  |   \"city\": \"San Francisco\",   |\n|             |           |                  |   \"state\": \"CA\",             |\n|             |           |                  |   \"zip\": \"94110\"             |\n|             |           |                  | }                            |\n+-------------+-----------+------------------+------------------------------+\n\nCREATE OR REPLACE HYBRID TABLE team\n  (team_id INT PRIMARY KEY,\n  team_name VARCHAR(40),\n  stadium VARCHAR(40));\n\nCREATE OR REPLACE HYBRID TABLE player\n  (player_id INT PRIMARY KEY,\n  first_name VARCHAR(40),\n  last_name VARCHAR(40),\n  team_id INT,\n  FOREIGN KEY (team_id) REFERENCES team(team_id));\n\nINSERT INTO team VALUES (1, 'Bayern Munich', 'Allianz Arena');\nINSERT INTO player VALUES (100, 'Harry', 'Kane', 1);\nINSERT INTO player VALUES (301, 'Gareth', 'Bale', 3);\n\n200009 (22000): Foreign key constraint \"SYS_INDEX_PLAYER_FOREIGN_KEY_TEAM_ID_TEAM_TEAM_ID\" was violated.\n\nINSERT INTO player VALUES (200, 'Tommy', 'Atkins', NULL);\n\n200009 (22000): Foreign key constraint \"SYS_INDEX_PLAYER_FOREIGN_KEY_TEAM_ID_TEAM_TEAM_ID\" was violated.\n\nSELECT * FROM team t, player p WHERE t.team_id=p.team_id;\n\n+---------+---------------+---------------+-----------+------------+-----------+---------+\n| TEAM_ID | TEAM_NAME     | STADIUM       | PLAYER_ID | FIRST_NAME | LAST_NAME | TEAM_ID |\n|---------+---------------+---------------+-----------+------------+-----------+---------|\n|       1 | Bayern Munich | Allianz Arena |       100 | Harry      | Kane      |       1 |\n+---------+---------------+---------------+-----------+------------+-----------+---------+\n\nINSERT INTO team VALUES (0, 'Unknown', 'Unknown');\nINSERT INTO player VALUES (200, 'Tommy', 'Atkins', 0);\n\nSELECT * FROM team t, player p WHERE t.team_id=p.team_id;\n\n+---------+---------------+---------------+-----------+------------+-----------+---------+\n| TEAM_ID | TEAM_NAME     | STADIUM       | PLAYER_ID | FIRST_NAME | LAST_NAME | TEAM_ID |\n|---------+---------------+---------------+-----------+------------+-----------+---------|\n|       1 | Bayern Munich | Allianz Arena |       100 | Harry      | Kane      |       1 |\n|       0 | Unknown       | Unknown       |       200 | Tommy      | Atkins    |       0 |\n+---------+---------------+---------------+-----------+------------+-----------+---------+\n\nCREATE HYBRID TABLE employee (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(200),\n    employee_department VARCHAR(200),\n    INDEX idx_department (employee_department) INCLUDE (employee_name)\n);\n\nINSERT INTO employee VALUES\n  (1, 'John Doe', 'Marketing'),\n  (2, 'Jane Smith', 'Sales'),\n  (3, 'Bob Johnson', 'Finance'),\n  (4, 'Alice Brown', 'Marketing');\n\nSELECT employee_name FROM employee WHERE employee_department = 'Marketing';\nSELECT employee_name FROM employee WHERE employee_department IN ('Marketing', 'Sales');\n\nCREATE OR REPLACE HYBRID TABLE ht1pk\n  (COL1 NUMBER(38,0) NOT NULL COMMENT 'Primary key',\n  COL2 NUMBER(38,0) NOT NULL,\n  COL3 VARCHAR(16777216),\n  CONSTRAINT PKEY_1 PRIMARY KEY (COL1));\n\nDESCRIBE TABLE ht1pk;\n\n+------+-------------------+--------+-------+---------+-------------+------------+-------+------------+-------------+-------------+----------------+\n| name | type              | kind   | null? | default | primary key | unique key | check | expression | comment     | policy name | privacy domain |\n|------+-------------------+--------+-------+---------+-------------+------------+-------+------------+-------------+-------------+----------------|\n| COL1 | NUMBER(38,0)      | COLUMN | N     | NULL    | Y           | N          | NULL  | NULL       | Primary key | NULL        | NULL           |\n| COL2 | NUMBER(38,0)      | COLUMN | N     | NULL    | N           | N          | NULL  | NULL       | NULL        | NULL        | NULL           |\n| COL3 | VARCHAR(16777216) | COLUMN | Y     | NULL    | N           | N          | NULL  | NULL       | NULL        | NULL        | NULL           |\n+------+-------------------+--------+-------+---------+-------------+------------+-------+------------+-------------+-------------+----------------+"
},
{
    "function_name": "CREATE GIT REPOSITORY",
    "summary": "Creates a Snowflake Git repository clone in the schema or replaces an existing Git repository clone.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-git-repository",
    "title": "CREATE GIT REPOSITORY",
    "description": "Creates a Snowflake",
    "syntax": "CREATE [ OR REPLACE ] GIT REPOSITORY [ IF NOT EXISTS ] <name>\n  ORIGIN = '<repository_url>'\n  API_INTEGRATION = <integration_name>\n  [ GIT_CREDENTIALS = <secret_name> ]\n  [ COMMENT = '<string_literal>' ]\n  [ [ WITH ] TAG ( <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' , ... ] ) ]",
    "example": "CREATE OR REPLACE GIT REPOSITORY snowflake_extensions\n  API_INTEGRATION = git_api_integration\n  GIT_CREDENTIALS = git_secret\n  ORIGIN = 'https://github.com/my-account/snowflake-extensions.git';"
},
{
    "function_name": "CREATE FUNCTION (Snowpark Container Services)",
    "summary": "Creates a service function.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-function-spcs",
    "title": "CREATE FUNCTION (Snowpark Container Services)",
    "description": "Creates a",
    "syntax": "CREATE [ OR REPLACE ] FUNCTION <name> ( [ <arg_name> <arg_data_type> ] [ , ... ] )\n  RETURNS <result_data_type>\n  [ [ NOT ] NULL ]\n  [ { CALLED ON NULL INPUT | { RETURNS NULL ON NULL INPUT | STRICT } } ]\n  [ { VOLATILE | IMMUTABLE } ]\n  SERVICE = <service_name>\n  ENDPOINT = <endpoint_name>\n  [ COMMENT = '<string_literal>' ]\n  [ CONTEXT_HEADERS = ( <context_function_1> [ , <context_function_2> ...] ) ]\n  [ MAX_BATCH_ROWS = <integer> ]\n  [ MAX_BATCH_RETRIES = <integer> ]\n  [ ON_BATCH_FAILURE = { ABORT | RETURN_NULL } ]\n  [ BATCH_TIMEOUT_SECS = <integer> ]\n  AS '<http_path_to_request_handler>'",
    "example": "CREATE FUNCTION my_echo_udf (InputText VARCHAR)\n  RETURNS VARCHAR\n  SERVICE=echo_service\n  ENDPOINT=echoendpoint\n  AS '/echo';\n\nCREATE OR ALTER FUNCTION my_echo_udf (InputText VARCHAR)\n  RETURNS VARCHAR\n  SERVICE = echo_service\n  ENDPOINT = reverse_echoendpoint\n  CONTEXT_HEADERS = (current_account)\n  MAX_BATCH_ROWS = 100\n  AS '/echo';"
},
{
    "function_name": "CREATE FUNCTION",
    "summary": "Creates a new UDF (user-defined function).",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-function",
    "title": "CREATE FUNCTION",
    "description": "Creates a new",
    "syntax": "CREATE [ OR REPLACE ] [ { TEMP | TEMPORARY } ] [ SECURE ] FUNCTION [ IF NOT EXISTS ] <name> (\n    [ <arg_name> <arg_data_type> [ DEFAULT <default_value> ] ] [ , ... ] )\n  [ COPY GRANTS ]\n  RETURNS { <result_data_type> | TABLE ( <col_name> <col_data_type> [ , ... ] ) }\n  [ [ NOT ] NULL ]\n  LANGUAGE JAVA\n  [ { CALLED ON NULL INPUT | { RETURNS NULL ON NULL INPUT | STRICT } } ]\n  [ { VOLATILE | IMMUTABLE } ]\n  [ RUNTIME_VERSION = <java_jdk_version> ]\n  [ COMMENT = '<string_literal>' ]\n  [ IMPORTS = ( '<stage_path_and_file_name_to_read>' [ , ... ] ) ]\n  [ PACKAGES = ( '<package_name_and_version>' [ , ... ] ) ]\n  HANDLER = '<path_to_method>'\n  [ EXTERNAL_ACCESS_INTEGRATIONS = ( <name_of_integration> [ , ... ] ) ]\n  [ SECRETS = ('<secret_variable_name>' = <secret_name> [ , ... ] ) ]\n  [ TARGET_PATH = '<stage_path_and_file_name_to_write>' ]\n  AS '<function_definition>'",
    "example": "CREATE OR REPLACE FUNCTION echo_varchar(x VARCHAR)\n  RETURNS VARCHAR\n  LANGUAGE JAVA\n  CALLED ON NULL INPUT\n  HANDLER = 'TestFunc.echoVarchar'\n  TARGET_PATH = '@~/testfunc.jar'\n  AS\n  'class TestFunc {\n    public static String echoVarchar(String x) {\n      return x;\n    }\n  }';\n\ncreate function my_decrement_udf(i numeric(9, 0))\n    returns numeric\n    language java\n    imports = ('@~/my_decrement_udf_package_dir/my_decrement_udf_jar.jar')\n    handler = 'my_decrement_udf_package.my_decrement_udf_class.my_decrement_udf_method'\n    ;\n\nCREATE OR REPLACE FUNCTION js_factorial(d double)\n  RETURNS double\n  LANGUAGE JAVASCRIPT\n  STRICT\n  AS '\n  if (D <= 0) {\n    return 1;\n  } else {\n    var result = 1;\n    for (var i = 2; i <= D; i++) {\n      result = result * i;\n    }\n    return result;\n  }\n  ';\n\nCREATE OR REPLACE FUNCTION py_udf()\n  RETURNS VARIANT\n  LANGUAGE PYTHON\n  RUNTIME_VERSION = '3.10'\n  PACKAGES = ('numpy','pandas','xgboost==1.5.0')\n  HANDLER = 'udf'\nAS $$\nimport numpy as np\nimport pandas as pd\nimport xgboost as xgb\ndef udf():\n    return [np.__version__, pd.__version__, xgb.__version__]\n$$;\n\nCREATE OR REPLACE FUNCTION dream(i int)\n  RETURNS VARIANT\n  LANGUAGE PYTHON\n  RUNTIME_VERSION = '3.10'\n  HANDLER = 'sleepy.snore'\n  IMPORTS = ('@my_stage/sleepy.py')\n\nCREATE OR REPLACE FUNCTION echo_varchar(x VARCHAR)\n  RETURNS VARCHAR\n  LANGUAGE SCALA\n  RUNTIME_VERSION = 2.12\n  HANDLER='Echo.echoVarchar'\n  AS\n  $$\n  class Echo {\n    def echoVarchar(x : String): String = {\n      return x\n    }\n  }\n  $$;\n\nCREATE OR REPLACE FUNCTION echo_varchar(x VARCHAR)\n  RETURNS VARCHAR\n  LANGUAGE SCALA\n  RUNTIME_VERSION = 2.12\n  IMPORTS = ('@udf_libs/echohandler.jar')\n  HANDLER='Echo.echoVarchar';\n\nCREATE FUNCTION pi_udf()\n  RETURNS FLOAT\n  AS '3.141592654::FLOAT'\n  ;\n\nCREATE FUNCTION simple_table_function ()\n  RETURNS TABLE (x INTEGER, y INTEGER)\n  AS\n  $$\n    SELECT 1, 2\n    UNION ALL\n    SELECT 3, 4\n  $$\n  ;\n\nSELECT * FROM TABLE(simple_table_function());\n\nSELECT * FROM TABLE(simple_table_function());\n+---+---+\n| X | Y |\n|---+---|\n| 1 | 2 |\n| 3 | 4 |\n+---+---+\n\nCREATE FUNCTION multiply1 (a number, b number)\n  RETURNS number\n  COMMENT='multiply two numbers'\n  AS 'a * b';\n\nCREATE OR REPLACE FUNCTION get_countries_for_user ( id NUMBER )\n  RETURNS TABLE (country_code CHAR, country_name VARCHAR)\n  AS 'SELECT DISTINCT c.country_code, c.country_name\n      FROM user_addresses a, countries c\n      WHERE a.user_id = id\n      AND c.country_code = a.country_code';\n\nCREATE OR ALTER FUNCTION multiply(a NUMBER, b NUMBER)\n  RETURNS NUMBER\n  AS 'a * b';\n\nCREATE OR ALTER SECURE FUNCTION multiply(a NUMBER, b NUMBER)\n  RETURNS NUMBER\n  COMMENT = 'Multiply two numbers.'\n  AS 'a * b';"
},
{
    "function_name": "CREATE FILE FORMAT",
    "summary": "Creates a named file format that describes a set of staged data to access or load into Snowflake tables.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-file-format",
    "title": "CREATE FILE FORMAT",
    "description": "Creates a named file format that describes a set of staged data to access or load into Snowflake tables.",
    "syntax": "CREATE [ OR REPLACE ] [ { TEMP | TEMPORARY | VOLATILE } ] FILE FORMAT [ IF NOT EXISTS ] <name>\n  [ TYPE = { CSV | JSON | AVRO | ORC | PARQUET | XML | CUSTOM} [ formatTypeOptions ] ]\n  [ COMMENT = '<string_literal>' ]",
    "example": "CREATE OR REPLACE FILE FORMAT my_csv_format\n  TYPE = CSV\n  COMMENT = 'my_file_format';\n\nCREATE OR ALTER FILE FORMAT my_csv_format\n  TYPE = CSV\n  FIELD_DELIMITER = '|'\n  SKIP_HEADER = 1\n  NULL_IF = ('NULL', 'null')\n  EMPTY_FIELD_AS_NULL = true\n  COMPRESSION = gzip;\n\nCREATE OR REPLACE FILE FORMAT my_json_format\n  TYPE = JSON;\n\nCREATE OR REPLACE FILE FORMAT my_parquet_format\n  TYPE = PARQUET\n  USE_VECTORIZED_SCANNER = TRUE\n  USE_LOGICAL_TYPE = TRUE;"
},
{
    "function_name": "CREATE FEATURE POLICY",
    "summary": "Creates a new feature policy.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-feature-policy",
    "title": "CREATE FEATURE POLICY",
    "description": "",
    "syntax": "CREATE [ OR REPLACE ] FEATURE POLICY [ IF NOT EXISTS ] <name>\n  BLOCKED_OBJECT_TYPES_FOR_CREATION = ( <type> [ , ... ] )\n  [ COMMENT = '<string-literal>' ]",
    "example": "CREATE FEATURE POLICY block_create_db_policy\n  BLOCKED_OBJECT_TYPES_FOR_CREATION = (DATABASES);\n\nCREATE FEATURE POLICY block_nothing_policy\n  BLOCKED_OBJECT_TYPES_FOR_CREATION = ();"
},
{
    "function_name": "CREATE FAILOVER GROUP",
    "summary": "Creates a new failover group of specified objects in the system.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-failover-group",
    "title": "CREATE FAILOVER GROUP",
    "description": "",
    "syntax": "CREATE FAILOVER GROUP [ IF NOT EXISTS ] <name>\n    OBJECT_TYPES = <object_type> [ , <object_type> , ... ]\n    [ ALLOWED_DATABASES = <db_name> [ , <db_name> , ... ] ]\n    [ ALLOWED_SHARES = <share_name> [ , <share_name> , ... ] ]\n    [ ALLOWED_INTEGRATION_TYPES = <integration_type_name> [ , <integration_type_name> , ... ] ]\n    ALLOWED_ACCOUNTS = <org_name>.<target_account_name> [ , <org_name>.<target_account_name> ,  ... ]\n    [ IGNORE EDITION CHECK ]\n    [ REPLICATION_SCHEDULE = '{ <num> MINUTE | USING CRON <expr> <time_zone> }' ]\n    [ [ WITH ] TAG ( <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' , ... ] ) ]\n    [ ERROR_INTEGRATION = <integration_name> ]",
    "example": "CREATE FAILOVER GROUP myfg\n    OBJECT_TYPES = DATABASES\n    ALLOWED_DATABASES = db1\n    ALLOWED_ACCOUNTS = myorg.myaccount2\n    REPLICATION_SCHEDULE = '10 MINUTE';\n\nCREATE FAILOVER GROUP myfg\n    AS REPLICA OF myorg.myaccount1.myfg;\n\nCREATE FAILOVER GROUP myfg\n    OBJECT_TYPES = DATABASES\n    ALLOWED_DATABASES = db1, db2, db3\n    ALLOWED_ACCOUNTS = myorg.myaccount2\n    REPLICATION_SCHEDULE = '10 MINUTE';\n\nCREATE FAILOVER GROUP myfg\n    AS REPLICA OF myorg.myaccount1.myfg;\n\nCREATE FAILOVER GROUP myfg\n    OBJECT_TYPES = USERS, ROLES, WAREHOUSES, RESOURCE MONITORS, INTEGRATIONS\n    ALLOWED_INTEGRATION_TYPES = STORAGE INTEGRATIONS, NOTIFICATION INTEGRATIONS\n    ALLOWED_ACCOUNTS = myorg.myaccount2\n    REPLICATION_SCHEDULE = '10 MINUTE';\n\nCREATE FAILOVER GROUP myfg\n    AS REPLICA OF myorg.myaccount1.myfg;"
},
{
    "function_name": "CREATE EXTERNAL VOLUME",
    "summary": "Creates a new external volume for Apache Iceberg™ tables in the account or replaces an existing external volume.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-external-volume",
    "title": "CREATE EXTERNAL VOLUME",
    "description": "Creates a new",
    "syntax": "CREATE [ OR REPLACE ] EXTERNAL VOLUME [IF NOT EXISTS]\n  <name>\n  STORAGE_LOCATIONS =\n    (\n      (\n        NAME = '<storage_location_name>'\n        { cloudProviderParams | s3CompatibleStorageParams }\n      )\n      [, (...), ...]\n    )\n  [ ALLOW_WRITES = { TRUE | FALSE }]\n  [ COMMENT = '<string_literal>' ]",
    "example": "CREATE OR REPLACE EXTERNAL VOLUME exvol\n  STORAGE_LOCATIONS =\n      (\n        (\n            NAME = 'my-s3-us-west-2'\n            STORAGE_PROVIDER = 'S3'\n            STORAGE_BASE_URL = 's3://my-example-bucket/'\n            STORAGE_AWS_ROLE_ARN = 'arn:aws:iam::123456789012:role/myrole'\n            ENCRYPTION=(TYPE='AWS_SSE_KMS' KMS_KEY_ID='1234abcd-12ab-34cd-56ef-1234567890ab')\n        )\n      )\n  ALLOW_WRITES = TRUE;\n\nCREATE EXTERNAL VOLUME exvol\n  STORAGE_LOCATIONS =\n    (\n      (\n        NAME = 'my-us-east-1'\n        STORAGE_PROVIDER = 'GCS'\n        STORAGE_BASE_URL = 'gcs://mybucket1/path1/'\n        ENCRYPTION=(TYPE='GCS_SSE_KMS' KMS_KEY_ID = '1234abcd-12ab-34cd-56ef-1234567890ab')\n      )\n    )\n  ALLOW_WRITES = TRUE;\n\nCREATE EXTERNAL VOLUME exvol\n  STORAGE_LOCATIONS =\n    (\n      (\n        NAME = 'my-azure-northeurope'\n        STORAGE_PROVIDER = 'AZURE'\n        STORAGE_BASE_URL = 'azure://exampleacct.blob.core.windows.net/my_container_northeurope/'\n        AZURE_TENANT_ID = 'a123b4c5-1234-123a-a12b-1a23b45678c9'\n      )\n    )\n  ALLOW_WRITES = TRUE;\n\nCREATE OR REPLACE EXTERNAL VOLUME ext_vol_s3_compat\n  STORAGE_LOCATIONS = (\n    (\n      NAME = 'my_s3_compat_storage_location'\n      STORAGE_PROVIDER = 'S3COMPAT'\n      STORAGE_BASE_URL = 's3compat://mybucket/unload/mys3compatdata'\n      CREDENTIALS = (\n        AWS_KEY_ID = '1a2b3c...'\n        AWS_SECRET_KEY = '4x5y6z...'\n      )\n      STORAGE_ENDPOINT = 'example.com'\n    )\n  )\n  ALLOW_WRITES = FALSE;"
},
{
    "function_name": "CREATE EXTERNAL TABLE",
    "summary": "Creates a new external table in the current/specified schema or replaces an existing external table.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-external-table",
    "title": "CREATE EXTERNAL TABLE",
    "description": "Creates a new",
    "syntax": "-- Partitions computed from expressions\nCREATE [ OR REPLACE ] EXTERNAL TABLE [IF NOT EXISTS]\n  <table_name>\n    ( [ <col_name> <col_type> AS <expr> | <part_col_name> <col_type> AS <part_expr> ]\n      [ inlineConstraint ]\n      [ , <col_name> <col_type> AS <expr> | <part_col_name> <col_type> AS <part_expr> ... ]\n      [ , ... ] )\n  cloudProviderParams\n  [ PARTITION BY ( <part_col_name> [, <part_col_name> ... ] ) ]\n  [ WITH ] LOCATION = externalStage\n  [ REFRESH_ON_CREATE =  { TRUE | FALSE } ]\n  [ AUTO_REFRESH = { TRUE | FALSE } ]\n  [ PATTERN = '<regex_pattern>' ]\n  FILE_FORMAT = ( { FORMAT_NAME = '<file_format_name>' | TYPE = { CSV | JSON | AVRO | ORC | PARQUET } [ formatTypeOptions ] } )\n  [ AWS_SNS_TOPIC = '<string>' ]\n  [ COPY GRANTS ]\n  [ COMMENT = '<string_literal>' ]\n  [ [ WITH ] ROW ACCESS POLICY <policy_name> ON (VALUE) ]\n  [ [ WITH ] TAG ( <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' , ... ] ) ]\n  [ WITH CONTACT ( <purpose> = <contact_name> [ , <purpose> = <contact_name> ... ] ) ]\n\n-- Partitions added and removed manually\nCREATE [ OR REPLACE ] EXTERNAL TABLE [IF NOT EXISTS]\n  <table_name>\n    ( [ <col_name> <col_type> AS <expr> | <part_col_name> <col_type> AS <part_expr> ]\n      [ inlineConstraint ]\n      [ , <col_name> <col_type> AS <expr> | <part_col_name> <col_type> AS <part_expr> ... ]\n      [ , ... ] )\n  cloudProviderParams\n  [ PARTITION BY ( <part_col_name> [, <part_col_name> ... ] ) ]\n  [ WITH ] LOCATION = externalStage\n  PARTITION_TYPE = USER_SPECIFIED\n  FILE_FORMAT = ( { FORMAT_NAME = '<file_format_name>' | TYPE = { CSV | JSON | AVRO | ORC | PARQUET } [ formatTypeOptions ] } )\n  [ COPY GRANTS ]\n  [ COMMENT = '<string_literal>' ]\n  [ [ WITH ] ROW ACCESS POLICY <policy_name> ON (VALUE) ]\n  [ [ WITH ] TAG ( <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' , ... ] ) ]\n  [ WITH CONTACT ( <purpose> = <contact_name> [ , <purpose> = <contact_name> ... ] ) ]\n\n-- Delta Lake\nCREATE [ OR REPLACE ] EXTERNAL TABLE [IF NOT EXISTS]\n  <table_name>\n    ( [ <col_name> <col_type> AS <expr> | <part_col_name> <col_type> AS <part_expr> ]\n      [ inlineConstraint ]\n      [ , <col_name> <col_type> AS <expr> | <part_col_name> <col_type> AS <part_expr> ... ]\n      [ , ... ] )\n  cloudProviderParams\n  [ PARTITION BY ( <part_col_name> [, <part_col_name> ... ] ) ]\n  [ WITH ] LOCATION = externalStage\n  PARTITION_TYPE = USER_SPECIFIED\n  FILE_FORMAT = ( { FORMAT_NAME = '<file_format_name>' | TYPE = { CSV | JSON | AVRO | ORC | PARQUET } [ formatTypeOptions ] } )\n  [ TABLE_FORMAT = DELTA ]\n  [ COPY GRANTS ]\n  [ COMMENT = '<string_literal>' ]\n  [ [ WITH ] ROW ACCESS POLICY <policy_name> ON (VALUE) ]\n  [ [ WITH ] TAG ( <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' , ... ] ) ]\n  [ WITH CONTACT ( <purpose> = <contact_name> [ , <purpose> = <contact_name> ... ] ) ]",
    "example": "CREATE STAGE s1\n  URL='s3://mybucket/files/logs/'\n  ...\n  ;\n\nCREATE STAGE s1\n  URL='gcs://mybucket/files/logs/'\n  ...\n  ;\n\nCREATE STAGE s1\n  URL='azure://mycontainer/files/logs/'\n  ...\n  ;\n\nSELECT metadata$filename FROM @s1/;\n\n+----------------------------------------+\n| METADATA$FILENAME                      |\n|----------------------------------------|\n| files/logs/2018/08/05/0524/log.parquet |\n| files/logs/2018/08/27/1408/log.parquet |\n+----------------------------------------+\n\nCREATE EXTERNAL TABLE et1(\n date_part date AS TO_DATE(SPLIT_PART(metadata$filename, '/', 3)\n   || '/' || SPLIT_PART(metadata$filename, '/', 4)\n   || '/' || SPLIT_PART(metadata$filename, '/', 5), 'YYYY/MM/DD'),\n timestamp bigint AS (value:timestamp::bigint),\n col2 varchar AS (value:col2::varchar))\n PARTITION BY (date_part)\n LOCATION=@s1/logs/\n AUTO_REFRESH = true\n FILE_FORMAT = (TYPE = PARQUET)\n AWS_SNS_TOPIC = 'arn:aws:sns:us-west-2:001234567890:s3_mybucket';\n\nCREATE EXTERNAL TABLE et1(\n  date_part date AS TO_DATE(SPLIT_PART(metadata$filename, '/', 3)\n    || '/' || SPLIT_PART(metadata$filename, '/', 4)\n    || '/' || SPLIT_PART(metadata$filename, '/', 5), 'YYYY/MM/DD'),\n  timestamp bigint AS (value:timestamp::bigint),\n  col2 varchar AS (value:col2::varchar))\n  PARTITION BY (date_part)\n  LOCATION=@s1/logs/\n  AUTO_REFRESH = true\n  FILE_FORMAT = (TYPE = PARQUET);\n\nCREATE EXTERNAL TABLE et1(\n  date_part date AS TO_DATE(SPLIT_PART(metadata$filename, '/', 3)\n    || '/' || SPLIT_PART(metadata$filename, '/', 4)\n    || '/' || SPLIT_PART(metadata$filename, '/', 5), 'YYYY/MM/DD'),\n  timestamp bigint AS (value:timestamp::bigint),\n  col2 varchar AS (value:col2::varchar))\n  PARTITION BY (date_part)\n  INTEGRATION = 'MY_INT'\n  LOCATION=@s1/logs/\n  AUTO_REFRESH = true\n  FILE_FORMAT = (TYPE = PARQUET);\n\nALTER EXTERNAL TABLE et1 REFRESH;\n\nSELECT timestamp, col2 FROM et1 WHERE date_part = to_date('08/05/2018');\n\nCREATE STAGE s2\n  URL='s3://mybucket/files/logs/'\n  ...\n  ;\n\nCREATE STAGE s2\n  URL='gcs://mybucket/files/logs/'\n  ...\n  ;\n\nCREATE STAGE s2\n  URL='azure://mycontainer/files/logs/'\n  ...\n  ;\n\ncreate external table et2(\n  col1 date as (parse_json(metadata$external_table_partition):COL1::date),\n  col2 varchar as (parse_json(metadata$external_table_partition):COL2::varchar),\n  col3 number as (parse_json(metadata$external_table_partition):COL3::number))\n  partition by (col1,col2,col3)\n  location=@s2/logs/\n  partition_type = user_specified\n  file_format = (type = parquet);\n\nALTER EXTERNAL TABLE et2 ADD PARTITION(col1='2022-01-24', col2='a', col3='12') LOCATION '2022/01';\n\n+---------------------------------------+----------------+-------------------------------+\n|                       file            |     status     |          description          |\n+---------------------------------------+----------------+-------------------------------+\n| mycontainer/files/logs/2022/01/24.csv | REGISTERED_NEW | File registered successfully. |\n| mycontainer/files/logs/2022/01/25.csv | REGISTERED_NEW | File registered successfully. |\n+---------------------------------------+----------------+-------------------------------+\n\nSELECT col1, col2, col3 FROM et1 WHERE col1 = TO_DATE('2022-01-24') AND col2 = 'a' ORDER BY METADATA$FILE_ROW_NUMBER;\n\nCREATE MATERIALIZED VIEW et1_mv\n  AS\n  SELECT col2 FROM et1;\n\nCREATE EXTERNAL TABLE mytable\n  USING TEMPLATE (\n    SELECT ARRAY_AGG(OBJECT_CONSTRUCT(*))\n    FROM TABLE(\n      INFER_SCHEMA(\n        LOCATION=>'@mystage',\n        FILE_FORMAT=>'my_parquet_format'\n      )\n    )\n  )\n  LOCATION=@mystage\n  FILE_FORMAT=my_parquet_format\n  AUTO_REFRESH=false;\n\nCREATE EXTERNAL TABLE mytable\n  USING TEMPLATE (\n    SELECT ARRAY_AGG(OBJECT_CONSTRUCT('COLUMN_NAME',COLUMN_NAME, 'TYPE',TYPE, 'NULLABLE', NULLABLE, 'EXPRESSION',EXPRESSION))\n    FROM TABLE(\n      INFER_SCHEMA(\n        LOCATION=>'@mystage',\n        FILE_FORMAT=>'my_parquet_format'\n      )\n    )\n  )\n  LOCATION=@mystage\n  FILE_FORMAT=my_parquet_format\n  AUTO_REFRESH=false;"
},
{
    "function_name": "CREATE EXTERNAL FUNCTION",
    "summary": "Creates a new external function.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-external-function",
    "title": "CREATE EXTERNAL FUNCTION",
    "description": "Creates a new",
    "syntax": "CREATE [ OR REPLACE ] [ SECURE ] EXTERNAL FUNCTION <name> ( [ <arg_name> <arg_data_type> ] [ , ... ] )\n  RETURNS <result_data_type>\n  [ [ NOT ] NULL ]\n  [ { CALLED ON NULL INPUT | { RETURNS NULL ON NULL INPUT | STRICT } } ]\n  [ { VOLATILE | IMMUTABLE } ]\n  [ COMMENT = '<string_literal>' ]\n  API_INTEGRATION = <api_integration_name>\n  [ HEADERS = ( '<header_1>' = '<value_1>' [ , '<header_2>' = '<value_2>' ... ] ) ]\n  [ CONTEXT_HEADERS = ( <context_function_1> [ , <context_function_2> ...] ) ]\n  [ MAX_BATCH_ROWS = <integer> ]\n  [ COMPRESSION = <compression_type> ]\n  [ REQUEST_TRANSLATOR = <request_translator_udf_name> ]\n  [ RESPONSE_TRANSLATOR = <response_translator_udf_name> ]\n  AS '<url_of_proxy_and_resource>';",
    "example": "CREATE OR REPLACE EXTERNAL FUNCTION local_echo(string_col VARCHAR)\n  RETURNS VARIANT\n  API_INTEGRATION = demonstration_external_api_integration_01\n  AS 'https://xyz.execute-api.us-west-2.amazonaws.com/prod/remote_echo';\n\nCREATE OR ALTER SECURE EXTERNAL FUNCTION local_echo(string_col VARCHAR)\n  RETURNS VARIANT\n  API_INTEGRATION = demonstration_external_api_integration_01\n  HEADERS = ('header_variable1'='header_value', 'header_variable2'='header_value2')\n  CONTEXT_HEADERS = (current_account)\n  MAX_BATCH_ROWS = 100\n  COMPRESSION = \"GZIP\"\n  AS 'https://xyz.execute-api.us-west-2.amazonaws.com/prod/remote_echo';"
},
{
    "function_name": "CREATE EXTERNAL ACCESS INTEGRATION",
    "summary": "Creates an external access integration for access to external network locations from a UDF or procedure handler.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-external-access-integration",
    "title": "CREATE EXTERNAL ACCESS INTEGRATION",
    "description": "Creates an",
    "syntax": "CREATE [ OR REPLACE ] EXTERNAL ACCESS INTEGRATION <name>\n  ALLOWED_NETWORK_RULES = ( <rule_name_1> [, <rule_name_2>, ... ] )\n  [ ALLOWED_API_AUTHENTICATION_INTEGRATIONS = ( { <integration_name_1> [, <integration_name_2>, ... ] | none } ) ]\n  [ ALLOWED_AUTHENTICATION_SECRETS = ( { <secret_name_1> [, <secret_name_2>, ... ] | all | none } ) ]\n  ENABLED = { TRUE | FALSE }\n  [ COMMENT = '<string_literal>' ]",
    "example": "CREATE OR REPLACE SECRET oauth_token\n  TYPE = OAUTH2\n  API_AUTHENTICATION = google_translate_oauth\n  OAUTH_REFRESH_TOKEN = 'my-refresh-token';\n\nUSE ROLE USERADMIN;\nCREATE OR REPLACE ROLE developer;\n\nUSE ROLE SECURITYADMIN;\nGRANT READ ON SECRET oauth_token TO ROLE developer;\n\nUSE ROLE SYSADMIN;\nCREATE OR REPLACE NETWORK RULE google_apis_network_rule\n  MODE = EGRESS\n  TYPE = HOST_PORT\n  VALUE_LIST = ('translation.googleapis.com');\n\nUSE ROLE ACCOUNTADMIN;\nCREATE OR REPLACE EXTERNAL ACCESS INTEGRATION google_apis_access_integration\n  ALLOWED_NETWORK_RULES = (google_apis_network_rule)\n  ALLOWED_AUTHENTICATION_SECRETS = (oauth_token)\n  ENABLED = true;\n\nGRANT USAGE ON INTEGRATION google_apis_access_integration TO ROLE developer;\n\nUSE ROLE developer;\n\nCREATE OR REPLACE FUNCTION google_translate_python(sentence STRING, language STRING)\nRETURNS STRING\nLANGUAGE PYTHON\nRUNTIME_VERSION = 3.10\nHANDLER = 'get_translation'\nEXTERNAL_ACCESS_INTEGRATIONS = (google_apis_access_integration)\nPACKAGES = ('snowflake-snowpark-python','requests')\nSECRETS = ('cred' = oauth_token )\nAS\n$$\nimport _snowflake\nimport requests\nimport json\nsession = requests.Session()\ndef get_translation(sentence, language):\n  token = _snowflake.get_oauth_access_token('cred')\n  url = \"https://translation.googleapis.com/language/translate/v2\"\n  data = {'q': sentence,'target': language}\n  response = session.post(url, json = data, headers = {\"Authorization\": \"Bearer \" + token})\n  return response.json()['data']['translations'][0]['translatedText']\n$$;\n\nGRANT USAGE ON FUNCTION google_translate_python(string, string) TO ROLE user;\n\nUSE ROLE user;\nSELECT google_translate_python('Happy Thursday!', 'zh-CN');\n\n-------------------------------------------------------\n| GOOGLE_TRANSLATE_PYTHON('HAPPY THURSDAY!', 'ZH-CN') |\n-------------------------------------------------------\n| 快乐星期四！                                          |\n-------------------------------------------------------"
},
{
    "function_name": "CREATE EVENT TABLE",
    "summary": "Creates an event table that captures events, including logged messages from functions and procedures.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-event-table",
    "title": "CREATE EVENT TABLE",
    "description": "Creates an",
    "syntax": "CREATE [ OR REPLACE ] EVENT TABLE [ IF NOT EXISTS ] <name>\n  [ CLUSTER BY ( <expr> [ , <expr> , ... ] ) ]\n  [ DATA_RETENTION_TIME_IN_DAYS = <integer> ]\n  [ MAX_DATA_EXTENSION_TIME_IN_DAYS = <integer> ]\n  [ CHANGE_TRACKING = { TRUE | FALSE } ]\n  [ DEFAULT_DDL_COLLATION = '<collation_specification>' ]\n  [ COPY GRANTS ]\n  [ [ WITH ] COMMENT = '<string_literal>' ]\n  [ [ WITH ] ROW ACCESS POLICY <policy_name> ON ( <col_name> [ , <col_name> ... ] ) ]\n  [ [ WITH ] TAG ( <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' , ... ] ) ]\n  [ WITH CONTACT ( <purpose> = <contact_name> [ , <purpose> = <contact_name> ... ] ) ]",
    "example": "CREATE EVENT TABLE my_events;"
},
{
    "function_name": "CREATE DYNAMIC TABLE",
    "summary": "Creates a dynamic table, based on a specified query.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-dynamic-table",
    "title": "CREATE DYNAMIC TABLE",
    "description": "Creates a",
    "syntax": "CREATE [ OR REPLACE ] [ TRANSIENT ] DYNAMIC TABLE [ IF NOT EXISTS ] <name> (\n    -- Column definition\n    <col_name> <col_type>\n      [ [ WITH ] MASKING POLICY <policy_name> [ USING ( <col_name> , <cond_col1> , ... ) ] ]\n      [ [ WITH ] PROJECTION POLICY <policy_name> ]\n      [ [ WITH ] TAG ( <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' , ... ] ) ]\n      [ WITH CONTACT ( <purpose> = <contact_name> [ , <purpose> = <contact_name> ... ] ) ]\n      [ COMMENT '<string_literal>' ]\n\n    -- Additional column definitions\n    [ , <col_name> <col_type> [ ... ] ]\n\n  )\n  TARGET_LAG = { '<num> { seconds | minutes | hours | days }' | DOWNSTREAM }\n  WAREHOUSE = <warehouse_name>\n  [ REFRESH_MODE = { AUTO | FULL | INCREMENTAL } ]\n  [ INITIALIZE = { ON_CREATE | ON_SCHEDULE } ]\n  [ CLUSTER BY ( <expr> [ , <expr> , ... ] ) ]\n  [ DATA_RETENTION_TIME_IN_DAYS = <integer> ]\n  [ MAX_DATA_EXTENSION_TIME_IN_DAYS = <integer> ]\n  [ COMMENT = '<string_literal>' ]\n  [ [ WITH ] ROW ACCESS POLICY <policy_name> ON ( <col_name> [ , <col_name> ... ] ) ]\n  [ [ WITH ] AGGREGATION POLICY <policy_name> [ ENTITY KEY ( <col_name> [ , <col_name> ... ] ) ] ]\n  [ [ WITH ] TAG ( <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' , ... ] ) ]\n  [ REQUIRE USER ]\n  AS <query>",
    "example": "CREATE OR REPLACE DYNAMIC TABLE my_dynamic_table\n  TARGET_LAG = '20 minutes'\n  WAREHOUSE = mywh\n  AS\n    SELECT product_id, product_name FROM staging_table;\n\nCREATE DYNAMIC ICEBERG TABLE my_dynamic_table (date TIMESTAMP_NTZ, id NUMBER, content STRING)\n  TARGET_LAG = '20 minutes'\n  WAREHOUSE = mywh\n  EXTERNAL_VOLUME = 'my_external_volume'\n  CATALOG = 'SNOWFLAKE'\n  BASE_LOCATION = 'my_iceberg_table'\n  AS\n    SELECT product_id, product_name FROM staging_table;\n\nCREATE DYNAMIC TABLE my_dynamic_table (date TIMESTAMP_NTZ, id NUMBER, content VARIANT)\n  TARGET_LAG = '20 minutes'\n  WAREHOUSE = mywh\n  CLUSTER BY (date, id)\n  AS\n    SELECT product_id, product_name FROM staging_table;\n\nCREATE DYNAMIC TABLE my_cloned_dynamic_table CLONE my_dynamic_table AT (TIMESTAMP => TO_TIMESTAMP_TZ('04/05/2013 01:02:03', 'mm/dd/yyyy hh24:mi:ss'));\n\nCREATE DYNAMIC TABLE my_dynamic_table\n  TARGET_LAG = 'DOWNSTREAM'\n  WAREHOUSE = mywh\n  INITIALIZE = on_schedule\n  REQUIRE USER\n  AS\n    SELECT product_id, product_name FROM staging_table;\n\nALTER DYNAMIC TABLE my_dynamic_table REFRESH COPY SESSION;"
},
{
    "function_name": "CREATE DBT PROJECT",
    "summary": "Creates a new dbt project object or replaces an existing dbt project.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-dbt-project",
    "title": "CREATE DBT PROJECT",
    "description": "",
    "syntax": "CREATE [ OR REPLACE ] DBT PROJECT [ IF NOT EXISTS ] <name>\n  [ FROM '<source_location>' ]\n  [ DEFAULT_ARGS = '<string_literal>' ]\n  [ DEFAULT_VERSION = { FIRST | LAST | VERSION$<num> | '<version_name_alias>' } ]\n  [ COMMENT = '<string_literal>' ]",
    "example": "CREATE DBT PROJECT sales_db.dbt_projects_schema.sales_model\n  FROM '@sales_db.integrations_schema.sales_dbt_git_stage/branches/main'\n  COMMENT = 'generates sales data models';\n\nCREATE DBT PROJECT sales_db.dbt_projects_schema.sw_region_sales_model\n  FROM '@sales_db.integrations_schema.sales_dbt_git_stage/branches/main/sales_dbt_projects_parent/sw_region_dbt_project'\n  COMMENT = 'generates data models for sw sales region';\n\nCREATE DBT PROJECT sales_db.dbt_projects_schema.sales_model_nw_region\n  FROM 'snow://dbt/sales_db.dbt_projects_schema.sales_model/versions/version$2'\n  DEFAULT_ARGS = '--select \"tag:nw_region\"'\n  COMMENT = 'generates data models for the NW sales region';\n\n-- Create a dbt project object from a workspace named \"My dbt Project Workspace\" in the user's personal database.\n\nCREATE DBT PROJECT sales_db.dbt_projects_schema.sales_model_from_workspace\n  FROM 'snow://workspace/user$.public.\"My dbt Project Workspace\"/versions/live'\n\n-- Execute the dbt project, specifying a subdirectory path for a dbt project within the workspace\n\nEXECUTE DBT PROJECT sales_db.dbt_projects_schema.sales_model_from_workspace\n  PROJECT_ROOT = 'project2'\n  ARGS = 'run --target prod';"
},
{
    "function_name": "CREATE DATASET",
    "summary": "Creates a new machine learning dataset in the current schema or the schema that you specify.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-dataset",
    "title": "CREATE DATASET",
    "description": "Creates a new",
    "syntax": "CREATE [ OR REPLACE ] [ IF NOT EXISTS ] DATASET <name>",
    "example": "CREATE DATASET my_dataset;\n\nCREATE OR REPLACE DATASET my_dataset;"
},
{
    "function_name": "CREATE DATABASE ROLE",
    "summary": "Create a new database role or replace an existing database role in the system.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-database-role",
    "title": "CREATE DATABASE ROLE",
    "description": "Create a new",
    "syntax": "CREATE [ OR REPLACE ] DATABASE ROLE [ IF NOT EXISTS ] <name>\n  [ COMMENT = '<string_literal>' ]",
    "example": "CREATE DATABASE ROLE d1.dr1;"
},
{
    "function_name": "CREATE DATABASE",
    "summary": "Creates a new database in the system.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-database",
    "title": "CREATE DATABASE",
    "description": "Creates a new database in the system.",
    "syntax": "CREATE [ OR REPLACE ] [ TRANSIENT ] DATABASE [ IF NOT EXISTS ] <name>\n    [ CLONE <source_schema>\n        [ { AT | BEFORE } ( { TIMESTAMP => <timestamp> | OFFSET => <time_difference> | STATEMENT => <id> } ) ]\n        [ IGNORE TABLES WITH INSUFFICIENT DATA RETENTION ]\n        [ IGNORE HYBRID TABLES ] ]\n    [ DATA_RETENTION_TIME_IN_DAYS = <integer> ]\n    [ MAX_DATA_EXTENSION_TIME_IN_DAYS = <integer> ]\n    [ EXTERNAL_VOLUME = <external_volume_name> ]\n    [ CATALOG = <catalog_integration_name> ]\n    [ REPLACE_INVALID_CHARACTERS = { TRUE | FALSE } ]\n    [ DEFAULT_DDL_COLLATION = '<collation_specification>' ]\n    [ STORAGE_SERIALIZATION_POLICY = { COMPATIBLE | OPTIMIZED } ]\n    [ COMMENT = '<string_literal>' ]\n    [ CATALOG_SYNC = '<snowflake_open_catalog_integration_name>' ]\n    [ CATALOG_SYNC_NAMESPACE_MODE = { NEST | FLATTEN } ]\n    [ CATALOG_SYNC_NAMESPACE_FLATTEN_DELIMITER = '<string_literal>' ]\n    [ [ WITH ] TAG ( <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' , ... ] ) ]\n    [ WITH CONTACT ( <purpose> = <contact_name> [ , <purpose> = <contact_name> ... ] ) ]",
    "example": "CREATE DATABASE mytestdb;\n\nCREATE DATABASE mytestdb2 DATA_RETENTION_TIME_IN_DAYS = 10;\n\nSHOW DATABASES LIKE 'my%';\n\n+---------------------------------+------------+------------+------------+--------+----------+---------+---------+----------------+\n| created_on                      | name       | is_default | is_current | origin | owner    | comment | options | retention_time |\n|---------------------------------+------------+------------+------------+--------+----------+---------+---------+----------------|\n| Tue, 17 Mar 2016 16:57:04 -0700 | MYTESTDB   | N          | N          |        | PUBLIC   |         |         | 1              |\n| Tue, 17 Mar 2016 17:06:32 -0700 | MYTESTDB2  | N          | N          |        | PUBLIC   |         |         | 10             |\n+---------------------------------+------------+------------+------------+--------+----------+---------+---------+----------------+\n\nCREATE TRANSIENT DATABASE mytransientdb;\n\nSHOW DATABASES LIKE 'my%';\n\n+---------------------------------+---------------+------------+------------+--------+----------+---------+-----------+----------------+\n| created_on                      | name          | is_default | is_current | origin | owner    | comment | options   | retention_time |\n|---------------------------------+---------------+------------+------------+--------+----------+---------+-----------+----------------|\n| Tue, 17 Mar 2016 16:57:04 -0700 | MYTESTDB      | N          | N          |        | PUBLIC   |         |           | 1              |\n| Tue, 17 Mar 2016 17:06:32 -0700 | MYTESTDB2     | N          | N          |        | PUBLIC   |         |           | 10             |\n| Tue, 17 Mar 2015 17:07:51 -0700 | MYTRANSIENTDB | N          | N          |        | PUBLIC   |         | TRANSIENT | 1              |\n+---------------------------------+---------------+------------+------------+--------+----------+---------+-----------+----------------+\n\nCREATE DATABASE snow_sales FROM SHARE ab67890.sales_s;"
},
{
    "function_name": "CREATE DATA METRIC FUNCTION",
    "summary": "Creates a new data metric function (DMF) in the current or specified schema, or replaces an existing data metric function.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-data-metric-function",
    "title": "CREATE DATA METRIC FUNCTION",
    "description": "",
    "syntax": "CREATE [ OR REPLACE ] [ SECURE ] DATA METRIC FUNCTION [ IF NOT EXISTS ] <name>\n  ( <table_arg> TABLE( <col_arg> <data_type> [ , ... ] )\n    [ , <table_arg> TABLE( <col_arg> <data_type> [ , ... ] ) ] )\n  RETURNS NUMBER [ [ NOT ] NULL ]\n  [ LANGUAGE SQL ]\n  [ COMMENT = '<string_literal>' ]\n  AS\n  '<expression>'",
    "example": ""
},
{
    "function_name": "CREATE CORTEX SEARCH SERVICE",
    "summary": "Creates a new Cortex Search service or replaces an existing one.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-cortex-search",
    "title": "CREATE CORTEX SEARCH SERVICE",
    "description": "Creates a new",
    "syntax": "CREATE [ OR REPLACE ] CORTEX SEARCH SERVICE [ IF NOT EXISTS ] <name>\n  ON <search_column>\n  ATTRIBUTES <col_name> [ , ... ]\n  WAREHOUSE = <warehouse_name>\n  TARGET_LAG = '<num> { seconds | minutes | hours | days }'\n  [ EMBEDDING_MODEL = <embedding_model_name> ]\n  [ INITIALIZE = { ON_CREATE | ON_SCHEDULE } ]\n  [ COMMENT = '<comment>' ]\n  AS <query>;",
    "example": ""
},
{
    "function_name": "CREATE CONTACT",
    "summary": "Creates a new contact or replaces an existing contact.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-contact",
    "title": "CREATE CONTACT",
    "description": "",
    "syntax": "CREATE [ OR REPLACE ] CONTACT [ IF NOT EXISTS ] <name>\n  [ {\n    USERS = ( <user-name> [ , <user_name> ... ] )\n    | EMAIL_DISTRIBUTION_LIST = '<email>'\n    | URL = '<url>'\n    } ]\n  [ COMMENT = '<string_literal>' ]",
    "example": "CREATE CONTACT my_contact\n  EMAIL_DISTRIBUTION_LIST = 'comany_support@example.com';"
},
{
    "function_name": "CREATE CONNECTION",
    "summary": "Creates a new connection in the account.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-connection",
    "title": "CREATE CONNECTION",
    "description": "",
    "syntax": "CREATE CONNECTION [ IF NOT EXISTS ] <name>\n  [ COMMENT = '<string_literal>' ]",
    "example": "CREATE CONNECTION IF NOT EXISTS myconnection;\n\nCREATE CONNECTION myconnection AS REPLICA OF myorg.myaccount1.myconnection;"
},
{
    "function_name": "CREATE COMPUTE POOL",
    "summary": "Creates a new compute pool in the current account.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-compute-pool",
    "title": "CREATE COMPUTE POOL",
    "description": "",
    "syntax": "CREATE COMPUTE POOL [ IF NOT EXISTS ] <name>\n  [ FOR APPLICATION <app-name> ]\n  MIN_NODES = <num>\n  MAX_NODES = <num>\n  INSTANCE_FAMILY = <instance_family_name>\n  [ AUTO_RESUME = { TRUE | FALSE } ]\n  [ INITIALLY_SUSPENDED = { TRUE | FALSE } ]\n  [ AUTO_SUSPEND_SECS = <num>  ]\n  [ [ WITH ] TAG ( <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' , ... ] ) ]\n  [ COMMENT = '<string_literal>' ]",
    "example": "CREATE COMPUTE POOL tutorial_compute_pool\n  MIN_NODES = 1\n  MAX_NODES = 1\n  INSTANCE_FAMILY = CPU_X64_XS;\n\nCREATE COMPUTE POOL tutorial_compute_pool\n  MIN_NODES = 1\n  MAX_NODES = 1\n  INSTANCE_FAMILY = CPU_X64_XS\n  AUTO_RESUME = FALSE;"
},
{
    "function_name": "CREATE <object> … CLONE",
    "summary": "Creates a copy of an existing object in the system.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-clone",
    "title": "CREATE",
    "description": "Creates a copy of an existing object in the system. This command is primarily used for creating",
    "syntax": "CREATE [ OR REPLACE ] { DATABASE | SCHEMA } [ IF NOT EXISTS ] <object_name>\n  CLONE <source_object_name>\n    [ { AT | BEFORE } ( { TIMESTAMP => <timestamp> | OFFSET => <time_difference> | STATEMENT => <id> } ) ]\n    [ IGNORE TABLES WITH INSUFFICIENT DATA RETENTION ]\n    [ IGNORE HYBRID TABLES ]\n    [ INCLUDE INTERNAL STAGES ]\n  ...",
    "example": "CREATE DATABASE mytestdb_clone CLONE mytestdb;\n\nCREATE SCHEMA mytestschema_clone CLONE testschema;\n\nCREATE TABLE orders_clone CLONE orders;\n\nCREATE SCHEMA mytestschema_clone_restore CLONE testschema\n  BEFORE (TIMESTAMP => TO_TIMESTAMP(40*365*86400));\n\nCREATE TABLE orders_clone_restore CLONE orders\n  AT (TIMESTAMP => TO_TIMESTAMP_TZ('04/05/2013 01:02:03', 'mm/dd/yyyy hh24:mi:ss'));\n\nCREATE TABLE orders_clone_restore CLONE orders BEFORE (STATEMENT => '8e5d0ca9-005e-44e6-b858-a8f5b37c5726');\n\nCREATE DATABASE restored_db CLONE my_db\n  AT (TIMESTAMP => DATEADD(days, -4, current_timestamp)::timestamp_tz)\n  IGNORE TABLES WITH INSUFFICIENT DATA RETENTION;\n\nCREATE OR REPLACE SCHEMA clone_ht_schema CLONE ht_schema\n  IGNORE HYBRID TABLES;"
},
{
    "function_name": "CREATE CATALOG INTEGRATION (Apache Iceberg™ REST)",
    "summary": "Creates a new catalog integration in the account or replaces an existing catalog integration for Apache Iceberg™ tables managed in a remote catalog that complies with the open source Apache Iceberg™ REST OpenAPI specification.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-catalog-integration-rest",
    "title": "CREATE CATALOG INTEGRATION (Apache Iceberg™ REST)",
    "description": "Creates a new",
    "syntax": "CREATE [ OR REPLACE ] CATALOG INTEGRATION [ IF NOT EXISTS ] <name>\n  CATALOG_SOURCE = ICEBERG_REST\n  TABLE_FORMAT = ICEBERG\n  [ CATALOG_NAMESPACE = '<namespace>' ]\n  REST_CONFIG = (\n    restConfigParams\n  )\n  REST_AUTHENTICATION = (\n    restAuthenticationParams\n  )\n  ENABLED = { TRUE | FALSE }\n  [ REFRESH_INTERVAL_SECONDS = <value> ]\n  [ COMMENT = '<string_literal>' ]",
    "example": "CREATE OR REPLACE CATALOG INTEGRATION tabular_catalog_int\n  CATALOG_SOURCE = ICEBERG_REST\n  TABLE_FORMAT = ICEBERG\n  CATALOG_NAMESPACE = 'default'\n  REST_CONFIG = (\n    CATALOG_URI = 'https://api.tabular.io/ws'\n    CATALOG_NAME = '<tabular_warehouse_name>'\n  )\n  REST_AUTHENTICATION = (\n    TYPE = OAUTH\n    OAUTH_TOKEN_URI = 'https://api.tabular.io/ws/v1/oauth/tokens'\n    OAUTH_CLIENT_ID = '<oauth_client_id>'\n    OAUTH_CLIENT_SECRET = '<oauth_client_secret>'\n    OAUTH_ALLOWED_SCOPES = ('catalog')\n  )\n  ENABLED = TRUE;\n\nCREATE CATALOG INTEGRATION glue_rest_catalog_int\n  CATALOG_SOURCE = ICEBERG_REST\n  TABLE_FORMAT = ICEBERG\n  CATALOG_NAMESPACE = 'rest_catalog_integration'\n  REST_CONFIG = (\n    CATALOG_URI = 'https://glue.us-west-2.amazonaws.com/iceberg'\n    CATALOG_API_TYPE = AWS_GLUE\n    CATALOG_NAME = '123456789012'\n  )\n  REST_AUTHENTICATION = (\n    TYPE = SIGV4\n    SIGV4_IAM_ROLE = 'arn:aws:iam::123456789012:role/my-role'\n    SIGV4_SIGNING_REGION = 'us-west-2'\n  )\n  ENABLED = TRUE;"
},
{
    "function_name": "CREATE CATALOG INTEGRATION (Snowflake Open Catalog)",
    "summary": "Creates a new catalog integration for Apache Iceberg™ tables that integrate with Snowflake Open Catalog in the account or replaces an existing catalog integration.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-catalog-integration-open-catalog",
    "title": "CREATE CATALOG INTEGRATION (Snowflake Open Catalog)",
    "description": "Creates a new",
    "syntax": "CREATE [ OR REPLACE ] CATALOG INTEGRATION [ IF NOT EXISTS ]\n  <name>\n  CATALOG_SOURCE = POLARIS\n  TABLE_FORMAT = ICEBERG\n  [ CATALOG_NAMESPACE = '<open_catalog_namespace>' ]\n  REST_CONFIG = (\n    CATALOG_URI = '<open_catalog_account_url>'\n    [ CATALOG_API_TYPE = PUBLIC ]\n    CATALOG_NAME = '<open_catalog_catalog_name>'\n  )\n  REST_AUTHENTICATION = (\n    TYPE = OAUTH\n    OAUTH_CLIENT_ID = '<oauth_client_id>'\n    OAUTH_CLIENT_SECRET = '<oauth_secret>'\n    OAUTH_ALLOWED_SCOPES = ('<scope 1>', '<scope 2>')\n  )\n  ENABLED = { TRUE | FALSE }\n  [ REFRESH_INTERVAL_SECONDS = <value> ]\n  [ COMMENT = '<string_literal>' ]",
    "example": "CREATE OR REPLACE CATALOG INTEGRATION open_catalog_int\n  CATALOG_SOURCE = POLARIS\n  TABLE_FORMAT = ICEBERG\n  CATALOG_NAMESPACE = 'my_catalog_namespace'\n  REST_CONFIG = (\n    CATALOG_URI = 'https://my_org_name-my_snowflake_open_catalog_account_name.snowflakecomputing.com/polaris/api/catalog'\n    CATALOG_NAME = 'my_catalog_name'\n  )\n  REST_AUTHENTICATION = (\n    TYPE = OAUTH\n    OAUTH_CLIENT_ID = 'my_client_id'\n    OAUTH_CLIENT_SECRET = 'my_client_secret'\n    OAUTH_ALLOWED_SCOPES = ('PRINCIPAL_ROLE:ALL')\n  )\n  ENABLED = TRUE;\n\nCREATE OR REPLACE CATALOG INTEGRATION open_catalog_int2\n  CATALOG_SOURCE = POLARIS\n  TABLE_FORMAT = ICEBERG\n  REST_CONFIG = (\n    CATALOG_URI = 'https://my_org_name-my_snowflake_open_catalog_account_name.snowflakecomputing.com/polaris/api/catalog'\n    CATALOG_NAME = 'customers'\n  )\n  REST_AUTHENTICATION = (\n    TYPE = OAUTH\n    OAUTH_CLIENT_ID = 'my_client_id'\n    OAUTH_CLIENT_SECRET = 'my_client_secret'\n    OAUTH_ALLOWED_SCOPES = ('PRINCIPAL_ROLE:ALL')\n  )\n  ENABLED = TRUE;"
},
{
    "function_name": "CREATE CATALOG INTEGRATION (Object storage)",
    "summary": "Creates a new catalog integration in the account or replaces an existing catalog integration for the following sources.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-catalog-integration-object-storage",
    "title": "CREATE CATALOG INTEGRATION (Object storage)",
    "description": "Creates a new",
    "syntax": "CREATE [ OR REPLACE ] CATALOG INTEGRATION [IF NOT EXISTS]\n  <name>\n  CATALOG_SOURCE = OBJECT_STORE\n  TABLE_FORMAT = { ICEBERG | DELTA }\n  ENABLED = { TRUE | FALSE }\n  [ REFRESH_INTERVAL_SECONDS = <value> ]\n  [ COMMENT = '<string_literal>' ]",
    "example": "CREATE CATALOG INTEGRATION myCatalogInt\n  CATALOG_SOURCE = OBJECT_STORE\n  TABLE_FORMAT = ICEBERG\n  ENABLED = TRUE;"
},
{
    "function_name": "CREATE CATALOG INTEGRATION (AWS Glue)",
    "summary": "Creates a new catalog integration in the account or replaces an existing catalog integration for Apache Iceberg™ tables that use AWS Glue as the catalog.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-catalog-integration-glue",
    "title": "CREATE CATALOG INTEGRATION (AWS Glue)",
    "description": "Creates a new",
    "syntax": "CREATE [ OR REPLACE ] CATALOG INTEGRATION [IF NOT EXISTS]\n  <name>\n  CATALOG_SOURCE = GLUE\n  TABLE_FORMAT = ICEBERG\n  GLUE_AWS_ROLE_ARN = '<arn-for-AWS-role-to-assume>'\n  GLUE_CATALOG_ID = '<glue-catalog-id>'\n  [ GLUE_REGION = '<AWS-region-of-the-glue-catalog>' ]\n  [ CATALOG_NAMESPACE = '<catalog-namespace>' ]\n  ENABLED = { TRUE | FALSE }\n  [ REFRESH_INTERVAL_SECONDS = <value> ]\n  [ COMMENT = '<string_literal>' ]",
    "example": "CREATE CATALOG INTEGRATION glueCatalogInt\n  CATALOG_SOURCE = GLUE\n  CATALOG_NAMESPACE = 'myNamespace'\n  TABLE_FORMAT = ICEBERG\n  GLUE_AWS_ROLE_ARN = 'arn:aws:iam::123456789012:role/myGlueRole'\n  GLUE_CATALOG_ID = '123456789012'\n  GLUE_REGION = 'us-east-2'\n  ENABLED = TRUE;"
},
{
    "function_name": "CREATE CATALOG INTEGRATION",
    "summary": "Creates a new catalog integration for Apache Iceberg™ tables in the account or replaces an existing catalog integration.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-catalog-integration",
    "title": "CREATE CATALOG INTEGRATION",
    "description": "Creates a new",
    "syntax": "",
    "example": ""
},
{
    "function_name": "CREATE AUTHENTICATION POLICY",
    "summary": "Creates a new authentication policy in the current or specified schema or replaces an existing authentication policy.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-authentication-policy",
    "title": "CREATE AUTHENTICATION POLICY",
    "description": "Creates a new",
    "syntax": "CREATE [ OR REPLACE ] AUTHENTICATION POLICY [ IF NOT EXISTS ] <name>\n  [ AUTHENTICATION_METHODS = ( '<string_literal>' [ , '<string_literal>' , ...  ] ) ]\n  [ MFA_AUTHENTICATION_METHODS = ( '<string_literal>' [ , '<string_literal>' , ...  ] ) ]\n  [ MFA_ENROLLMENT = { REQUIRED | OPTIONAL } ]\n  [ MFA_POLICY= ( ALLOWED_METHODS = ( { 'ALL' | 'PASSKEY' | 'TOTP' | 'DUO' } [ , { 'PASSKEY' | 'TOTP' | 'DUO' } ... ] ) ) ]\n  [ CLIENT_TYPES = ( '<string_literal>' [ , '<string_literal>' , ...  ] ) ]\n  [ SECURITY_INTEGRATIONS = ( '<string_literal>' [ , '<string_literal>' , ... ] ) ]\n  [ PAT_POLICY = ( {list_of_properties} ) ]\n  [ COMMENT = '<string_literal>' ]",
    "example": ""
},
{
    "function_name": "CREATE APPLICATION ROLE",
    "summary": "Creates a new application role or replaces an existing application role.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-application-role",
    "title": "CREATE APPLICATION ROLE",
    "description": "",
    "syntax": "CREATE [ OR REPLACE ] APPLICATION ROLE [ IF NOT EXISTS ] <name>\n  [ COMMENT = '<string_literal>' ]",
    "example": "CREATE APPLICATION ROLE app_role\n  COMMENT = 'Application role for the Hello Snowflake application.';"
},
{
    "function_name": "CREATE APPLICATION PACKAGE",
    "summary": "Creates a new application package that contains the data content and application logic of",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-application-package",
    "title": "CREATE APPLICATION PACKAGE",
    "description": "",
    "syntax": "CREATE APPLICATION PACKAGE [ IF NOT EXISTS ] <name>\n  [ DATA_RETENTION_TIME_IN_DAYS = <integer> ]\n  [ MAX_DATA_EXTENSION_TIME_IN_DAYS = <integer> ]\n  [ DEFAULT_DDL_COLLATION = '<collation_specification>' ]\n  [ COMMENT = '<string_literal>' ]\n  [ [ WITH ] TAG ( <tag_name> = '<tag_value>' [ , ... ] ) ]\n  [ DISTRIBUTION = { INTERNAL | EXTERNAL } ]\n  [ MULTIPLE_INSTANCES = TRUE ]\n  [ ENABLE_RELEASE_CHANNELS = TRUE ]",
    "example": "CREATE APPLICATION PACKAGE hello_snowflake_package;\n\n+-----------------------------------------------------------------------+\n| status                                                                |\n|-----------------------------------------------------------------------|\n| Application Package 'hello_snowflake_package' created successfully.   |\n+-----------------------------------------------------------------------+"
},
{
    "function_name": "CREATE APPLICATION",
    "summary": "Creates a new application object using an application package or listing.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-application",
    "title": "CREATE APPLICATION",
    "description": "",
    "syntax": "CREATE APPLICATION <name> FROM APPLICATION PACKAGE <package_name>\n   [ COMMENT = '<string_literal>' ]\n   [ [ WITH ] TAG ( <tag_name> = '<tag_value>' [ , ... ] ) ]\n   [ AUTHORIZE_TELEMETRY_EVENT_SHARING = { TRUE | FALSE } ]\n   [ WITH FEATURE POLICY = <policy_name> ]\n\nCREATE APPLICATION <name> FROM APPLICATION PACKAGE <package_name>\n  USING <path_to_version_directory>\n  [ DEBUG_MODE = { TRUE | FALSE } ]\n  [ COMMENT = '<string_literal>' ]\n  [ [ WITH ] TAG ( <tag_name> = '<tag_value>' [, ...] ) ]\n  [ AUTHORIZE_TELEMETRY_EVENT_SHARING = { TRUE | FALSE } ]\n  [ WITH FEATURE POLICY = <policy_name> ]\n\n\nCREATE APPLICATION <name> FROM APPLICATION PACKAGE <package_name>\n  USING VERSION  <version_identifier> [ PATCH <patch_num> ]\n  [ DEBUG_MODE = { TRUE | FALSE } ]\n  [ COMMENT = '<string_literal>' ]\n  [ [ WITH ] TAG ( <tag_name> = '<tag_value>' [ , ... ] ) ]\n  [ AUTHORIZE_TELEMETRY_EVENT_SHARING = { TRUE | FALSE } ]\n  [ WITH FEATURE POLICY = <policy_name> ]\n\nCREATE APPLICATION <name> FROM LISTING <listing_name>\n   [ COMMENT = '<string_literal>' ]\n   [ [ WITH ] TAG ( <tag_name> = '<tag_value>' [ , ... ] ) ]\n   [ BACKGROUND_INSTALL = { TRUE | FALSE } ]\n   [ AUTHORIZE_TELEMETRY_EVENT_SHARING = { TRUE | FALSE } ]\n   [ WITH FEATURE POLICY = <policy_name> ]",
    "example": "CREATE APPLICATION hello_snowflake_app\n  FROM APPLICATION PACKAGE hello_snowflake_package\n  USING VERSION v1;\n\n+---------------------------------------------------------+\n| status                                                  |\n|---------------------------------------------------------|\n| Application 'hello_snowflake_app' created successfully. |\n+---------------------------------------------------------+\n\nCREATE APPLICATION hello_snowflake_app\n  FROM APPLICATION PACKAGE hello_snowflake_package\n  USING '@hello_snowflake_code.core.hello_snowflake_stage';\n\n+---------------------------------------------------------+\n| status                                                  |\n|---------------------------------------------------------|\n| Application 'hello_snowflake_app' created successfully. |\n+---------------------------------------------------------+"
},
{
    "function_name": "CREATE API INTEGRATION",
    "summary": "Creates a new API integration object in the account or replaces an existing API integration.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-api-integration",
    "title": "CREATE API INTEGRATION",
    "description": "Creates a new API integration object in the account or replaces an existing API integration.",
    "syntax": "CREATE [ OR REPLACE ] API INTEGRATION [ IF NOT EXISTS ] <integration_name>\n  API_PROVIDER = { aws_api_gateway | aws_private_api_gateway | aws_gov_api_gateway | aws_gov_private_api_gateway }\n  API_AWS_ROLE_ARN = '<iam_role>'\n  [ API_KEY = '<api_key>' ]\n  API_ALLOWED_PREFIXES = ('<...>')\n  ENABLED = { TRUE | FALSE }\n  [ COMMENT = '<string_literal>' ]\n  ;",
    "example": "CREATE OR REPLACE API INTEGRATION demonstration_external_api_integration_01\n  API_PROVIDER = aws_api_gateway\n  API_AWS_ROLE_ARN = 'arn:aws:iam::123456789012:role/my_cloud_account_role'\n  API_ALLOWED_PREFIXES = ('https://xyz.execute-api.us-west-2.amazonaws.com/production')\n  ENABLED = TRUE;\n\nCREATE OR REPLACE EXTERNAL FUNCTION local_echo(string_col VARCHAR)\n  RETURNS VARIANT\n  API_INTEGRATION = demonstration_external_api_integration_01\n  AS 'https://xyz.execute-api.us-west-2.amazonaws.com/production/remote_echo';"
},
{
    "function_name": "CREATE ALERT",
    "summary": "Creates a new alert in the current schema.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-alert",
    "title": "CREATE ALERT",
    "description": "Creates a new",
    "syntax": "CREATE [ OR REPLACE ] ALERT [ IF NOT EXISTS ] <name>\n  [ [ WITH ] TAG ( <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' , ... ] ) ]\n  [ SCHEDULE = '{ <num> MINUTE | USING CRON <expr> <time_zone> }' ]\n  [ WAREHOUSE = <warehouse_name> ]\n  [ COMMENT = '<string_literal>' ]\n  IF( EXISTS(\n    <condition>\n  ))\n  THEN\n    <action>",
    "example": ""
},
{
    "function_name": "CREATE AGGREGATION POLICY",
    "summary": "Creates a new aggregation policy in the current/specified schema or replaces an existing aggregation policy.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-aggregation-policy",
    "title": "CREATE AGGREGATION POLICY",
    "description": "",
    "syntax": "CREATE [ OR REPLACE ] AGGREGATION POLICY [ IF NOT EXISTS ] <name>\n  AS () RETURNS AGGREGATION_CONSTRAINT -> <body>\n  [ COMMENT = '<string_literal>' ]",
    "example": "CREATE AGGREGATION POLICY my_policy AS ()\n  RETURNS AGGREGATION_CONSTRAINT ->\n  AGGREGATION_CONSTRAINT(MIN_GROUP_SIZE => 5);\n\nCREATE AGGREGATION POLICY my_policy AS ()\n  RETURNS AGGREGATION_CONSTRAINT ->\n    CASE\n      WHEN CURRENT_ROLE() = 'ADMIN'\n        THEN NO_AGGREGATION_CONSTRAINT()\n      ELSE AGGREGATION_CONSTRAINT(MIN_GROUP_SIZE => 5)\n    END;"
},
{
    "function_name": "CREATE ACCOUNT",
    "summary": "Creates a new account in your organization.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-account",
    "title": "CREATE ACCOUNT",
    "description": "Creates a new account in your organization.",
    "syntax": "CREATE ACCOUNT <name>\n      ADMIN_NAME = '<string_literal>'\n    { ADMIN_PASSWORD = '<string_literal>' | ADMIN_RSA_PUBLIC_KEY = '<string_literal>' }\n    [ ADMIN_USER_TYPE = { PERSON | SERVICE | LEGACY_SERVICE | NULL } ]\n    [ FIRST_NAME = '<string_literal>' ]\n    [ LAST_NAME = '<string_literal>' ]\n      EMAIL = '<string_literal>'\n    [ MUST_CHANGE_PASSWORD = { TRUE | FALSE } ]\n      EDITION = { STANDARD | ENTERPRISE | BUSINESS_CRITICAL }\n    [ REGION_GROUP = <region_group_id> ]\n    [ REGION = <snowflake_region_id> ]\n    [ COMMENT = '<string_literal>' ]\n    [ POLARIS = { TRUE | FALSE } ]",
    "example": "create account myaccount1\n  admin_name = admin\n  admin_password = 'TestPassword1'\n  first_name = Jane\n  last_name = Smith\n  email = 'myemail@myorg.org'\n  edition = enterprise\n  region = aws_us_west_2;\n\ncreate account myaccount2\n  admin_name = admin\n  admin_password = 'TestPassword1'\n  email = 'myemail@myorg.org'\n  edition = enterprise;\n\ncreate account myaccount1\n  admin_name = admin\n  admin_password = 'TestPassword1'\n  first_name = Jane\n  last_name = Smith\n  email = 'myemail@myorg.org'\n  edition = enterprise\n  region = aws_us_west_2\n  polaris = true;"
},
{
    "function_name": "CREATE <object>",
    "summary": "Creates a new object of the specified type.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create",
    "title": "CREATE",
    "description": "Creates a new object of the specified type.",
    "syntax": "",
    "example": ""
},
{
    "function_name": "COPY INTO <table>",
    "summary": "Loads data from files to an existing table.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/copy-into-table",
    "title": "COPY INTO",
    "description": "Loads data from files to an existing table. The files must already be in one of the following locations:",
    "syntax": "/* Standard data load */\nCOPY INTO [<namespace>.]<table_name>\n     FROM { internalStage | externalStage | externalLocation }\n[ FILES = ( '<file_name>' [ , '<file_name>' ] [ , ... ] ) ]\n[ PATTERN = '<regex_pattern>' ]\n[ FILE_FORMAT = ( { FORMAT_NAME = '[<namespace>.]<file_format_name>' |\n                    TYPE = { CSV | JSON | AVRO | ORC | PARQUET | XML } [ formatTypeOptions ] } ) ]\n[ copyOptions ]\n[ VALIDATION_MODE = RETURN_<n>_ROWS | RETURN_ERRORS | RETURN_ALL_ERRORS ]\n\n/* Data load with transformation */\nCOPY INTO [<namespace>.]<table_name> [ ( <col_name> [ , <col_name> ... ] ) ]\n     FROM ( SELECT [<alias>.]$<file_col_num>[.<element>] [ , [<alias>.]$<file_col_num>[.<element>] ... ]\n            FROM { internalStage | externalStage } )\n[ FILES = ( '<file_name>' [ , '<file_name>' ] [ , ... ] ) ]\n[ PATTERN = '<regex_pattern>' ]\n[ FILE_FORMAT = ( { FORMAT_NAME = '[<namespace>.]<file_format_name>' |\n                    TYPE = { CSV | JSON | AVRO | ORC | PARQUET | XML } [ formatTypeOptions ] } ) ]\n[ copyOptions ]",
    "example": "COPY INTO mytable\nFROM @my_int_stage;\n\nCOPY INTO mytable\nFILE_FORMAT = (TYPE = CSV);\n\nCOPY INTO mytable from @~/staged\nFILE_FORMAT = (FORMAT_NAME = 'mycsv');\n\nCOPY INTO mycsvtable\n  FROM @my_ext_stage/tutorials/dataloading/contacts1.csv;\n\nCOPY INTO mytable\n  FROM @my_ext_stage/tutorials/dataloading/sales.json.gz\n  FILE_FORMAT = (TYPE = 'JSON')\n  MATCH_BY_COLUMN_NAME='CASE_INSENSITIVE';\n\nCOPY INTO mytable\n  FROM s3://mybucket/data/files\n  STORAGE_INTEGRATION = myint\n  ENCRYPTION=(MASTER_KEY = 'eSx...')\n  FILE_FORMAT = (FORMAT_NAME = my_csv_format);\n\nCOPY INTO mytable\n  FROM s3://mybucket/data/files\n  CREDENTIALS=(AWS_KEY_ID='$AWS_ACCESS_KEY_ID' AWS_SECRET_KEY='$AWS_SECRET_ACCESS_KEY')\n  ENCRYPTION=(MASTER_KEY = 'eSx...')\n  FILE_FORMAT = (FORMAT_NAME = my_csv_format);\n\nCOPY INTO mytable\n  FROM 'gcs://mybucket/data/files'\n  STORAGE_INTEGRATION = myint\n  FILE_FORMAT = (FORMAT_NAME = my_csv_format);\n\nCOPY INTO mytable\n  FROM 'azure://myaccount.blob.core.windows.net/data/files'\n  STORAGE_INTEGRATION = myint\n  ENCRYPTION=(TYPE='AZURE_CSE' MASTER_KEY = 'kPx...')\n  FILE_FORMAT = (FORMAT_NAME = my_csv_format);\n\nCOPY INTO mytable\n  FROM 'azure://myaccount.blob.core.windows.net/mycontainer/data/files'\n  CREDENTIALS=(AZURE_SAS_TOKEN='?sv=2016-05-31&ss=b&srt=sco&sp=rwdl&se=2018-06-27T10:05:50Z&st=2017-06-27T02:05:50Z&spr=https,http&sig=bgqQwoXwxzuD2GJfagRg7VOS8hzNr3QLT7rhS8OFRLQ%3D')\n  ENCRYPTION=(TYPE='AZURE_CSE' MASTER_KEY = 'kPx...')\n  FILE_FORMAT = (FORMAT_NAME = my_csv_format);\n\nCOPY INTO mytable\n  FILE_FORMAT = (TYPE = 'CSV')\n  PATTERN='.*/.*/.*[.]csv[.]gz';\n\nCOPY INTO mytable\n  FILE_FORMAT = (FORMAT_NAME = myformat)\n  PATTERN='.*sales.*[.]csv';\n\n[{\n    \"location\": {\n      \"city\": \"Lexington\",\n      \"zip\": \"40503\",\n      },\n      \"sq__ft\": \"1000\",\n      \"sale_date\": \"4-25-16\",\n      \"price\": \"75836\"\n},\n{\n    \"location\": {\n      \"city\": \"Belmont\",\n      \"zip\": \"02478\",\n      },\n      \"sq__ft\": \"1103\",\n      \"sale_date\": \"6-18-16\",\n      \"price\": \"92567\"\n}\n{\n    \"location\": {\n      \"city\": \"Winchester\",\n      \"zip\": \"01890\",\n      },\n      \"sq__ft\": \"1122\",\n      \"sale_date\": \"1-31-16\",\n      \"price\": \"89921\"\n}]\n\n/* Create a JSON file format that strips the outer array. */\n\nCREATE OR REPLACE FILE FORMAT json_format\n  TYPE = 'JSON'\n  STRIP_OUTER_ARRAY = TRUE;\n\n/* Create an internal stage that references the JSON file format. */\n\nCREATE OR REPLACE STAGE mystage\n  FILE_FORMAT = json_format;\n\n/* Stage the JSON file. */\n\nPUT file:///tmp/sales.json @mystage AUTO_COMPRESS=TRUE;\n\n/* Create a target table for the JSON data. */\n\nCREATE OR REPLACE TABLE house_sales (src VARIANT);\n\n/* Copy the JSON data into the target table. */\n\nCOPY INTO house_sales\n   FROM @mystage/sales.json.gz;\n\nSELECT * FROM house_sales;\n\n+---------------------------+\n| SRC                       |\n|---------------------------|\n| {                         |\n|   \"location\": {           |\n|     \"city\": \"Lexington\",  |\n|     \"zip\": \"40503\"        |\n|   },                      |\n|   \"price\": \"75836\",       |\n|   \"sale_date\": \"4-25-16\", |\n|   \"sq__ft\": \"1000\",       |\n|   \"type\": \"Residential\"   |\n| }                         |\n| {                         |\n|   \"location\": {           |\n|     \"city\": \"Belmont\",    |\n|     \"zip\": \"02478\"        |\n|   },                      |\n|   \"price\": \"92567\",       |\n|   \"sale_date\": \"6-18-16\", |\n|   \"sq__ft\": \"1103\",       |\n|   \"type\": \"Residential\"   |\n| }                         |\n| {                         |\n|   \"location\": {           |\n|     \"city\": \"Winchester\", |\n|     \"zip\": \"01890\"        |\n|   },                      |\n|   \"price\": \"89921\",       |\n|   \"sale_date\": \"1-31-16\", |\n|   \"sq__ft\": \"1122\",       |\n|   \"type\": \"Condo\"         |\n| }                         |\n+---------------------------+\n\nCOPY INTO load1 FROM @%load1/data1/\n    FILES=('test1.csv', 'test2.csv');\n\nCOPY INTO load1 FROM @%load1/data1/\n    FILES=('test1.csv', 'test2.csv')\n    FORCE=TRUE;\n\nALTER TABLE mytable SET STAGE_COPY_OPTIONS = (PURGE = TRUE);\n\nCOPY INTO mytable;\n\nCOPY INTO mytable PURGE = TRUE;\n\nCOPY INTO mytable VALIDATION_MODE = 'RETURN_ERRORS';\n\n+-------------------------------------------------------------------------------------------------------------------------------+------------------------+------+-----------+-------------+----------+--------+-----------+----------------------+------------+----------------+\n|                                                         ERROR                                                                 |            FILE        | LINE | CHARACTER | BYTE_OFFSET | CATEGORY |  CODE  | SQL_STATE |   COLUMN_NAME        | ROW_NUMBER | ROW_START_LINE |\n+-------------------------------------------------------------------------------------------------------------------------------+------------------------+------+-----------+-------------+----------+--------+-----------+----------------------+------------+----------------+\n| Field delimiter ',' found while expecting record delimiter '\\n'                                                               | @MYTABLE/data1.csv.gz  | 3    | 21        | 76          | parsing  | 100016 | 22000     | \"MYTABLE\"[\"QUOTA\":3] | 3          | 3              |\n| NULL result in a non-nullable column. Use quotes if an empty field should be interpreted as an empty string instead of a null | @MYTABLE/data3.csv.gz  | 3    | 2         | 62          | parsing  | 100088 | 22000     | \"MYTABLE\"[\"NAME\":1]  | 3          | 3              |\n| End of record reached while expected to parse column '\"MYTABLE\"[\"QUOTA\":3]'                                                   | @MYTABLE/data3.csv.gz  | 4    | 20        | 96          | parsing  | 100068 | 22000     | \"MYTABLE\"[\"QUOTA\":3] | 4          | 4              |\n+-------------------------------------------------------------------------------------------------------------------------------+------------------------+------+-----------+-------------+----------+--------+-----------+----------------------+------------+----------------+\n\nCOPY INTO mytable VALIDATION_MODE = 'RETURN_2_ROWS';\n\n+--------------------+----------+-------+\n|        NAME        |    ID    | QUOTA |\n+--------------------+----------+-------+\n| Joe Smith          |  456111  | 0     |\n| Tom Jones          |  111111  | 3400  |\n+--------------------+----------+-------+\n\nCOPY INTO mytable VALIDATION_MODE = 'RETURN_3_ROWS';\n\nFAILURE: NULL result in a non-nullable column. Use quotes if an empty field should be interpreted as an empty string instead of a null\n  File '@MYTABLE/data3.csv.gz', line 3, character 2\n  Row 3, column \"MYTABLE\"[\"NAME\":1]\n\nCREATE OR REPLACE FILE FORMAT my_parquet_format\n  TYPE = PARQUET\n  USE_VECTORIZED_SCANNER = TRUE;\n\nCREATE OR REPLACE ICEBERG TABLE customer_iceberg_ingest (\n  c_custkey INTEGER,\n  c_name STRING,\n  c_address STRING,\n  c_nationkey INTEGER,\n  c_phone STRING,\n  c_acctbal INTEGER,\n  c_mktsegment STRING,\n  c_comment STRING\n)\n  CATALOG = 'SNOWFLAKE'\n  EXTERNAL_VOLUME = 'iceberg_ingest_vol'\n  BASE_LOCATION = 'customer_iceberg_ingest/';\n\nCOPY INTO customer_iceberg_ingest\n  FROM @my_parquet_stage\n  FILE_FORMAT = 'my_parquet_format'\n  LOAD_MODE = ADD_FILES_COPY\n  PURGE = TRUE\n  MATCH_BY_COLUMN_NAME = CASE_SENSITIVE;\n\n+---------------------------------------------------------------+--------+-------------+-------------+-------------+-------------+-------------+------------------+-----------------------+-------------------------+\n| file                                                          | status | rows_parsed | rows_loaded | error_limit | errors_seen | first_error | first_error_line | first_error_character | first_error_column_name |\n|---------------------------------------------------------------+--------+-------------+-------------+-------------+-------------+-------------+------------------+-----------------------+-------------------------|\n| my_parquet_stage/snow_af9mR2HShTY_AABspxOVwhc_0_1_008.parquet | LOADED |       15000 |       15000 |           0 |           0 | NULL        |             NULL |                  NULL | NULL                    |\n| my_parquet_stage/snow_af9mR2HShTY_AABspxOVwhc_0_1_006.parquet | LOADED |       15000 |       15000 |           0 |           0 | NULL        |             NULL |                  NULL | NULL                    |\n| my_parquet_stage/snow_af9mR2HShTY_AABspxOVwhc_0_1_005.parquet | LOADED |       15000 |       15000 |           0 |           0 | NULL        |             NULL |                  NULL | NULL                    |\n| my_parquet_stage/snow_af9mR2HShTY_AABspxOVwhc_0_1_002.parquet | LOADED |           5 |           5 |           0 |           0 | NULL        |             NULL |                  NULL | NULL                    |\n| my_parquet_stage/snow_af9mR2HShTY_AABspxOVwhc_0_1_010.parquet | LOADED |       15000 |       15000 |           0 |           0 | NULL        |             NULL |                  NULL | NULL                    |\n+---------------------------------------------------------------+--------+-------------+-------------+-------------+-------------+-------------+------------------+-----------------------+-------------------------+\n\nSELECT\n    c_custkey,\n    c_name,\n    c_mktsegment\n  FROM customer_iceberg_ingest\n  LIMIT 10;\n\n+-----------+--------------------+--------------+\n| C_CUSTKEY | C_NAME             | C_MKTSEGMENT |\n|-----------+--------------------+--------------|\n|     75001 | Customer#000075001 | FURNITURE    |\n|     75002 | Customer#000075002 | FURNITURE    |\n|     75003 | Customer#000075003 | MACHINERY    |\n|     75004 | Customer#000075004 | AUTOMOBILE   |\n|     75005 | Customer#000075005 | FURNITURE    |\n|         1 | Customer#000000001 | BUILDING     |\n|         2 | Customer#000000002 | AUTOMOBILE   |\n|         3 | Customer#000000003 | AUTOMOBILE   |\n|         4 | Customer#000000004 | MACHINERY    |\n|         5 | Customer#000000005 | HOUSEHOLD    |\n+-----------+--------------------+--------------+"
},
{
    "function_name": "COPY INTO <location>",
    "summary": "Unloads data from a table (or query) into one or more files in one of the following locations.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/copy-into-location",
    "title": "COPY INTO",
    "description": "Unloads data from a table (or query) into one or more files in one of the following locations:",
    "syntax": "COPY INTO { internalStage | externalStage | externalLocation }\n     FROM { [<namespace>.]<table_name> | ( <query> ) }\n[ PARTITION BY <expr> ]\n[ FILE_FORMAT = ( { FORMAT_NAME = '[<namespace>.]<file_format_name>' |\n                    TYPE = { CSV | JSON | PARQUET } [ formatTypeOptions ] } ) ]\n[ copyOptions ]\n[ VALIDATION_MODE = RETURN_ROWS ]\n[ HEADER ]",
    "example": "COPY INTO @%orderstiny/result/data_\n  FROM orderstiny FILE_FORMAT = (FORMAT_NAME ='myformat' COMPRESSION='GZIP');\n\nCOPY INTO @my_stage/result/data_ FROM (SELECT * FROM orderstiny)\n   file_format=(format_name='myformat' compression='gzip');\n\nCOPY INTO 's3://mybucket/unload/'\n  FROM mytable\n  STORAGE_INTEGRATION = myint\n  FILE_FORMAT = (FORMAT_NAME = my_csv_format);\n\nCOPY INTO 's3://mybucket/unload/'\n  FROM mytable\n  CREDENTIALS = (AWS_KEY_ID='xxxx' AWS_SECRET_KEY='xxxxx' AWS_TOKEN='xxxxxx')\n  FILE_FORMAT = (FORMAT_NAME = my_csv_format);\n\nCOPY INTO 'gcs://mybucket/unload/'\n  FROM mytable\n  STORAGE_INTEGRATION = myint\n  FILE_FORMAT = (FORMAT_NAME = my_csv_format);\n\nCOPY INTO 'azure://myaccount.blob.core.windows.net/unload/'\n  FROM mytable\n  STORAGE_INTEGRATION = myint\n  FILE_FORMAT = (FORMAT_NAME = my_csv_format);\n\nCOPY INTO 'azure://myaccount.blob.core.windows.net/mycontainer/unload/'\n  FROM mytable\n  CREDENTIALS=(AZURE_SAS_TOKEN='xxxx')\n  FILE_FORMAT = (FORMAT_NAME = my_csv_format);\n\nCREATE or replace TABLE t1 (\n  dt date,\n  ts time\n  )\nAS\n  SELECT TO_DATE($1)\n        ,TO_TIME($2)\n    FROM VALUES\n           ('2020-01-28', '18:05')\n          ,('2020-01-28', '22:57')\n          ,('2020-01-28', NULL)\n          ,('2020-01-29', '02:15')\n;\n\nSELECT * FROM t1;\n\n+------------+----------+\n| DT         | TS       |\n|------------+----------|\n| 2020-01-28 | 18:05:00 |\n| 2020-01-28 | 22:57:00 |\n| 2020-01-28 | 22:32:00 |\n| 2020-01-29 | 02:15:00 |\n+------------+----------+\n\n-- Partition the unloaded data by date and hour. Set ``32000000`` (32 MB) as the upper size limit of each file to be generated in parallel per thread.\nCOPY INTO @%t1\n  FROM t1\n  PARTITION BY ('date=' || to_varchar(dt, 'YYYY-MM-DD') || '/hour=' || to_varchar(date_part(hour, ts))) -- Concatenate labels and column values to output meaningful filenames\n  FILE_FORMAT = (TYPE=parquet)\n  MAX_FILE_SIZE = 32000000\n  HEADER=true;\n\nLIST @%t1;\n\n+------------------------------------------------------------------------------------------+------+----------------------------------+------------------------------+\n| name                                                                                     | size | md5                              | last_modified                |\n|------------------------------------------------------------------------------------------+------+----------------------------------+------------------------------|\n| __NULL__/data_019c059d-0502-d90c-0000-438300ad6596_006_4_0.snappy.parquet                |  512 | 1c9cb460d59903005ee0758d42511669 | Wed, 5 Aug 2020 16:58:16 GMT |\n| date=2020-01-28/hour=18/data_019c059d-0502-d90c-0000-438300ad6596_006_4_0.snappy.parquet |  592 | d3c6985ebb36df1f693b52c4a3241cc4 | Wed, 5 Aug 2020 16:58:16 GMT |\n| date=2020-01-28/hour=22/data_019c059d-0502-d90c-0000-438300ad6596_006_6_0.snappy.parquet |  592 | a7ea4dc1a8d189aabf1768ed006f7fb4 | Wed, 5 Aug 2020 16:58:16 GMT |\n| date=2020-01-29/hour=2/data_019c059d-0502-d90c-0000-438300ad6596_006_0_0.snappy.parquet  |  592 | 2d40ccbb0d8224991a16195e2e7e5a95 | Wed, 5 Aug 2020 16:58:16 GMT |\n+------------------------------------------------------------------------------------------+------+----------------------------------+------------------------------+\n\n-- View the table column values\nSELECT * FROM HOME_SALES;\n\n+------------+-------+-------+-------------+--------+------------+\n| CITY       | STATE | ZIP   | TYPE        | PRICE  | SALE_DATE  |\n|------------+-------+-------+-------------+--------+------------|\n| Lexington  | MA    | 95815 | Residential | 268880 | 2017-03-28 |\n| Belmont    | MA    | 95815 | Residential |        | 2017-02-21 |\n| Winchester | MA    | NULL  | Residential |        | 2017-01-31 |\n+------------+-------+-------+-------------+--------+------------+\n\n-- Unload the table data into the current user's personal stage. The file format options retain both the NULL value and the empty values in the output file\nCOPY INTO @~ FROM HOME_SALES\n  FILE_FORMAT = (TYPE = csv NULL_IF = ('NULL', 'null') EMPTY_FIELD_AS_NULL = false);\n\n-- Contents of the output file\nLexington,MA,95815,Residential,268880,2017-03-28\nBelmont,MA,95815,Residential,,2017-02-21\nWinchester,MA,NULL,Residential,,2017-01-31\n\ncopy into @~ from HOME_SALES\nsingle = true;\n\n-- Unload rows from the T1 table into the T1 table stage:\nCOPY INTO @%t1\n  FROM t1\n  FILE_FORMAT=(TYPE=parquet)\n  INCLUDE_QUERY_ID=true;\n\n-- Retrieve the query ID for the COPY INTO location statement.\n-- This optional step enables you to see that the query ID for the COPY INTO location statement\n-- is identical to the UUID in the unloaded files.\nSELECT last_query_id();\n+--------------------------------------+\n| LAST_QUERY_ID()                      |\n|--------------------------------------|\n| 019260c2-00c0-f2f2-0000-4383001cf046 |\n+--------------------------------------+\n\nLS @%t1;\n+----------------------------------------------------------------+------+----------------------------------+-------------------------------+\n| name                                                           | size | md5                              | last_modified                 |\n|----------------------------------------------------------------+------+----------------------------------+-------------------------------|\n| data_019260c2-00c0-f2f2-0000-4383001cf046_0_0_0.snappy.parquet |  544 | eb2215ec3ccce61ffa3f5121918d602e | Thu, 20 Feb 2020 16:02:17 GMT |\n+----------------------------------------------------------------+------+----------------------------------+-------------------------------+\n\nCOPY INTO @my_stage\n  FROM (SELECT * FROM orderstiny LIMIT 5)\n  VALIDATION_MODE='RETURN_ROWS';\n\n+-----+--------+----+-----------+------------+----------+-----------------+----+---------------------------------------------------------------------------+\n|  C1 |   C2   | C3 |    C4     |     C5     |    C6    |       C7        | C8 |                                    C9                                     |\n+-----+--------+----+-----------+------------+----------+-----------------+----+---------------------------------------------------------------------------+\n|  1  | 36901  | O  | 173665.47 | 1996-01-02 | 5-LOW    | Clerk#000000951 | 0  | nstructions sleep furiously among                                         |\n|  2  | 78002  | O  | 46929.18  | 1996-12-01 | 1-URGENT | Clerk#000000880 | 0  |  foxes. pending accounts at the pending\\, silent asymptot                 |\n|  3  | 123314 | F  | 193846.25 | 1993-10-14 | 5-LOW    | Clerk#000000955 | 0  | sly final accounts boost. carefully regular ideas cajole carefully. depos |\n|  4  | 136777 | O  | 32151.78  | 1995-10-11 | 5-LOW    | Clerk#000000124 | 0  | sits. slyly regular warthogs cajole. regular\\, regular theodolites acro   |\n|  5  | 44485  | F  | 144659.20 | 1994-07-30 | 5-LOW    | Clerk#000000925 | 0  | quickly. bold deposits sleep slyly. packages use slyly                    |\n+-----+--------+----+-----------+------------+----------+-----------------+----+---------------------------------------------------------------------------+"
},
{
    "function_name": "COPY FILES",
    "summary": "Copy files from a source stage to an output stage.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/copy-files",
    "title": "COPY FILES",
    "description": "Copy files from a source stage to an output stage. You can provide the file list to copy by using a query or a listing on an existing stage.",
    "syntax": "COPY FILES INTO @[<namespace>.]<stage_name>[/<path>/]\n  FROM @[<namespace>.]<stage_name>[/<path>/]\n  [ FILES = ( '<file_name>' [ , '<file_name>' ] [ , ... ] ) ]\n  [ PATTERN = '<regex_pattern>' ]\n  [ DETAILED_OUTPUT = { TRUE | FALSE } ]",
    "example": "COPY FILES\n  INTO @trg_stage\n  FROM @src_stage;\n\nCOPY FILES\n  INTO @trg_stage\n  FROM @src_stage\n  FILES = ('file1.csv', 'file2.csv');\n\nCOPY FILES\n  INTO @trg_stage/trg_path/\n  FROM @src_stage/src_path/;\n\nCOPY FILES\n  INTO @trg_stage\n  FROM @src_stage\n  PATTERN='.*/.*/.*[.]csv[.]gz';\n\nCOPY FILES\n  INTO @trg_stage\n  FROM @src_stage\n  PATTERN='.*sales.*[.]csv';\n\nCOPY FILES\n  INTO @trg_stage\n  FROM (SELECT '@src_stage/file.txt');\n\nCOPY FILES\n  INTO @trg_stage\n  FROM (SELECT '@src_stage/file.txt', 'new_filename.txt');\n\n-- Create a table with URLs\nCREATE TABLE urls(src_file STRING, trg_file STRING);\nINSERT INTO urls VALUES ('@src_stage/file.txt', 'new_filename.txt');\n\n-- Insert additional URLs here\nCOPY FILES\n  INTO @trg_stage\n  FROM (SELECT src_file, trg_file FROM urls);\n\nCOPY FILES\n  INTO @trg_stage\n  FROM (SELECT src_file, trg_file FROM urls WHERE src_file LIKE '%file%');\n\nCOPY FILES\n  INTO @trg_stage\n  FROM (SELECT relative_path FROM directory(@src_stage) WHERE relative_path LIKE '%.txt');"
},
{
    "function_name": "COMMIT",
    "summary": "Commits an open transaction in the current session.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/commit",
    "title": "COMMIT",
    "description": "Commits an open transaction in the current session.",
    "syntax": "COMMIT [ WORK ]",
    "example": "SELECT COUNT(*) FROM A1;\n\n+----------+\n| COUNT(*) |\n|----------+\n|        0 |\n+----------+\n\nBEGIN NAME T3;\n\nSELECT CURRENT_TRANSACTION();\n\n+-----------------------+\n| CURRENT_TRANSACTION() |\n|-----------------------+\n| 1432071497832         |\n+-----------------------+\n\nINSERT INTO A1 VALUES (1), (2);\n\n+-------------------------+\n| number of rows inserted |\n|-------------------------+\n|                       2 |\n+-------------------------+\n\nCOMMIT;\n\nSELECT CURRENT_TRANSACTION();\n\n+-----------------------+\n| CURRENT_TRANSACTION() |\n|-----------------------+\n| [NULL]                |\n+-----------------------+\n\nSELECT LAST_TRANSACTION();\n\n+--------------------+\n| LAST_TRANSACTION() |\n|--------------------+\n| 1432071497832      |\n+--------------------+\n\nSELECT COUNT(*) FROM A1;\n\n+----------+\n| COUNT(*) |\n|----------+\n|        2 |\n+----------+"
},
{
    "function_name": "COMMENT",
    "summary": "Adds a comment or overwrites an existing comment for an existing object.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/comment",
    "title": "COMMENT",
    "description": "Adds a comment or overwrites an existing comment for an existing object.",
    "syntax": "COMMENT [ IF EXISTS ] ON <object_type> <object_name> IS '<string_literal>';\n\nCOMMENT [ IF EXISTS ] ON COLUMN <table_name>.<column_name> IS '<string_literal>';",
    "example": "CREATE SCHEMA my_schema COMMENT='this is comment1';\n\nSHOW SCHEMAS LIKE 'my_schema';\n\n+-------------------------------+-----------+------------+------------+---------------+---------+------------------+---------+----------------+------+\n| created_on                    | name      | is_default | is_current | database_name | owner   | comment          | options | retention_time | ...  |\n|-------------------------------+-----------+------------+------------+---------------+---------+------------------+---------+----------------+------|\n| 2025-02-26 12:08:52.363 -0800 | MY_SCHEMA | N          | Y          | MY_DB         | MY_ROLE | this is comment1 |         | 1              |  ... |\n+-------------------------------+-----------+------------+------------+---------------+---------+------------------+---------+----------------+------+\n\nCOMMENT ON SCHEMA my_schema IS 'now comment2';\n\nSHOW SCHEMAS LIKE 'my_schema';\n\n+-------------------------------+-----------+------------+------------+---------------+---------+--------------+---------+----------------+-----+\n| created_on                    | name      | is_default | is_current | database_name | owner   | comment      | options | retention_time | ... |\n|-------------------------------+-----------+------------+------------+---------------+---------+--------------+---------+----------------+-----+\n| 2025-02-26 12:08:52.363 -0800 | MY_SCHEMA | N          | Y          | MY_DB         | MY_ROLE | now comment2 |         | 1              | ... |\n+-------------------------------+-----------+------------+------------+---------------+---------+--------------+---------+----------------+-----+\n\nCREATE OR REPLACE TABLE test_comment_table_column(my_column STRING COMMENT 'this is comment3');\n\nDESC TABLE test_comment_table_column;\n\n+-----------+-------------------+--------+-------+---------+-------------+------------+-------+------------+------------------+-------------+----------------+\n| name      | type              | kind   | null? | default | primary key | unique key | check | expression | comment          | policy name | privacy domain |\n|-----------+-------------------+--------+-------+---------+-------------+------------+-------+------------+------------------+-------------+----------------|\n| MY_COLUMN | VARCHAR(16777216) | COLUMN | Y     | NULL    | N           | N          | NULL  | NULL       | this is comment3 | NULL        | NULL           |\n+-----------+-------------------+--------+-------+---------+-------------+------------+-------+------------+------------------+-------------+----------------+\n\nCOMMENT ON COLUMN test_comment_table_column.my_column IS 'now comment4';\n\nDESC TABLE test_comment_table_column;\n\n+-----------+-------------------+--------+-------+---------+-------------+------------+-------+------------+--------------+-------------+----------------+\n| name      | type              | kind   | null? | default | primary key | unique key | check | expression | comment      | policy name | privacy domain |\n|-----------+-------------------+--------+-------+---------+-------------+------------+-------+------------+--------------+-------------+----------------|\n| MY_COLUMN | VARCHAR(16777216) | COLUMN | Y     | NULL    | N           | N          | NULL  | NULL       | now comment4 | NULL        | NULL           |\n+-----------+-------------------+--------+-------+---------+-------------+------------+-------+------------+--------------+-------------+----------------+\n\nCREATE OR REPLACE VIEW test_comment_view COMMENT='this is comment5' AS (SELECT * FROM test_comment_table_column);\n\nSHOW VIEWS LIKE 'test_comment_view';\n\n+-------------------------------+-------------------+----------+---------------+-------------+---------+------------------+-----+\n| created_on                    | name              | reserved | database_name | schema_name | owner   | comment          | ... |\n|-------------------------------+-------------------+----------+---------------+-------------+---------+------------------+-----+\n| 2025-02-26 12:38:35.440 -0800 | TEST_COMMENT_VIEW |          | MY_DB         | MY_SCHEMA   | MY_ROLE | this is comment5 | ... |\n+-------------------------------+-------------------+----------+---------------+-------------+---------+------------------+-----+\n\nCOMMENT ON VIEW test_comment_view IS 'now comment6';\n\nSHOW VIEWS LIKE 'test_comment_view';\n\n+-------------------------------+-------------------+----------+---------------+-------------+---------+--------------+-----+\n| created_on                    | name              | reserved | database_name | schema_name | owner   | comment      | ... |\n|-------------------------------+-------------------+----------+---------------+-------------+---------+--------------+-----+\n| 2025-02-26 12:38:35.440 -0800 | TEST_COMMENT_VIEW |          | MY_DB         | MY_SCHEMA   | MY_ROLE | now comment6 | ... |\n+-------------------------------+-------------------+----------+---------------+-------------+---------+--------------+-----+"
},
{
    "function_name": "CALL (with anonymous procedure)",
    "summary": "Creates and calls an anonymous procedure that is like a stored procedure but is not stored for later use.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/call-with",
    "title": "CALL (with anonymous procedure)",
    "description": "Creates and calls an anonymous procedure that is like a",
    "syntax": "WITH <name> AS PROCEDURE ([ <arg_name> <arg_data_type> ]) [ , ... ] )\n  RETURNS { <result_data_type> [ [ NOT ] NULL ] | TABLE ( [ <col_name> <col_data_type> [ , ... ] ] ) }\n  LANGUAGE { SCALA | JAVA }\n  RUNTIME_VERSION = '<scala_or_java_runtime_version>'\n  PACKAGES = ( 'com.snowflake:snowpark:<version>' [, '<package_name_and_version>' ...] )\n  [ IMPORTS = ( '<stage_path_and_file_name_to_read>' [, '<stage_path_and_file_name_to_read>' ...] ) ]\n  HANDLER = '<fully_qualified_method_name>'\n  [ { CALLED ON NULL INPUT | { RETURNS NULL ON NULL INPUT | STRICT } } ]\n  [ AS '<procedure_definition>' ]\n  [ , <cte_nameN> [ ( <cte_column_list> ) ] AS ( SELECT ...  ) ]\nCALL <name> ( [ [ <arg_name> => ] <arg> , ... ] )\n  [ INTO :<snowflake_scripting_variable> ]",
    "example": "WITH copy_to_table AS PROCEDURE (fromTable STRING, toTable STRING, count INT)\n  RETURNS STRING\n  LANGUAGE SCALA\n  RUNTIME_VERSION = '2.12'\n  PACKAGES = ('com.snowflake:snowpark:latest')\n  HANDLER = 'DataCopy.copyBetweenTables'\n  AS\n  $$\n    object DataCopy\n    {\n      def copyBetweenTables(session: com.snowflake.snowpark.Session, fromTable: String, toTable: String, count: Int): String =\n      {\n        session.table(fromTable).limit(count).write.saveAsTable(toTable)\n        return \"Success\"\n      }\n    }\n  $$\n  CALL copy_to_table('table_a', 'table_b', 5);\n\nWITH copy_to_table AS PROCEDURE (fromTable STRING, toTable STRING, count INT)\n  RETURNS STRING\n  LANGUAGE SCALA\n  RUNTIME_VERSION = '2.12'\n  PACKAGES = ('com.snowflake:snowpark:latest')\n  HANDLER = 'DataCopy.copyBetweenTables'\n  AS\n  $$\n    object DataCopy\n    {\n      def copyBetweenTables(session: com.snowflake.snowpark.Session, fromTable: String, toTable: String, count: Int): String =\n      {\n        session.table(fromTable).limit(count).write.saveAsTable(toTable)\n        return \"Success\"\n      }\n      }\n    }\n  $$\n  CALL copy_to_table(\n    toTable => 'table_b',\n    count => 5,\n    fromTable => 'table_a');"
},
{
    "function_name": "CALL",
    "summary": "Calls a stored procedure.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/call",
    "title": "CALL",
    "description": "Calls a",
    "syntax": "CALL <procedure_name> ( [ [ <arg_name> => ] <arg> , ... ] )\n  [ INTO :<snowflake_scripting_variable> ]",
    "example": "CALL stproc1(5.14::FLOAT);\n\nCALL stproc1(2 * 5.14::FLOAT);\n\nCALL stproc1(SELECT COUNT(*) FROM stproc_test_table1);\n\nCALL proc1(1), proc2(2);                          -- Not allowed\n\nCALL proc1(1) + proc1(2);                         -- Not allowed\nCALL proc1(1) + 1;                                -- Not allowed\nCALL proc1(proc2(x));                             -- Not allowed\nSELECT * FROM (call proc1(1));                    -- Not allowed\n\nCALL sv_proc1('Manitoba', 127.4);\n\nCALL sv_proc1(province => 'Manitoba', amount => 127.4);\n\nSET Variable1 = 49;\nCALL sv_proc2($Variable1);\n\nDECLARE\n  ret1 NUMBER;\nBEGIN\n  CALL sv_proc1('Manitoba', 127.4) into :ret1;\n  RETURN ret1;\nEND;\n\nEXECUTE IMMEDIATE $$\nDECLARE\n  ret1 NUMBER;\nBEGIN\n  CALL sv_proc1('Manitoba', 127.4) into :ret1;\n  RETURN ret1;\nEND;\n$$\n;"
},
{
    "function_name": "BEGIN",
    "summary": "Begins a transaction in the current session.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/begin",
    "title": "BEGIN",
    "description": "Begins a transaction in the current session.",
    "syntax": "BEGIN [ { WORK | TRANSACTION } ] [ NAME <name> ]\n\nSTART TRANSACTION [ NAME <name> ]",
    "example": "BEGIN;\n\nSHOW TRANSACTIONS;\n\n+---------------+--------+--------------+--------------------------------------+-------------------------------+---------+\n|            id | user   |      session | name                                 | started_on                    | state   |\n|---------------+--------+--------------+--------------------------------------+-------------------------------+---------|\n| 1530042321085 | USER1  | 223347060798 | 56cb9163-77a3-4223-b3e0-aa24a20540a3 | 2018-06-26 12:45:21.085 -0700 | running |\n+---------------+--------+--------------+--------------------------------------+-------------------------------+---------+\n\nSELECT CURRENT_TRANSACTION();\n\n+-----------------------+\n| CURRENT_TRANSACTION() |\n|-----------------------|\n| 1530042321085         |\n+-----------------------+\n\nBEGIN NAME T1;\n\nSHOW TRANSACTIONS;\n\n+---------------+--------+--------------+------+-------------------------------+---------+\n|            id | user   |      session | name | started_on                    | state   |\n|---------------+--------+--------------+------+-------------------------------+---------|\n| 1530042377426 | USER1  | 223347060798 | T1   | 2018-06-26 12:46:17.426 -0700 | running |\n+---------------+--------+--------------+------+-------------------------------+---------+\n\nSELECT CURRENT_TRANSACTION();\n\n+-----------------------+\n| CURRENT_TRANSACTION() |\n|-----------------------|\n| 1530042377426         |\n+-----------------------+\n\nSTART TRANSACTION NAME T2;\n\nSHOW TRANSACTIONS;\n\n+---------------+--------+--------------+------+-------------------------------+---------+\n|            id | user   |      session | name | started_on                    | state   |\n|---------------+--------+--------------+------+-------------------------------+---------|\n| 1530042467963 | USER1  | 223347060798 | T2   | 2018-06-26 12:47:47.963 -0700 | running |\n+---------------+--------+--------------+------+-------------------------------+---------+\n\nSELECT CURRENT_TRANSACTION();\n\n+-----------------------+\n| CURRENT_TRANSACTION() |\n|-----------------------|\n| 1530042467963         |\n+-----------------------+"
},
{
    "function_name": "ALTER WAREHOUSE",
    "summary": "Suspends or resumes a virtual warehouse, or aborts all queries (and other SQL statements) for a warehouse.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-warehouse",
    "title": "ALTER WAREHOUSE",
    "description": "Suspends or resumes a",
    "syntax": "ALTER WAREHOUSE [ IF EXISTS ] [ <name> ] { SUSPEND | RESUME [ IF SUSPENDED ] }\n\nALTER WAREHOUSE [ IF EXISTS ] [ <name> ] ABORT ALL QUERIES\n\nALTER WAREHOUSE [ IF EXISTS ] <name> RENAME TO <new_name>\n\nALTER WAREHOUSE [ IF EXISTS ] <name> SET [ objectProperties ]\n                                         [ objectParams ]\n\nALTER WAREHOUSE [ IF EXISTS ] <name> SET TAG <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' ... ]\n\nALTER WAREHOUSE [ IF EXISTS ] <name> UNSET TAG <tag_name> [ , <tag_name> ... ]\n\nALTER WAREHOUSE [ IF EXISTS ] <name> UNSET { <property_name> | <param_name> } [ , ... ]",
    "example": "ALTER WAREHOUSE IF EXISTS wh1 RENAME TO wh2;\n\nALTER WAREHOUSE my_wh RESUME;\n\nALTER WAREHOUSE my_wh SET warehouse_size=MEDIUM;\n\nALTER WAREHOUSE so_warehouse SET\n  RESOURCE_CONSTRAINT = 'MEMORY_16X_x86';"
},
{
    "function_name": "ALTER VIEW",
    "summary": "Modifies the properties for an existing view.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-view",
    "title": "ALTER VIEW",
    "description": "Modifies the properties for an existing view. Currently the only supported operations are:",
    "syntax": "ALTER VIEW [ IF EXISTS ] <name> RENAME TO <new_name>\n\nALTER VIEW [ IF EXISTS ] <name> SET\n  [ SECURE ]\n  [ CHANGE_TRACKING =  { TRUE | FALSE } ]\n  [ CONTACT ( <purpose> = <contact_name> [ , <purpose> = <contact_name> ... ] ) ]\n  [ COMMENT = '<string_literal>' ]\n\nALTER VIEW [ IF EXISTS ] <name> UNSET\n  [ SECURE ]\n  [ CONTACT <purpose> ]\n  [ COMMENT = '<string_literal>' ]\n\nALTER VIEW <name> dataMetricFunctionAction\n\nALTER VIEW [ IF EXISTS ] <name> dataGovnPolicyTagAction",
    "example": "ALTER VIEW view1 RENAME TO view2;\n\nALTER VIEW view1 SET SECURE;\n\nALTER VIEW view1 UNSET SECURE;\n\n-- single column\n\nALTER VIEW user_info_v MODIFY COLUMN ssn_number SET MASKING POLICY ssn_mask_v;\n\n-- multiple columns\n\nALTER VIEW user_info_v MODIFY\n  COLUMN ssn_number SET MASKING POLICY ssn_mask_v,\n  COLUMN dob SET MASKING POLICY dob_mask_v\n  ;\n\n-- single column\n\nALTER VIEW user_info_v MODIFY COLUMN ssn_number UNSET MASKING POLICY;\n\n-- multiple columns\n\nALTER VIEW user_info_v MODIFY\n  COLUMN ssn_number UNSET MASKING POLICY,\n  COLUMN dob UNSET MASKING POLICY\n  ;\n\nALTER VIEW v1\n  ADD ROW ACCESS POLICY rap_v1 ON (empl_id);\n\nALTER VIEW v1\n  DROP ROW ACCESS POLICY rap_v1;\n\nALTER VIEW v1\n  DROP ROW ACCESS POLICY rap_v1_version_1,\n  ADD ROW ACCESS POLICY rap_v1_version_2 ON (empl_id);\n\nALTER VIEW join_view\n  SET JOIN POLICY jp1;"
},
{
    "function_name": "ALTER USER … ROTATE PROGRAMMATIC ACCESS TOKEN (PAT)",
    "summary": "Rotates programmatic access token, generating a new token secret with an extended expiration time, and expiring the existing token secret.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-user-rotate-programmatic-access-token",
    "title": "ALTER USER … ROTATE PROGRAMMATIC ACCESS TOKEN (PAT)",
    "description": "Rotates",
    "syntax": "ALTER USER [ IF EXISTS ] [ <username> ] ROTATE { PROGRAMMATIC ACCESS TOKEN | PAT } <token_name>\n  [ EXPIRE_ROTATED_TOKEN_AFTER_HOURS = <integer> ]",
    "example": "ALTER USER IF EXISTS example_user ROTATE PROGRAMMATIC ACCESS TOKEN token_name;\n\nALTER USER IF EXISTS example_user ROTATE PROGRAMMATIC ACCESS TOKEN token_name\n  EXPIRE_ROTATED_TOKEN_AFTER_HOURS=0;"
},
{
    "function_name": "ALTER USER … REMOVE PROGRAMMATIC ACCESS TOKEN (PAT)",
    "summary": "Revokes a programmatic access token for a user.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-user-remove-programmatic-access-token",
    "title": "ALTER USER … REMOVE PROGRAMMATIC ACCESS TOKEN (PAT)",
    "description": "Revokes a",
    "syntax": "ALTER USER [ IF EXISTS ] [ <username> ] REMOVE { PROGRAMMATIC ACCESS TOKEN | PAT } <token_name>",
    "example": "ALTER USER IF EXISTS example_user REMOVE PROGRAMMATIC ACCESS TOKEN example_token;"
},
{
    "function_name": "ALTER USER … MODIFY PROGRAMMATIC ACCESS TOKEN (PAT)",
    "summary": "Changes the name of a programmatic access token or a property of the token.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-user-modify-programmatic-access-token",
    "title": "ALTER USER … MODIFY PROGRAMMATIC ACCESS TOKEN (PAT)",
    "description": "Changes the name of a",
    "syntax": "ALTER USER [ IF EXISTS ] [ <username> ] MODIFY { PROGRAMMATIC ACCESS TOKEN | PAT } <token_name>\n  RENAME TO <new_token_name>\n\nALTER USER [ IF EXISTS ] [ <username> ] MODIFY { PROGRAMMATIC ACCESS TOKEN | PAT } <token_name> SET\n  [ DISABLED = { TRUE | FALSE } ]\n  [ MINS_TO_BYPASS_NETWORK_POLICY_REQUIREMENT = <integer> ]\n  [ COMMENT = '<string_literal>' ]",
    "example": "ALTER USER IF EXISTS example_user MODIFY PROGRAMMATIC ACCESS TOKEN old_token_name\n  RENAME TO new_token_name;\n\nALTER USER IF EXISTS example_user MODIFY PROGRAMMATIC ACCESS TOKEN token_name\n  SET COMMENT = 'my new comment';"
},
{
    "function_name": "ALTER USER … ADD PROGRAMMATIC ACCESS TOKEN (PAT)",
    "summary": "Creates a programmatic access token for a user.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-user-add-programmatic-access-token",
    "title": "ALTER USER … ADD PROGRAMMATIC ACCESS TOKEN (PAT)",
    "description": "Creates a",
    "syntax": "ALTER USER [ IF EXISTS ] [ <username> ] ADD { PROGRAMMATIC ACCESS TOKEN | PAT } <token_name>\n  [ ROLE_RESTRICTION = '<string_literal>' ]\n  [ DAYS_TO_EXPIRY = <integer> ]\n  [ MINS_TO_BYPASS_NETWORK_POLICY_REQUIREMENT = <integer> ]\n  [ COMMENT = '<string_literal>' ]",
    "example": "ALTER USER IF EXISTS example_user ADD PROGRAMMATIC ACCESS TOKEN example_token\n  COMMENT = 'a reference example';\n\nALTER USER IF EXISTS example_user ADD PROGRAMMATIC ACCESS TOKEN example_token\n  ROLE_RESTRICTION = 'example_role'\n  DAYS_TO_EXPIRY = 15;"
},
{
    "function_name": "ALTER USER",
    "summary": "Modifies the properties and object/session parameters for an existing user in the system.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-user",
    "title": "ALTER USER",
    "description": "Modifies the properties and object/session parameters for an existing user in the system:",
    "syntax": "ALTER USER [ IF EXISTS ] [ <name> ] RENAME TO <new_name>\n\nALTER USER [ IF EXISTS ] [ <name> ] RESET PASSWORD\n\nALTER USER [ IF EXISTS ] [ <name> ] ABORT ALL QUERIES\n\nALTER USER [ IF EXISTS ] [ <name> ] ADD DELEGATED AUTHORIZATION OF ROLE <role_name> TO SECURITY INTEGRATION <integration_name>\n\nALTER USER [ IF EXISTS ] [ <name> ] REMOVE DELEGATED { AUTHORIZATION OF ROLE <role_name> | AUTHORIZATIONS } FROM SECURITY INTEGRATION <integration_name>\n\nALTER USER [ IF EXISTS ] [ <name> ] mfaActions\n\nALTER USER [ IF EXISTS ] [ <name> ] SET { AUTHENTICATION | PASSWORD | SESSION } POLICY <policy_name>\n\nALTER USER [ IF EXISTS ] [ <name> ] UNSET { AUTHENTICATION | PASSWORD | SESSION } POLICY\n\nALTER USER [ IF EXISTS ] [ <name> ] SET TAG <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' ... ]\n\nALTER USER [ IF EXISTS ] [ <name> ] UNSET TAG <tag_name> [ , <tag_name> ... ]\n\nALTER USER [ IF EXISTS ] [ <name> ] SET { [ objectProperties ] [ objectParams ] [ sessionParams ] }\n\nALTER USER [ IF EXISTS ] [ <name> ] UNSET { <object_property_name> | <object_param_name> | <session_param_name> } [ , ... ]",
    "example": "ALTER USER user1 RENAME TO user2;\n\nALTER USER user1 SET PASSWORD = 'H8MZRqa8gEe/kvHzvJ+Giq94DuCYoQXmfbb$Xnt' MUST_CHANGE_PASSWORD = TRUE;\n\nALTER USER user1 SET TYPE = SERVICE;\n\nALTER USER user1 UNSET COMMENT;\n\nALTER USER user1 SET DEFAULT_SECONDARY_ROLES = ();\n\nALTER USER user1 UNSET DEFAULT_SECONDARY_ROLES;\n\nALTER USER user1 SET DEFAULT_SECONDARY_ROLES = ('ALL');"
},
{
    "function_name": "ALTER TASK",
    "summary": "Modifies the properties for an existing task.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-task",
    "title": "ALTER TASK",
    "description": "Modifies the properties for an existing task.",
    "syntax": "ALTER TASK [ IF EXISTS ] <name> RESUME | SUSPEND\n\nALTER TASK [ IF EXISTS ] <name> REMOVE AFTER <string> [ , <string> , ... ]\n  | ADD AFTER <string> [ , <string> , ... ]\n\nALTER TASK [ IF EXISTS ] <name> SET\n  [ { WAREHOUSE = <string> }\n    | { USER_TASK_MANAGED_INITIAL_WAREHOUSE_SIZE = <string> } ]\n  [ SCHEDULE = { '<num> { HOURS | MINUTES | SECONDS }'\n               | 'USING CRON <expr> <time_zone>' } ]\n  [ CONFIG = <configuration_string> ]\n  [ ALLOW_OVERLAPPING_EXECUTION = TRUE | FALSE ]\n  [ USER_TASK_TIMEOUT_MS = <num> ]\n  [ SUSPEND_TASK_AFTER_NUM_FAILURES = <num> ]\n  [ ERROR_INTEGRATION = <integration_name> ]\n  [ SUCCESS_INTEGRATION = <integration_name> ]\n  [ LOG_LEVEL = '<log_level>' ]\n  [ COMMENT = <string> ]\n  [ <session_parameter> = <value>\n    [ , <session_parameter> = <value> ... ] ]\n  [ TASK_AUTO_RETRY_ATTEMPTS = <num> ]\n  [ USER_TASK_MINIMUM_TRIGGER_INTERVAL_IN_SECONDS = <num> ]\n  [ TARGET_COMPLETION_INTERVAL = '<num> { HOURS | MINUTES | SECONDS }' ]\n  [ SERVERLESS_TASK_MIN_STATEMENT_SIZE= 'XSMALL | SMALL\n    | MEDIUM | LARGE | XLARGE | XXLARGE' ]\n  [ SERVERLESS_TASK_MAX_STATEMENT_SIZE= 'XSMALL | SMALL\n    | MEDIUM | LARGE | XLARGE | XXLARGE' ]\n  [ CONTACT ( <purpose> = <contact_name> [ , <purpose> = <contact_name> ... ] ) ]\n\n\nALTER TASK [ IF EXISTS ] <name> UNSET\n  [ WAREHOUSE ]\n  [ SCHEDULE ]\n  [ CONFIG ]\n  [ ALLOW_OVERLAPPING_EXECUTION ]\n  [ USER_TASK_TIMEOUT_MS ]\n  [ SUSPEND_TASK_AFTER_NUM_FAILURES ]\n  [ LOG_LEVEL ]\n  [ COMMENT ]\n  [ <session_parameter> [ , <session_parameter> ... ] ]\n  [ TARGET_COMPLETION_INTERVAL ]\n  [ SERVERLESS_TASK_MIN_STATEMENT_SIZE ]\n  [ SERVERLESS_TASK_MAX_STATEMENT_SIZE ]\n  [ CONTACT <purpose> ]\n  [ , ... ]\n\nALTER TASK [ IF EXISTS ] <name> SET TAG <tag_name> = '<tag_value>'\n  [ , <tag_name> = '<tag_value>' ... ]\n\nALTER TASK [ IF EXISTS ] <name> UNSET TAG <tag_name> [ , <tag_name> ... ]\n\nALTER TASK [ IF EXISTS ] <name> SET FINALIZE = <string>\n\nALTER TASK [ IF EXISTS ] <name> UNSET FINALIZE\n\nALTER TASK [ IF EXISTS ] <name> MODIFY AS <sql>\n\nALTER TASK [ IF EXISTS ] <name> MODIFY WHEN <boolean_expr>\n\nALTER TASK [ IF EXISTS ] <name> REMOVE WHEN",
    "example": "ALTER TASK mytask RESUME;\n\nALTER TASK mytask UNSET WAREHOUSE;\n\nALTER TASK mytask SET USER_TASK_MANAGED_INITIAL_WAREHOUSE_SIZE = 'XSMALL';\n\nALTER TASK mytask SET TIMEZONE = 'America/Los_Angeles', CLIENT_TIMESTAMP_TYPE_MAPPING = TIMESTAMP_LTZ;\n\nALTER TASK mytask SET SCHEDULE = 'USING CRON */3 * * * * UTC';\n\nALTER TASK mytask REMOVE AFTER pred_task1, pred_task2;\n\nALTER TASK mytask ADD AFTER pred_task3;\n\nALTER TASK mytask MODIFY AS SELECT CURRENT_VERSION();\n\nALTER TASK mytask MODIFY WHEN SYSTEM$STREAM_HAS_DATA('MYSTREAM');\n\nALTER TASK task_with_config SET\n      CONFIG=$${\"output_directory\": \"/temp/prod_directory/\", \"environment\": \"prod\"}$$;\n\nALTER TASK task_with_config UNSET CONFIG;"
},
{
    "function_name": "ALTER TAG",
    "summary": "Modifies the properties for an existing tag, including renaming the tag and setting a masking policy on a tag.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-tag",
    "title": "ALTER TAG",
    "description": "Modifies the properties for an existing tag, including renaming the tag and setting a masking policy on a tag.",
    "syntax": "ALTER TAG [ IF EXISTS ] <name> RENAME TO <new_name>\n\nALTER TAG [ IF EXISTS ] <name> { ADD | DROP } ALLOWED_VALUES '<val_1>' [ , '<val_2>' [ , ... ] ]\n\nALTER TAG [ IF EXISTS ] <name> SET\n  [ PROPAGATE = { ON_DEPENDENCY_AND_DATA_MOVEMENT | ON_DEPENDENCY | ON_DATA_MOVEMENT }\n    [ ON_CONFLICT = { '<string>' | ALLOWED_VALUES_SEQUENCE } ] ]\n  [ COMMENT = '<string_literal>' ]\n\nALTER TAG [ IF EXISTS ] <name> UNSET { ALLOWED_VALUES | PROPAGATE | ON_CONFLICT | COMMENT }\n\nALTER TAG [ IF EXISTS ] <name> SET MASKING POLICY\n  <masking_policy_name> [ , MASKING POLICY <masking_policy_2_name> , ... ] [ FORCE ]\n\nALTER TAG [ IF EXISTS ] <name> UNSET MASKING POLICY <masking_policy_name> [ , MASKING POLICY <masking_policy_2_name> , ... ]",
    "example": "ALTER TAG cost_center RENAME TO cost_center_na;"
},
{
    "function_name": "ALTER TABLE (event tables)",
    "summary": "Modifies the properties, columns, or constraints for an existing event table.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-table-event-table",
    "title": "ALTER TABLE (event tables)",
    "description": "Modifies the properties, columns, or constraints for an existing",
    "syntax": "ALTER TABLE [ IF EXISTS ] <name> RENAME TO <new_table_name>\n\nALTER TABLE [ IF EXISTS ] <name> clusteringAction\n\nALTER TABLE [ IF EXISTS ] <name> dataGovnPolicyTagAction\n\nALTER TABLE [ IF EXISTS ] <name> searchOptimizationAction\n\nALTER TABLE [ IF EXISTS ] <name> SET\n  [ DATA_RETENTION_TIME_IN_DAYS = <integer> ]\n  [ MAX_DATA_EXTENSION_TIME_IN_DAYS = <integer> ]\n  [ CHANGE_TRACKING = { TRUE | FALSE  } ]\n  [ CONTACT ( <purpose> = <contact_name> [ , <purpose> = <contact_name> ... ] ) ]\n  [ COMMENT = '<string_literal>' ]\n\nALTER TABLE [ IF EXISTS ] <name> UNSET {\n                                       DATA_RETENTION_TIME_IN_DAYS         |\n                                       MAX_DATA_EXTENSION_TIME_IN_DAYS     |\n                                       CHANGE_TRACKING                     |\n                                       CONTACT <purpose>                   |\n                                       COMMENT                             |\n                                       }",
    "example": "CREATE OR REPLACE TABLE t1(a1 number);\n\nSHOW TABLES LIKE 't1';\n\n---------------------------------+------+---------------+-------------+-------+---------+------------+------+-------+--------+----------------+\n           created_on            | name | database_name | schema_name | kind  | comment | cluster_by | rows | bytes | owner  | retention_time |\n---------------------------------+------+---------------+-------------+-------+---------+------------+------+-------+--------+----------------+\n Tue, 17 Mar 2015 16:52:33 -0700 | T1   | TESTDB        | MY_SCHEMA   | TABLE |         |            | 0    | 0     | PUBLIC | 1              |\n---------------------------------+------+---------------+-------------+-------+---------+------------+------+-------+--------+----------------+\n\nALTER TABLE t1 RENAME TO tt1;\n\nSHOW TABLES LIKE 'tt1';\n\n---------------------------------+------+---------------+-------------+-------+---------+------------+------+-------+--------+----------------+\n           created_on            | name | database_name | schema_name | kind  | comment | cluster_by | rows | bytes | owner  | retention_time |\n---------------------------------+------+---------------+-------------+-------+---------+------------+------+-------+--------+----------------+\n Tue, 17 Mar 2015 16:52:33 -0700 | TT1  | TESTDB        | MY_SCHEMA   | TABLE |         |            | 0    | 0     | PUBLIC | 1              |\n---------------------------------+------+---------------+-------------+-------+---------+------------+------+-------+--------+----------------+\n\nCREATE OR REPLACE TABLE T1 (id NUMBER, date TIMESTAMP_NTZ, name STRING) CLUSTER BY (id, date);\n\nSHOW TABLES LIKE 'T1';\n\n---------------------------------+------+---------------+-------------+-------+---------+------------+------+-------+--------------+----------------+\n           created_on            | name | database_name | schema_name | kind  | comment | cluster_by | rows | bytes |    owner     | retention_time |\n---------------------------------+------+---------------+-------------+-------+---------+------------+------+-------+--------------+----------------+\n Tue, 21 Jun 2016 15:42:12 -0700 | T1   | TESTDB        | TESTSCHEMA  | TABLE |         | (ID,DATE)  | 0    | 0     | ACCOUNTADMIN | 1              |\n---------------------------------+------+---------------+-------------+-------+---------+------------+------+-------+--------------+----------------+\n\n-- Change the order of the clustering key\nALTER TABLE t1 CLUSTER BY (date, id);\n\nSHOW TABLES LIKE 'T1';\n\n---------------------------------+------+---------------+-------------+-------+---------+------------+------+-------+--------------+----------------+\n           created_on            | name | database_name | schema_name | kind  | comment | cluster_by | rows | bytes |    owner     | retention_time |\n---------------------------------+------+---------------+-------------+-------+---------+------------+------+-------+--------------+----------------+\n Tue, 21 Jun 2016 15:42:12 -0700 | T1   | TESTDB        | TESTSCHEMA  | TABLE |         | (DATE,ID)  | 0    | 0     | ACCOUNTADMIN | 1              |\n---------------------------------+------+---------------+-------------+-------+---------+------------+------+-------+--------------+----------------+\n\nALTER TABLE t1\n  ADD ROW ACCESS POLICY rap_t1 ON (empl_id);\n\nALTER TABLE t1\n  ADD ROW ACCESS POLICY rap_test2 ON (cost, item);\n\nALTER TABLE t1\n  DROP ROW ACCESS POLICY rap_v1;\n\nalter table t1\n  drop row access policy rap_t1_version_1,\n  add row access policy rap_t1_version_2 on (empl_id);"
},
{
    "function_name": "ALTER TABLE … ALTER COLUMN",
    "summary": "This topic describes how to modify one or more column properties for a table using an ALTER COLUMN clause in a ALTER TABLE statement.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-table-column",
    "title": "ALTER TABLE … ALTER COLUMN",
    "description": "This topic describes how to modify one or more column properties for a table using an",
    "syntax": "ALTER TABLE <name> { ALTER | MODIFY } [ ( ]\n                                              [ COLUMN ] <col1_name> DROP DEFAULT\n                                            , [ COLUMN ] <col1_name> SET DEFAULT <seq_name>.NEXTVAL\n                                            , [ COLUMN ] <col1_name> { [ SET ] NOT NULL | DROP NOT NULL }\n                                            , [ COLUMN ] <col1_name> [ [ SET DATA ] TYPE ] <type>\n                                            , [ COLUMN ] <col1_name> COMMENT '<string>'\n                                            , [ COLUMN ] <col1_name> UNSET COMMENT\n                                          [ , [ COLUMN ] <col2_name> ... ]\n                                          [ , ... ]\n                                      [ ) ]\n\nALTER TABLE <name> { ALTER | MODIFY } [ COLUMN ] dataGovnPolicyTagAction",
    "example": "CREATE OR REPLACE TABLE t1 (\n   c1 NUMBER NOT NULL,\n   c2 NUMBER DEFAULT 3,\n   c3 NUMBER DEFAULT seq1.nextval,\n   c4 VARCHAR(20) DEFAULT 'abcde',\n   c5 STRING);\n\nDESC TABLE t1;\n\n+------+-------------------+--------+-------+-------------------------+-------------+------------+-------+------------+---------+\n| name | type              | kind   | null? | default                 | primary key | unique key | check | expression | comment |\n|------+-------------------+--------+-------+-------------------------+-------------+------------+-------+------------+---------|\n| C1   | NUMBER(38,0)      | COLUMN | N     | NULL                    | N           | N          | NULL  | NULL       | NULL    |\n| C2   | NUMBER(38,0)      | COLUMN | Y     | 3                       | N           | N          | NULL  | NULL       | NULL    |\n| C3   | NUMBER(38,0)      | COLUMN | Y     | DB1.PUBLIC.SEQ1.NEXTVAL | N           | N          | NULL  | NULL       | NULL    |\n| C4   | VARCHAR(20)       | COLUMN | Y     | 'abcde'                 | N           | N          | NULL  | NULL       | NULL    |\n| C5   | VARCHAR(16777216) | COLUMN | Y     | NULL                    | N           | N          | NULL  | NULL       | NULL    |\n+------+-------------------+--------+-------+-------------------------+-------------+------------+-------+------------+---------+\n\nALTER TABLE t1 ALTER COLUMN c1 DROP NOT NULL;\n\nALTER TABLE t1 MODIFY c2 DROP DEFAULT, c3 SET DEFAULT seq5.nextval ;\n\nALTER TABLE t1 ALTER c4 SET DATA TYPE VARCHAR(50), COLUMN c4 DROP DEFAULT;\n\nALTER TABLE t1 ALTER c5 COMMENT '50 character column';\n\nDESC TABLE t1;\n\n+------+-------------------+--------+-------+-------------------------+-------------+------------+-------+------------+---------------------+\n| name | type              | kind   | null? | default                 | primary key | unique key | check | expression | comment             |\n|------+-------------------+--------+-------+-------------------------+-------------+------------+-------+------------+---------------------|\n| C1   | NUMBER(38,0)      | COLUMN | Y     | NULL                    | N           | N          | NULL  | NULL       | NULL                |\n| C2   | NUMBER(38,0)      | COLUMN | Y     | NULL                    | N           | N          | NULL  | NULL       | NULL                |\n| C3   | NUMBER(38,0)      | COLUMN | Y     | DB1.PUBLIC.SEQ5.NEXTVAL | N           | N          | NULL  | NULL       | NULL                |\n| C4   | VARCHAR(50)       | COLUMN | Y     | NULL                    | N           | N          | NULL  | NULL       | NULL                |\n| C5   | VARCHAR(16777216) | COLUMN | Y     | NULL                    | N           | N          | NULL  | NULL       | 50 character column |\n+------+-------------------+--------+-------+-------------------------+-------------+------------+-------+------------+---------------------+\n\nALTER TABLE t1 ALTER (\n   c1 DROP NOT NULL,\n   c5 COMMENT '50 character column',\n   c4 TYPE VARCHAR(50),\n   c2 DROP DEFAULT,\n   COLUMN c4 DROP DEFAULT,\n   COLUMN c3 SET DEFAULT seq5.nextval\n  );\n\n-- single column\n\nALTER TABLE empl_info MODIFY COLUMN empl_id SET MASKING POLICY mask_empl_id;\n\n-- multiple columns\n\nALTER TABLE empl_info MODIFY\n    COLUMN empl_id SET MASKING POLICY mask_empl_id\n  , COLUMN empl_dob SET MASKING POLICY mask_empl_dob\n;\n\n-- single column\n\nALTER TABLE empl_info modify column empl_id unset masking policy;\n\n-- multiple columns\n\nALTER TABLE empl_info MODIFY\n    COLUMN empl_id UNSET MASKING POLICY\n  , COLUMN empl_dob UNSET MASKING POLICY\n;"
},
{
    "function_name": "ALTER TABLE",
    "summary": "Modifies the properties, columns, or constraints for an existing table.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-table",
    "title": "ALTER TABLE",
    "description": "Modifies the properties, columns, or constraints for an existing table.",
    "syntax": "ALTER TABLE [ IF EXISTS ] <name> RENAME TO <new_table_name>\n\nALTER TABLE [ IF EXISTS ] <name> SWAP WITH <target_table_name>\n\nALTER TABLE [ IF EXISTS ] <name> { clusteringAction | tableColumnAction | constraintAction  }\n\nALTER TABLE [ IF EXISTS ] <name> dataMetricFunctionAction\n\nALTER TABLE [ IF EXISTS ] <name> dataGovnPolicyTagAction\n\nALTER TABLE [ IF EXISTS ] <name> extTableColumnAction\n\nALTER TABLE [ IF EXISTS ] <name> searchOptimizationAction\n\nALTER TABLE [ IF EXISTS ] <name> SET\n  [ DATA_RETENTION_TIME_IN_DAYS = <integer> ]\n  [ MAX_DATA_EXTENSION_TIME_IN_DAYS = <integer> ]\n  [ CHANGE_TRACKING = { TRUE | FALSE  } ]\n  [ DEFAULT_DDL_COLLATION = '<collation_specification>' ]\n  [ ENABLE_SCHEMA_EVOLUTION = { TRUE | FALSE } ]\n  [ CONTACT ( <purpose> = <contact_name> [ , <purpose> = <contact_name> ... ] ) ]\n  [ COMMENT = '<string_literal>' ]\n\nALTER TABLE [ IF EXISTS ] <name> UNSET {\n                                       DATA_RETENTION_TIME_IN_DAYS         |\n                                       MAX_DATA_EXTENSION_TIME_IN_DAYS     |\n                                       CHANGE_TRACKING                     |\n                                       DEFAULT_DDL_COLLATION               |\n                                       ENABLE_SCHEMA_EVOLUTION             |\n                                       CONTACT <purpose>                   |\n                                       COMMENT                             |\n                                       }\n                                       [ , ... ]",
    "example": "CREATE OR REPLACE TABLE t1(a1 number);\n\nSHOW TABLES LIKE 't1';\n\n+-------------------------------+------+---------------+-------------+-------+---------+------------+------+-------+--------+----------------+-----------------+-------------+-------------------------+-----------------+----------+--------+\n| created_on                    | name | database_name | schema_name | kind  | comment | cluster_by | rows | bytes | owner  | retention_time | change_tracking | is_external | enable_schema_evolution | owner_role_type | is_event | budget |\n|-------------------------------+------+---------------+-------------+-------+---------+------------+------+-------+--------+----------------+-----------------+-------------+-------------------------+-----------------+----------+--------|\n| 2023-10-19 10:37:04.858 -0700 | T1   | TESTDB        | MY_SCHEMA   | TABLE |         |            |    0 |     0 | PUBLIC | 1              | OFF             | N           | N                       | ROLE            | N        | NULL   |\n+-------------------------------+------+---------------+-------------+-------+---------+------------+------+-------+--------+----------------+-----------------+-------------+-------------------------+-----------------+----------+--------+\n\nALTER TABLE t1 RENAME TO tt1;\n\nSHOW TABLES LIKE 'tt1';\n\n+-------------------------------+------+---------------+-------------+-------+---------+------------+------+-------+--------+----------------+-----------------+-------------+-------------------------+-----------------+----------+--------+\n| created_on                    | name | database_name | schema_name | kind  | comment | cluster_by | rows | bytes | owner  | retention_time | change_tracking | is_external | enable_schema_evolution | owner_role_type | is_event | budget |\n|-------------------------------+------+---------------+-------------+-------+---------+------------+------+-------+--------+----------------+-----------------+-------------+-------------------------+-----------------+----------+--------|\n| 2023-10-19 10:37:04.858 -0700 | TT1  | TESTDB        | MY_SCHEMA   | TABLE |         |            |    0 |     0 | PUBLIC | 1              | OFF             | N           | N                       | ROLE            | N        | NULL   |\n+-------------------------------+------+---------------+-------------+-------+---------+------------+------+-------+--------+----------------+-----------------+-------------+-------------------------+-----------------+----------+--------+\n\nCREATE OR REPLACE TABLE t1(a1 NUMBER, a2 VARCHAR, a3 DATE);\nCREATE OR REPLACE TABLE t2(b1 VARCHAR);\n\nDESC TABLE t1;\n\n+------+-------------------+--------+-------+---------+-------------+------------+-------+------------+---------+-------------+\n| name | type              | kind   | null? | default | primary key | unique key | check | expression | comment | policy name |\n|------+-------------------+--------+-------+---------+-------------+------------+-------+------------+---------+-------------|\n| A1   | NUMBER(38,0)      | COLUMN | Y     | NULL    | N           | N          | NULL  | NULL       | NULL    | NULL        |\n| A2   | VARCHAR(16777216) | COLUMN | Y     | NULL    | N           | N          | NULL  | NULL       | NULL    | NULL        |\n| A3   | DATE              | COLUMN | Y     | NULL    | N           | N          | NULL  | NULL       | NULL    | NULL        |\n+------+-------------------+--------+-------+---------+-------------+------------+-------+------------+---------+-------------+\n\nDESC TABLE t2;\n\n+------+-------------------+--------+-------+---------+-------------+------------+-------+------------+---------+-------------+\n| name | type              | kind   | null? | default | primary key | unique key | check | expression | comment | policy name |\n|------+-------------------+--------+-------+---------+-------------+------------+-------+------------+---------+-------------|\n| B1   | VARCHAR(16777216) | COLUMN | Y     | NULL    | N           | N          | NULL  | NULL       | NULL    | NULL        |\n+------+-------------------+--------+-------+---------+-------------+------------+-------+------------+---------+-------------+\n\nALTER TABLE t1 SWAP WITH t2;\n\nDESC TABLE t1;\n\n+------+-------------------+--------+-------+---------+-------------+------------+-------+------------+---------+-------------+\n| name | type              | kind   | null? | default | primary key | unique key | check | expression | comment | policy name |\n|------+-------------------+--------+-------+---------+-------------+------------+-------+------------+---------+-------------|\n| B1   | VARCHAR(16777216) | COLUMN | Y     | NULL    | N           | N          | NULL  | NULL       | NULL    | NULL        |\n+------+-------------------+--------+-------+---------+-------------+------------+-------+------------+---------+-------------+\n\nDESC TABLE t2;\n\n+------+-------------------+--------+-------+---------+-------------+------------+-------+------------+---------+-------------+\n| name | type              | kind   | null? | default | primary key | unique key | check | expression | comment | policy name |\n|------+-------------------+--------+-------+---------+-------------+------------+-------+------------+---------+-------------|\n| A1   | NUMBER(38,0)      | COLUMN | Y     | NULL    | N           | N          | NULL  | NULL       | NULL    | NULL        |\n| A2   | VARCHAR(16777216) | COLUMN | Y     | NULL    | N           | N          | NULL  | NULL       | NULL    | NULL        |\n| A3   | DATE              | COLUMN | Y     | NULL    | N           | N          | NULL  | NULL       | NULL    | NULL        |\n+------+-------------------+--------+-------+---------+-------------+------------+-------+------------+---------+-------------+\n\nCREATE OR REPLACE TABLE t1(a1 NUMBER);\n\nDESC TABLE t1;\n\n+------+--------------+--------+-------+---------+-------------+------------+-------+------------+---------+-------------+\n| name | type         | kind   | null? | default | primary key | unique key | check | expression | comment | policy name |\n|------+--------------+--------+-------+---------+-------------+------------+-------+------------+---------+-------------|\n| A1   | NUMBER(38,0) | COLUMN | Y     | NULL    | N           | N          | NULL  | NULL       | NULL    | NULL        |\n+------+--------------+--------+-------+---------+-------------+------------+-------+------------+---------+-------------+\n\nALTER TABLE t1 ADD COLUMN a2 NUMBER;\n\nALTER TABLE t1 ADD COLUMN a3 NUMBER NOT NULL;\n\nALTER TABLE t1 ADD COLUMN a4 NUMBER DEFAULT 0 NOT NULL;\n\nALTER TABLE t1 ADD COLUMN a5 VARCHAR COLLATE 'en_US';\n\nDESC TABLE t1;\n\n+------+-----------------------------------+--------+-------+---------+-------------+------------+-------+------------+---------+-------------+\n| name | type                              | kind   | null? | default | primary key | unique key | check | expression | comment | policy name |\n|------+-----------------------------------+--------+-------+---------+-------------+------------+-------+------------+---------+-------------|\n| A1   | NUMBER(38,0)                      | COLUMN | Y     | NULL    | N           | N          | NULL  | NULL       | NULL    | NULL        |\n| A2   | NUMBER(38,0)                      | COLUMN | Y     | NULL    | N           | N          | NULL  | NULL       | NULL    | NULL        |\n| A3   | NUMBER(38,0)                      | COLUMN | N     | NULL    | N           | N          | NULL  | NULL       | NULL    | NULL        |\n| A4   | NUMBER(38,0)                      | COLUMN | N     | 0       | N           | N          | NULL  | NULL       | NULL    | NULL        |\n| A5   | VARCHAR(16777216) COLLATE 'en_us' | COLUMN | Y     | NULL    | N           | N          | NULL  | NULL       | NULL    | NULL        |\n+------+-----------------------------------+--------+-------+---------+-------------+------------+-------+------------+---------+-------------+\n\nALTER TABLE t1 ADD COLUMN IF NOT EXISTS a2 NUMBER;\n\nDESC TABLE t1;\n\n+------+-----------------------------------+--------+-------+---------+-------------+------------+-------+------------+---------+-------------+\n| name | type                              | kind   | null? | default | primary key | unique key | check | expression | comment | policy name |\n|------+-----------------------------------+--------+-------+---------+-------------+------------+-------+------------+---------+-------------|\n| A1   | NUMBER(38,0)                      | COLUMN | Y     | NULL    | N           | N          | NULL  | NULL       | NULL    | NULL        |\n| A2   | NUMBER(38,0)                      | COLUMN | Y     | NULL    | N           | N          | NULL  | NULL       | NULL    | NULL        |\n| A3   | NUMBER(38,0)                      | COLUMN | N     | NULL    | N           | N          | NULL  | NULL       | NULL    | NULL        |\n| A4   | NUMBER(38,0)                      | COLUMN | N     | 0       | N           | N          | NULL  | NULL       | NULL    | NULL        |\n| A5   | VARCHAR(16777216) COLLATE 'en_us' | COLUMN | Y     | NULL    | N           | N          | NULL  | NULL       | NULL    | NULL        |\n+------+-----------------------------------+--------+-------+---------+-------------+------------+-------+------------+---------+-------------+\n\nALTER TABLE t1 RENAME COLUMN a1 TO b1;\n\nDESC TABLE t1;\n\n+------+--------------+--------+-------+---------+-------------+------------+-------+------------+---------+-------------+\n| name | type         | kind   | null? | default | primary key | unique key | check | expression | comment | policy name |\n|------+--------------+--------+-------+---------+-------------+------------+-------+------------+---------+-------------|\n| B1   | NUMBER(38,0) | COLUMN | Y     | NULL    | N           | N          | NULL  | NULL       | NULL    | NULL        |\n| A2   | NUMBER(38,0) | COLUMN | Y     | NULL    | N           | N          | NULL  | NULL       | NULL    | NULL        |\n| A3   | NUMBER(38,0) | COLUMN | N     | NULL    | N           | N          | NULL  | NULL       | NULL    | NULL        |\n| A4   | NUMBER(38,0) | COLUMN | N     | 0       | N           | N          | NULL  | NULL       | NULL    | NULL        |\n+------+--------------+--------+-------+---------+-------------+------------+-------+------------+---------+-------------+\n\nALTER TABLE t1 DROP COLUMN a2;\n\nDESC TABLE t1;\n\n+------+--------------+--------+-------+---------+-------------+------------+-------+------------+---------+-------------+\n| name | type         | kind   | null? | default | primary key | unique key | check | expression | comment | policy name |\n|------+--------------+--------+-------+---------+-------------+------------+-------+------------+---------+-------------|\n| B1   | NUMBER(38,0) | COLUMN | Y     | NULL    | N           | N          | NULL  | NULL       | NULL    | NULL        |\n| A3   | NUMBER(38,0) | COLUMN | N     | NULL    | N           | N          | NULL  | NULL       | NULL    | NULL        |\n| A4   | NUMBER(38,0) | COLUMN | N     | 0       | N           | N          | NULL  | NULL       | NULL    | NULL        |\n+------+--------------+--------+-------+---------+-------------+------------+-------+------------+---------+-------------+\n\nALTER TABLE t1 DROP COLUMN IF EXISTS a2;\n\n+------+--------------+--------+-------+---------+-------------+------------+-------+------------+---------+-------------+\n| name | type         | kind   | null? | default | primary key | unique key | check | expression | comment | policy name |\n|------+--------------+--------+-------+---------+-------------+------------+-------+------------+---------+-------------|\n| B1   | NUMBER(38,0) | COLUMN | Y     | NULL    | N           | N          | NULL  | NULL       | NULL    | NULL        |\n| A3   | NUMBER(38,0) | COLUMN | N     | NULL    | N           | N          | NULL  | NULL       | NULL    | NULL        |\n| A4   | NUMBER(38,0) | COLUMN | N     | 0       | N           | N          | NULL  | NULL       | NULL    | NULL        |\n+------+--------------+--------+-------+---------+-------------+------------+-------+------------+---------+-------------+\n\nCREATE EXTERNAL TABLE exttable1\n  LOCATION=@mystage/logs/\n  AUTO_REFRESH = true\n  FILE_FORMAT = (TYPE = PARQUET)\n  ;\n\nDESC EXTERNAL TABLE exttable1;\n\n+-----------+-------------------+-----------+-------+---------+-------------+------------+-------+----------------------------------------------------------+-----------------------+\n| name      | type              | kind      | null? | default | primary key | unique key | check | expression                                               | comment               |\n|-----------+-------------------+-----------+-------+---------+-------------+------------+-------+----------------------------------------------------------+-----------------------|\n| VALUE     | VARIANT           | COLUMN    | Y     | NULL    | N           | N          | NULL  | NULL                                                     | The value of this row |\n+-----------+-------------------+-----------+-------+---------+-------------+------------+-------+----------------------------------------------------------+-----------------------+\n\nALTER TABLE exttable1 ADD COLUMN a1 VARCHAR AS (value:a1::VARCHAR);\n\nDESC EXTERNAL TABLE exttable1;\n\n+-----------+-------------------+-----------+-------+---------+-------------+------------+-------+----------------------------------------------------------+-----------------------+\n| name      | type              | kind      | null? | default | primary key | unique key | check | expression                                               | comment               |\n|-----------+-------------------+-----------+-------+---------+-------------+------------+-------+----------------------------------------------------------+-----------------------|\n| VALUE     | VARIANT           | COLUMN    | Y     | NULL    | N           | N          | NULL  | NULL                                                     | The value of this row |\n| A1        | VARCHAR(16777216) | VIRTUAL   | Y     | NULL    | N           | N          | NULL  | TO_CHAR(GET(VALUE, 'a1'))                                | NULL                  |\n+-----------+-------------------+-----------+-------+---------+-------------+------------+-------+----------------------------------------------------------+-----------------------+\n\nALTER TABLE exttable1 RENAME COLUMN a1 TO b1;\n\nDESC EXTERNAL TABLE exttable1;\n\n+-----------+-------------------+-----------+-------+---------+-------------+------------+-------+----------------------------------------------------------+-----------------------+\n| name      | type              | kind      | null? | default | primary key | unique key | check | expression                                               | comment               |\n|-----------+-------------------+-----------+-------+---------+-------------+------------+-------+----------------------------------------------------------+-----------------------|\n| VALUE     | VARIANT           | COLUMN    | Y     | NULL    | N           | N          | NULL  | NULL                                                     | The value of this row |\n| B1        | VARCHAR(16777216) | VIRTUAL   | Y     | NULL    | N           | N          | NULL  | TO_CHAR(GET(VALUE, 'a1'))                                | NULL                  |\n+-----------+-------------------+-----------+-------+---------+-------------+------------+-------+----------------------------------------------------------+-----------------------+\n\nALTER TABLE exttable1 DROP COLUMN b1;\n\nDESC EXTERNAL TABLE exttable1;\n\n+-----------+-------------------+-----------+-------+---------+-------------+------------+-------+----------------------------------------------------------+-----------------------+\n| name      | type              | kind      | null? | default | primary key | unique key | check | expression                                               | comment               |\n|-----------+-------------------+-----------+-------+---------+-------------+------------+-------+----------------------------------------------------------+-----------------------|\n| VALUE     | VARIANT           | COLUMN    | Y     | NULL    | N           | N          | NULL  | NULL                                                     | The value of this row |\n+-----------+-------------------+-----------+-------+---------+-------------+------------+-------+----------------------------------------------------------+-----------------------+\n\nCREATE OR REPLACE TABLE T1 (id NUMBER, date TIMESTAMP_NTZ, name STRING) CLUSTER BY (id, date);\n\nSHOW TABLES LIKE 'T1';\n\n---------------------------------+------+---------------+-------------+-------+---------+------------+------+-------+--------------+----------------+\n           created_on            | name | database_name | schema_name | kind  | comment | cluster_by | rows | bytes |    owner     | retention_time |\n---------------------------------+------+---------------+-------------+-------+---------+------------+------+-------+--------------+----------------+\n Tue, 21 Jun 2016 15:42:12 -0700 | T1   | TESTDB        | TESTSCHEMA  | TABLE |         | (ID,DATE)  | 0    | 0     | ACCOUNTADMIN | 1              |\n---------------------------------+------+---------------+-------------+-------+---------+------------+------+-------+--------------+----------------+\n\nALTER TABLE t1 CLUSTER BY (date, id);\n\nSHOW TABLES LIKE 'T1';\n\n---------------------------------+------+---------------+-------------+-------+---------+------------+------+-------+--------------+----------------+\n           created_on            | name | database_name | schema_name | kind  | comment | cluster_by | rows | bytes |    owner     | retention_time |\n---------------------------------+------+---------------+-------------+-------+---------+------------+------+-------+--------------+----------------+\n Tue, 21 Jun 2016 15:42:12 -0700 | T1   | TESTDB        | TESTSCHEMA  | TABLE |         | (DATE,ID)  | 0    | 0     | ACCOUNTADMIN | 1              |\n---------------------------------+------+---------------+-------------+-------+---------+------------+------+-------+--------------+----------------+\n\nALTER TABLE t1 ADD ROW ACCESS POLICY rap_t1 ON (empl_id);\n\nALTER TABLE t1 ADD ROW ACCESS POLICY rap_test2 ON (cost, item);\n\nALTER TABLE t1 DROP ROW ACCESS POLICY rap_v1;\n\nalter table t1\n  drop row access policy rap_t1_version_1,\n  add row access policy rap_t1_version_2 on (empl_id);\n\nALTER TABLE hr.tables.empl_info SET\n  DATA_METRIC_SCHEDULE = '5 MINUTE';\n\nALTER TABLE hr.tables.empl_info SET\n  DATA_METRIC_SCHEDULE = 'USING CRON 0 8 * * * UTC';\n\nALTER TABLE hr.tables.empl_info SET\n  DATA_METRIC_SCHEDULE = 'USING CRON 0 8 * * MON,TUE,WED,THU,FRI UTC';\n\nALTER TABLE hr.tables.empl_info SET\n  DATA_METRIC_SCHEDULE = 'USING CRON 0 6,12,18 * * * UTC';\n\nALTER TABLE hr.tables.empl_info SET\n  DATA_METRIC_SCHEDULE = 'TRIGGER_ON_CHANGES';\n\nALTER TABLE join_table_2\n  SET JOIN POLICY jp1 ALLOWED JOIN KEYS (col1);"
},
{
    "function_name": "ALTER STREAMLIT",
    "summary": "Modifies the properties of an existing Streamlit object.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-streamlit",
    "title": "ALTER STREAMLIT",
    "description": "Modifies the properties of an existing Streamlit object.",
    "syntax": "ALTER STREAMLIT [ IF EXISTS ] <name> SET\n  [ ROOT_LOCATION = '<stage_path_and_root_directory>' ]\n  [ MAIN_FILE = '<path_to_main_file>']\n  [ QUERY_WAREHOUSE = <warehouse_name> ]\n  [ COMMENT = '<string_literal>']\n  [ TITLE = '<app_title>' ]\n  [ IMPORTS = ( '<stage_path_and_file_name_to_read>' [ , ... ] ) ]\n  [ EXTERNAL_ACCESS_INTEGRATIONS = ( <integration_name> [ , ... ] ) ]\n\nALTER STREAMLIT [ IF EXISTS ] <name> RENAME TO <new_name>\n\nALTER STREAMLIT <name> COMMIT\n\nALTER STREAMLIT <name> PUSH [ TO <git_branch_uri> ]\n  [ { GIT_CREDENTIALS = <snowflake_secret> | USERNAME = <git_username> PASSWORD = <git_password> } NAME = <git_author_name> EMAIL = <git_author_email> ]\n  [ COMMENT = <git_push_comment> ]\n\nALTER STREAMLIT <name> ABORT\n\nALTER STREAMLIT <name> PULL",
    "example": ""
},
{
    "function_name": "ALTER STREAM",
    "summary": "Modifies the properties, columns, or constraints for an existing stream.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-stream",
    "title": "ALTER STREAM",
    "description": "Modifies the properties, columns, or constraints for an existing",
    "syntax": "ALTER STREAM [ IF EXISTS ] <name> SET COMMENT = '<string_literal>'\n\nALTER STREAM [ IF EXISTS ] <name> SET TAG <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' ... ]\n\nALTER STREAM <name> UNSET TAG <tag_name> [ , <tag_name> ... ]\n\nALTER STREAM [ IF EXISTS ] <name> UNSET COMMENT",
    "example": "ALTER STREAM mystream SET COMMENT = 'New comment for stream';"
},
{
    "function_name": "ALTER STORAGE INTEGRATION",
    "summary": "Modifies the properties for an existing storage integration.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-storage-integration",
    "title": "ALTER STORAGE INTEGRATION",
    "description": "Modifies the properties for an existing storage integration.",
    "syntax": "ALTER [ STORAGE ] INTEGRATION [ IF EXISTS ] <name> SET\n  [ cloudProviderParams ]\n  [ ENABLED = { TRUE | FALSE } ]\n  [ STORAGE_ALLOWED_LOCATIONS = ('<cloud>://<bucket>/<path>/' [ , '<cloud>://<bucket>/<path>/' ... ] ) ]\n  [ STORAGE_BLOCKED_LOCATIONS = ('<cloud>://<bucket>/<path>/' [ , '<cloud>://<bucket>/<path>/' ... ] ) ]\n  [ COMMENT = '<string_literal>' ]\n\nALTER [ STORAGE ] INTEGRATION [ IF EXISTS ] <name> SET TAG <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' ... ]\n\nALTER [ STORAGE ] INTEGRATION <name> UNSET TAG <tag_name> [ , <tag_name> ... ]\n\nALTER [ STORAGE ] INTEGRATION [ IF EXISTS ] <name>  UNSET {\n                                                          ENABLED                   |\n                                                          STORAGE_BLOCKED_LOCATIONS |\n                                                          COMMENT\n                                                          }\n                                                          [ , ... ]",
    "example": "ALTER STORAGE INTEGRATION myint SET ENABLED = TRUE;"
},
{
    "function_name": "ALTER STAGE",
    "summary": "Modifies the properties for an existing named internal or external stage.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-stage",
    "title": "ALTER STAGE",
    "description": "Modifies the properties for an existing named internal or external stage.",
    "syntax": "ALTER STAGE [ IF EXISTS ] <name> RENAME TO <new_name>\n\nALTER STAGE [ IF EXISTS ] <name> SET TAG <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' ... ]\n\nALTER STAGE <name> UNSET TAG <tag_name> [ , <tag_name> ... ]\n\n-- Internal stage\nALTER STAGE [ IF EXISTS ] <name> SET\n  [ FILE_FORMAT = ( { FORMAT_NAME = '<file_format_name>' | TYPE = { CSV | JSON | AVRO | ORC | PARQUET | XML | CUSTOM } [ formatTypeOptions ] } ) ]\n  { [ COMMENT = '<string_literal>' ] }\n\n-- External stage\nALTER STAGE [ IF EXISTS ] <name> SET {\n    [ externalStageParams ]\n    [ FILE_FORMAT = ( { FORMAT_NAME = '<file_format_name>' | TYPE = { CSV | JSON | AVRO | ORC | PARQUET | XML | CUSTOM } [ formatTypeOptions ] } ) ]\n    [ COMMENT = '<string_literal>' ]\n    }",
    "example": "ALTER STAGE my_int_stage RENAME TO new_int_stage;\n\nALTER STAGE my_ext_stage\nSET URL='s3://loading/files/new/'\nCOPY_OPTIONS = (ON_ERROR='skip_file');\n\nALTER STAGE my_ext_stage SET STORAGE_INTEGRATION = myint;\n\nALTER STAGE my_ext_stage SET CREDENTIALS=(AWS_KEY_ID='d4c3b2a1' AWS_SECRET_KEY='z9y8x7w6');\n\nALTER STAGE my_ext_stage3 SET ENCRYPTION=(TYPE='AWS_SSE_S3');"
},
{
    "function_name": "ALTER SNAPSHOT",
    "summary": "Modifies the properties of an existing snapshot.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-snapshot",
    "title": "ALTER SNAPSHOT",
    "description": "",
    "syntax": "ALTER SNAPSHOT [ IF EXISTS ] <name> SET COMMENT = '<string_literal>'",
    "example": "ALTER SNAPSHOT example_snapshot SET COMMENT = 'sample comment.';"
},
{
    "function_name": "ALTER SHARE",
    "summary": "Modifies the properties for an existing share.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-share",
    "title": "ALTER SHARE",
    "description": "",
    "syntax": "ALTER SHARE [ IF EXISTS ] <name> { ADD | REMOVE } ACCOUNTS = <consumer_account> [ , <consumer_account> , ... ]\n                                        [ SHARE_RESTRICTIONS = { TRUE | FALSE } ]\n\nALTER SHARE [ IF EXISTS ] <name> SET { [ ACCOUNTS = <consumer_account> [ , <consumer_account> ... ] ]\n                                       [ COMMENT = '<string_literal>' ] }\n\nALTER SHARE [ IF EXISTS ] <name> SET TAG <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' ... ]\n\nALTER SHARE <name> UNSET TAG <tag_name> [ , <tag_name> ... ]\n\nALTER SHARE [ IF EXISTS ] <name> UNSET COMMENT",
    "example": "ALTER SHARE sales_s ADD ACCOUNTS=<orgname.accountname1>,<orgname.accountname2>;\n\n+----------------------------------+\n| status                           |\n|----------------------------------|\n| Statement executed successfully. |\n+----------------------------------+\n\nALTER SHARE sales_s REMOVE ACCOUNT=<orgname.accountname>;\n\n+----------------------------------+\n| status                           |\n|----------------------------------|\n| Statement executed successfully. |\n+----------------------------------+\n\nGRANT MANAGE SHARE TARGET ON ACCOUNT TO ROLE <role_name>;\n\nGRANT ROLE <role_name> TO USER <user_name>;\n\nUSE ROLE <role_name>;\n\nALTER SHARE <data_share_name> ADD ACCOUNTS = <orgname.accountname1>,<orgname.accountname2>;\n\nALTER SHARE sales_s SET COMMENT='This share contains sales data for 2017';\n\n+----------------------------------+\n| status                           |\n|----------------------------------|\n| Statement executed successfully. |\n+----------------------------------+"
},
{
    "function_name": "ALTER SESSION POLICY",
    "summary": "Modifies the properties for an existing session policy.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-session-policy",
    "title": "ALTER SESSION POLICY",
    "description": "",
    "syntax": "ALTER SESSION POLICY [ IF EXISTS ] <name> RENAME TO <new_name>\n\nALTER SESSION POLICY [ IF EXISTS ] <name> SET\n  [ SESSION_IDLE_TIMEOUT_MINS = <integer> ]\n  [ SESSION_UI_IDLE_TIMEOUT_MINS = <integer> ]\n  [ ALLOWED_SECONDARY_ROLES = ( [ { 'ALL' | <role_name> [ , <role_name> ... ] } ] ) ]\n  [ COMMENT = '<string_literal>' ]\n\nALTER SESSION POLICY [ IF EXISTS ] <name> SET\n  TAG <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' ... ]\n\nALTER SESSION POLICY [ IF EXISTS ] <name> UNSET TAG <tag_name> [ , <tag_name> ... ]\n\nALTER SESSION POLICY [ IF EXISTS ] <name> UNSET\n  [ SESSION_IDLE_TIMEOUT_MINS ]\n  [ SESSION_UI_IDLE_TIMEOUT_MINS ]\n  [ ALLOWED_SECONDARY_ROLES ]\n  [ COMMENT ]",
    "example": "DESC SESSION POLICY session_policy_prod_1;\n\n+---------------------------------+-----------------------+------------------------+--------------------------+--------------------------------------------------+\n| createdOn                       | name                  | sessionIdleTimeoutMins | sessionUIIdleTimeoutMins | comment                                          |\n+---------------------------------+-----------------------+------------------------+--------------------------+--------------------------------------------------+\n| Mon, 11 Jan 2021 00:00:00 -0700 | session_policy_prod_1 | 30                     | 30                       | session policy for use in the prod_1 environment |\n+---------------------------------+-----------------------+------------------------+--------------------------+--------------------------------------------------+\n\nALTER SESSION POLICY session_policy_prod_1 SET SESSION_UI_IDLE_TIMEOUT_MINS = 15;"
},
{
    "function_name": "ALTER SESSION",
    "summary": "Sets parameters that change the behavior for the current session.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-session",
    "title": "ALTER SESSION",
    "description": "Sets parameters that change the behavior for the current session.",
    "syntax": "ALTER SESSION SET sessionParams\n\nALTER SESSION UNSET <param_name> [ , <param_name> , ... ]",
    "example": "ALTER SESSION SET LOCK_TIMEOUT = 3600;\n\nALTER SESSION UNSET LOCK_TIMEOUT;"
},
{
    "function_name": "ALTER SERVICE",
    "summary": "Modifies Snowpark Container Services service configuration, upgrades the code for the service, and allows you to suspend or resume a service.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-service",
    "title": "ALTER SERVICE",
    "description": "",
    "syntax": "ALTER SERVICE [ IF EXISTS ] <name> { SUSPEND | RESUME }\n\nALTER SERVICE [ IF EXISTS ] <name>\n  {\n     fromSpecification\n     | fromSpecificationTemplate\n  }\n\nALTER SERVICE [IF EXISTS] <service_name> RESTORE VOLUME <volume_name>\n                                                 INSTANCES <comma_separated_instance_ids>\n                                                 FROM SNAPSHOT <snapshot_name>\n\nALTER SERVICE [ IF EXISTS ] <name> SET [ MIN_INSTANCES = <num> ]\n                                       [ MAX_INSTANCES = <num> ]\n                                       [ LOG_LEVEL = '<log_level>' ]\n                                       [ AUTO_SUSPEND_SECS = <num> ]\n                                       [ MIN_READY_INSTANCES = <num> ]\n                                       [ QUERY_WAREHOUSE = <warehouse_name> ]\n                                       [ AUTO_RESUME = { TRUE | FALSE } ]\n                                       [ EXTERNAL_ACCESS_INTEGRATIONS = ( <EAI_name> [ , ... ] ) ]\n                                       [ COMMENT = '<string_literal>' ]\n\n\n\nALTER SERVICE [ IF EXISTS ] <name> UNSET { MIN_INSTANCES                |\n                                           AUTO_SUSPEND_SECS            |\n                                           MAX_INSTANCES                |\n                                           LOG_LEVEL                    |\n                                           MIN_READY_INSTANCES          |\n                                           QUERY_WAREHOUSE              |\n                                           AUTO_RESUME                  |\n                                           EXTERNAL_ACCESS_INTEGRATIONS |\n                                           COMMENT\n                                         }\n                                         [ , ... ]\n\nALTER SERVICE [ IF EXISTS ] <name> SET [ TAG <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' ... ]]",
    "example": "ALTER SERVICE echo_service SUSPEND;\n\nALTER SERVICE echo_service SET MIN_INSTANCES=3 MAX_INSTANCES=5;\n\nALTER SERVICE example_service\n  RESTORE VOLUME \"myvolume\"\n  INSTANCES 0,2\n  FROM SNAPSHOT my_snapshot;"
},
{
    "function_name": "ALTER SEQUENCE",
    "summary": "Modifies the properties for an existing sequence.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-sequence",
    "title": "ALTER SEQUENCE",
    "description": "Modifies the properties for an existing sequence.",
    "syntax": "ALTER SEQUENCE [ IF EXISTS ] <name> RENAME TO <new_name>\n\nALTER SEQUENCE [ IF EXISTS ] <name> [ SET ] [ INCREMENT [ BY ] [ = ] <sequence_interval> ]\n\nALTER SEQUENCE [ IF EXISTS ] <name> SET\n  [ { ORDER | NOORDER } ]\n  [ COMMENT = '<string_literal>' ]\n\nALTER SEQUENCE [ IF EXISTS ] <name> UNSET COMMENT",
    "example": "ALTER SEQUENCE myseq RENAME TO newseq;"
},
{
    "function_name": "ALTER SECURITY INTEGRATION (SCIM)",
    "summary": "Modifies the properties of an existing SCIM security integration.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-security-integration-scim",
    "title": "ALTER SECURITY INTEGRATION (SCIM)",
    "description": "Modifies the properties of an existing SCIM security integration. For information about modifying other types of\nsecurity integrations (e.g. SAML2), see",
    "syntax": "ALTER [ SECURITY ] INTEGRATION [ IF EXISTS ] <name> SET\n    [ ENABLED = { TRUE | FALSE } ]\n    [ NETWORK_POLICY = '<network_policy>' ]\n    [ SYNC_PASSWORD = { TRUE | FALSE } ]\n    [ COMMENT = '<string_literal>' ]\n\nALTER [ SECURITY ] INTEGRATION [ IF EXISTS ] <name>  UNSET {\n                                                            NETWORK_POLICY |\n                                                            [ , ... ]\n                                                            }\nALTER [ SECURITY ] INTEGRATION <name> SET TAG <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' ... ]\n\nALTER [ SECURITY ] INTEGRATION <name> UNSET TAG <tag_name> [ , <tag_name> ... ]",
    "example": "ALTER SECURITY INTEGRATION myint SET ENABLED = TRUE;"
},
{
    "function_name": "ALTER SECURITY INTEGRATION (SAML2)",
    "summary": "Modifies the properties of an existing SAML2 security integration.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-security-integration-saml2",
    "title": "ALTER SECURITY INTEGRATION (SAML2)",
    "description": "Modifies the properties of an existing SAML2 security integration. For information about modifying other types of\nsecurity integrations (e.g. SCIM), see",
    "syntax": "ALTER [ SECURITY ] INTEGRATION [ IF EXISTS ] <name> SET\n    [ TYPE = SAML2 ]\n    [ ENABLED = { TRUE | FALSE } ]\n    [ SAML2_ISSUER = '<string_literal>' ]\n    [ SAML2_SSO_URL = '<string_literal>' ]\n    [ SAML2_PROVIDER = '<string_literal>' ]\n    [ SAML2_X509_CERT = '<string_literal>' ]\n    [ ALLOWED_USER_DOMAINS = ( '<string_literal>' [ , '<string_literal>' , ... ] ) ]\n    [ ALLOWED_EMAIL_PATTERNS = ( '<string_literal>' [ , '<string_literal>' , ... ] ) ]\n    [ SAML2_SP_INITIATED_LOGIN_PAGE_LABEL = '<string_literal>' ]\n    [ SAML2_ENABLE_SP_INITIATED = TRUE | FALSE ]\n    [ SAML2_SNOWFLAKE_X509_CERT = '<string_literal>' ]\n    [ SAML2_SIGN_REQUEST = TRUE | FALSE ]\n    [ SAML2_REQUESTED_NAMEID_FORMAT = '<string_literal>' ]\n    [ SAML2_POST_LOGOUT_REDIRECT_URL = '<string_literal>' ]\n    [ SAML2_FORCE_AUTHN = TRUE | FALSE ]\n    [ SAML2_SNOWFLAKE_ISSUER_URL = '<string_literal>' ]\n    [ SAML2_SNOWFLAKE_ACS_URL = '<string_literal>' ]\n    [ COMMENT = '<string_literal>' ]\n\nALTER [ SECURITY ] INTEGRATION [ IF EXISTS ] <name> UNSET {\n    ENABLED |\n    [ , ... ]\n    }\n\nALTER [ SECURITY ] INTEGRATION <name> SET TAG <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' ... ]\n\nALTER [ SECURITY ] INTEGRATION <name> UNSET TAG <tag_name> [ , <tag_name> ... ]\n\nALTER [ SECURITY ] INTEGRATION <name> REFRESH SAML2_SNOWFLAKE_PRIVATE_KEY",
    "example": "ALTER SECURITY INTEGRATION myint SET ENABLED = TRUE;\n\nalter security integration my_idp refresh SAML2_SNOWFLAKE_PRIVATE_KEY;"
},
{
    "function_name": "ALTER SECURITY INTEGRATION (Snowflake OAuth)",
    "summary": "Modifies the properties of an existing security integration created for a Snowflake OAuth client.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-security-integration-oauth-snowflake",
    "title": "ALTER SECURITY INTEGRATION (Snowflake OAuth)",
    "description": "Modifies the properties of an existing security integration created for a Snowflake OAuth client. For information about modifying other\ntypes of security integrations (e.g. External OAuth), see",
    "syntax": "ALTER [ SECURITY ] INTEGRATION <name> SET TAG <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' ... ]\n\nALTER [ SECURITY ] INTEGRATION <name> UNSET TAG <tag_name> [ , <tag_name> ... ]",
    "example": "ALTER SECURITY INTEGRATION myint SET ENABLED = TRUE;"
},
{
    "function_name": "ALTER SECURITY INTEGRATION (External OAuth)",
    "summary": "Modifies the properties of an existing security integration created for External OAuth.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-security-integration-oauth-external",
    "title": "ALTER SECURITY INTEGRATION (External OAuth)",
    "description": "",
    "syntax": "ALTER [ SECURITY ] INTEGRATION [ IF EXISTS ] <name> SET\n  [ TYPE = EXTERNAL_OAUTH ]\n  [ ENABLED = { TRUE | FALSE } ]\n  [ EXTERNAL_OAUTH_TYPE = { OKTA | AZURE | PING_FEDERATE | CUSTOM } ]\n  [ EXTERNAL_OAUTH_ISSUER = '<string_literal>' ]\n  [ EXTERNAL_OAUTH_TOKEN_USER_MAPPING_CLAIM = '<string_literal>' | ('<string_literal>', '<string_literal>' [ , ... ] ) ]\n  [ EXTERNAL_OAUTH_SNOWFLAKE_USER_MAPPING_ATTRIBUTE = 'LOGIN_NAME | EMAIL_ADDRESS' ]\n  [ EXTERNAL_OAUTH_JWS_KEYS_URL = '<string_literal>' ] -- For OKTA | PING_FEDERATE | CUSTOM\n  [ EXTERNAL_OAUTH_JWS_KEYS_URL = '<string_literal>' | ('<string_literal>' [ , '<string_literal>' ... ] ) ] -- For Azure\n  [ EXTERNAL_OAUTH_RSA_PUBLIC_KEY = <public_key1> ]\n  [ EXTERNAL_OAUTH_RSA_PUBLIC_KEY_2 = <public_key2> ]\n  [ EXTERNAL_OAUTH_BLOCKED_ROLES_LIST = ( '<role_name>' [ , '<role_name>' , ... ] ) ]\n  [ EXTERNAL_OAUTH_ALLOWED_ROLES_LIST = ( '<role_name>' [ , '<role_name>' , ... ] ) ]\n  [ EXTERNAL_OAUTH_AUDIENCE_LIST = ('<string_literal>') ]\n  [ EXTERNAL_OAUTH_ANY_ROLE_MODE = DISABLE | ENABLE | ENABLE_FOR_PRIVILEGE ]\n  [ EXTERNAL_OAUTH_SCOPE_DELIMITER = '<string_literal>' ] -- Only for EXTERNAL_OAUTH_TYPE = CUSTOM\n  [ COMMENT = '<string_literal>' ]\n\nALTER [ SECURITY ] INTEGRATION [ IF EXISTS ] <name>  UNSET {\n                                                            ENABLED                      |\n                                                            EXTERNAL_OAUTH_AUDIENCE_LIST |\n                                                            }\n                                                            [ , ... ]\n\nALTER [ SECURITY ] INTEGRATION <name> SET TAG <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' ... ]\n\nALTER [ SECURITY ] INTEGRATION <name> UNSET TAG <tag_name> [ , <tag_name> ... ]",
    "example": "ALTER SECURITY INTEGRATION myint SET ENABLED = TRUE;"
},
{
    "function_name": "ALTER SECURITY INTEGRATION (AWS IAM Authentication)",
    "summary": "Modifies the properties of an existing security integration created for authenticating with AWS IAM.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-security-integration-aws-iam",
    "title": "ALTER SECURITY INTEGRATION (AWS IAM Authentication)",
    "description": "",
    "syntax": "ALTER [ SECURITY ] INTEGRATION [ IF EXISTS ] <name> SET\n  [ TYPE = AWS_IAM ]\n  [ AWS_ROLE_ARN = '<iam_role_arn>' ]\n  [ ENABLED = { TRUE | FALSE } ]\n  [ COMMENT = '<string_literal>' ]\n\nALTER [ SECURITY ] INTEGRATION <name> SET TAG <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' ... ]\n\nALTER [ SECURITY ] INTEGRATION <name> UNSET TAG <tag_name> [ , <tag_name> ... ]",
    "example": "ALTER SECURITY INTEGRATION myint SET ENABLED = TRUE;"
},
{
    "function_name": "ALTER SECURITY INTEGRATION (External API Authentication)",
    "summary": "Modifies the properties of an existing security integration created for External API Authentication.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-security-integration-api-auth",
    "title": "ALTER SECURITY INTEGRATION (External API Authentication)",
    "description": "Modifies the properties of an existing security integration created for External API Authentication.",
    "syntax": "ALTER SECURITY INTEGRATION <name> SET\n  [ ENABLED = { TRUE | FALSE } ]\n  [ OAUTH_TOKEN_ENDPOINT = '<string_literal>' ]\n  [ OAUTH_CLIENT_AUTH_METHOD = CLIENT_SECRET_POST ]\n  [ OAUTH_CLIENT_ID = '<string_literal>' ]\n  [ OAUTH_CLIENT_SECRET = '<string_literal>' ]\n  [ OAUTH_GRANT = 'CLIENT_CREDENTIALS']\n  [ OAUTH_ACCESS_TOKEN_VALIDITY = <integer> ]\n  [ OAUTH_ALLOWED_SCOPES = ( '<scope_1>' [ , '<scope_2>' ... ] ) ]\n  [ COMMENT = '<string_literal>' ]\n\nALTER [ SECURITY ] INTEGRATION <name> SET TAG <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' ... ]\n\nALTER [ SECURITY ] INTEGRATION <name> UNSET TAG <tag_name> [ , <tag_name> ... ]\n\nALTER [ SECURITY ] INTEGRATION [ IF EXISTS ] <name> UNSET {\n  ENABLED | [ , ... ]\n}",
    "example": "ALTER SECURITY INTEGRATION myint SET ENABLED = TRUE;"
},
{
    "function_name": "ALTER SECURITY INTEGRATION",
    "summary": "Modifies the properties for an existing security integration.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-security-integration",
    "title": "ALTER SECURITY INTEGRATION",
    "description": "Modifies the properties for an existing security integration.",
    "syntax": "ALTER [ SECURITY ] INTEGRATION [ IF EXISTS ] <name> SET <parameters>\n\nALTER [ SECURITY ] INTEGRATION [ IF EXISTS ] <name>  UNSET <parameter>\n\nALTER [ SECURITY ] INTEGRATION <name> SET TAG <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' ... ]\n\nALTER [ SECURITY ] INTEGRATION <name> UNSET TAG <tag_name> [ , <tag_name> ... ]",
    "example": ""
},
{
    "function_name": "ALTER SECRET",
    "summary": "Modifies the properties of an existing secret.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-secret",
    "title": "ALTER SECRET",
    "description": "Modifies the properties of an existing secret.",
    "syntax": "ALTER SECRET [ IF EXISTS ] <name> SET [ OAUTH_SCOPES = ( '<scope_1>' [ , '<scope_2>' ... ] ) ]\n                                      [ COMMENT = '<string_literal>' ]\n\nALTER SECRET [ IF EXISTS ] <name> UNSET COMMENT",
    "example": "ALTER SECRET service_now_creds_pw SET COMMENT = 'production secret for servicenow';"
},
{
    "function_name": "ALTER SCHEMA",
    "summary": "Modifies the properties for an existing schema, including renaming the schema or swapping it with another schema, and changing the Time Travel data retention period (if you are using Snowflake Enterprise Edition or higher).",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-schema",
    "title": "ALTER SCHEMA",
    "description": "Modifies the properties for an existing schema, including renaming the schema or swapping it with another schema, and changing the Time Travel\ndata retention period (if you are using Snowflake Enterprise Edition or higher).",
    "syntax": "ALTER SCHEMA [ IF EXISTS ] <name> RENAME TO <new_schema_name>\n\nALTER SCHEMA [ IF EXISTS ] <name> SWAP WITH <target_schema_name>\n\nALTER SCHEMA [ IF EXISTS ] <name> SET {\n                                      [ DATA_RETENTION_TIME_IN_DAYS = <integer> ]\n                                      [ MAX_DATA_EXTENSION_TIME_IN_DAYS = <integer> ]\n                                      [ EXTERNAL_VOLUME = <external_volume_name> ]\n                                      [ CATALOG = <catalog_integration_name> ]\n                                      [ REPLACE_INVALID_CHARACTERS = { TRUE | FALSE } ]\n                                      [ DEFAULT_DDL_COLLATION = '<collation_specification>' ]\n                                      [ DEFAULT_NOTEBOOK_COMPUTE_POOL_CPU = '<compute_pool_name>' ]\n                                      [ DEFAULT_NOTEBOOK_COMPUTE_POOL_GPU = '<compute_pool_name>' ]\n                                      [ LOG_LEVEL = '<log_level>' ]\n                                      [ TRACE_LEVEL = '<trace_level>' ]\n                                      [ STORAGE_SERIALIZATION_POLICY = { COMPATIBLE | OPTIMIZED } ]\n                                      [ CLASSIFICATION_PROFILE = '<classification_profile>' ]\n                                      [ COMMENT = '<string_literal>' ]\n                                      [ CATALOG_SYNC = '<snowflake_open_catalog_integration_name>' ]\n                                      [ REPLICABLE_WITH_FAILOVER_GROUPS = { 'YES' | 'NO' } ]\n                                      [ BASE_LOCATION_PREFIX = '<string>']\n                                      [ DEFAULT_STREAMLIT_NOTEBOOK_WAREHOUSE = '<warehouse_name>']\n                                      [ CONTACT ( <purpose> = <contact_name> [ , <purpose> = <contact_name> ... ] ) ]\n                                      }\n\nALTER SCHEMA [ IF EXISTS ] <name> SET TAG <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' ... ]\n\nALTER SCHEMA [ IF EXISTS ] <name> UNSET TAG <tag_name> [ , <tag_name> ... ]\n\nALTER SCHEMA [ IF EXISTS ] <name> UNSET {\n                                        DATA_RETENTION_TIME_IN_DAYS         |\n                                        MAX_DATA_EXTENSION_TIME_IN_DAYS     |\n                                        EXTERNAL_VOLUME                     |\n                                        CATALOG                             |\n                                        REPLACE_INVALID_CHARACTERS          |\n                                        DEFAULT_DDL_COLLATION               |\n                                        LOG_LEVEL                           |\n                                        TRACE_LEVEL                         |\n                                        STORAGE_SERIALIZATION_POLICY        |\n                                        COMMENT                             |\n                                        CATALOG_SYNC                        |\n                                        REPLICABLE_WITH_FAILOVER_GROUPS     |\n                                        BASE_LOCATION_PREFIX                |\n                                        DEFAULT_STREAMLIT_NOTEBOOK_WAREHOUSE|\n                                        CONTACT <purpose>\n                                        }\n                                        [ , ... ]\n\nALTER SCHEMA [ IF EXISTS ] <name> { ENABLE | DISABLE } MANAGED ACCESS",
    "example": "ALTER SCHEMA IF EXISTS schema1 RENAME TO schema2;\n\nALTER SCHEMA schema2 ENABLE MANAGED ACCESS;"
},
{
    "function_name": "ALTER ROW ACCESS POLICY",
    "summary": "Modifies the properties for an existing row access policy, including renaming the policy or replacing the policy rules.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-row-access-policy",
    "title": "ALTER ROW ACCESS POLICY",
    "description": "",
    "syntax": "ALTER ROW ACCESS POLICY [ IF EXISTS ] <name> RENAME TO <new_name>\n\nALTER ROW ACCESS POLICY [ IF EXISTS ] <name> SET BODY -> <expression_on_arg_name>\n\nALTER ROW ACCESS POLICY [ IF EXISTS ] <name> SET TAG <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' ... ]\n\nALTER ROW ACCESS POLICY [ IF EXISTS ] <name> UNSET TAG <tag_name> [ , <tag_name> ... ]\n\nALTER ROW ACCESS POLICY [ IF EXISTS ] <name> SET COMMENT = '<string_literal>'\n\nALTER ROW ACCESS POLICY [ IF EXISTS ] <name> UNSET COMMENT",
    "example": "DESC ROW ACCESS POLICY rap_table_employee_info;\n\n+-------------------------+-------------+-------------+------+\n| name                    | signature   | return_type | body |\n+-------------------------+-------------+-------------+------+\n| rap_table_employee_info | (V VARCHAR) | BOOLEAN     | true |\n+-------------------------+-------------+-------------+------+\n\nALTER ROW ACCESS POLICY rap_table_employee_info SET BODY -> false;"
},
{
    "function_name": "ALTER ROLE",
    "summary": "Modifies the properties for an existing custom role.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-role",
    "title": "ALTER ROLE",
    "description": "Modifies the properties for an existing",
    "syntax": "ALTER ROLE [ IF EXISTS ] <name> RENAME TO <new_name>\n\nALTER ROLE [ IF EXISTS ] <name> SET COMMENT = '<string_literal>'\n\nALTER ROLE [ IF EXISTS ] <name> UNSET COMMENT\n\nALTER ROLE [ IF EXISTS ] <name> SET TAG <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' ... ]\n\nALTER ROLE [ IF EXISTS ] <name> UNSET TAG <tag_name> [ , <tag_name> ... ]",
    "example": "ALTER ROLE role1 RENAME TO role2;\n\nALTER ROLE myrole SET COMMENT = 'New comment for role';"
},
{
    "function_name": "ALTER RESOURCE MONITOR",
    "summary": "Modifies the properties and triggers for an existing resource monitor.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-resource-monitor",
    "title": "ALTER RESOURCE MONITOR",
    "description": "Modifies the properties and triggers for an existing",
    "syntax": "ALTER RESOURCE MONITOR [ IF EXISTS ] <name> [ SET { [ CREDIT_QUOTA = <num> ]\n                                                    [ FREQUENCY = { MONTHLY | DAILY | WEEKLY | YEARLY | NEVER } ]\n                                                    [ START_TIMESTAMP = { <timestamp> | IMMEDIATELY } ]\n                                                    [ END_TIMESTAMP = <timestamp> ]\n                                                    [ NOTIFY_USERS = ( <user_name> [ , <user_name> , ... ] ) ] } ]\n                                            [ TRIGGERS triggerDefinition [ triggerDefinition ... ] ]",
    "example": "ALTER RESOURCE MONITOR limiter\n  SET CREDIT_QUOTA=2000\n  TRIGGERS ON 80 PERCENT DO NOTIFY\n           ON 100 PERCENT DO SUSPEND_IMMEDIATE;\n\nALTER RESOURCE MONITOR limiter\n  SET CREDIT_QUOTA = 2000\n      NOTIFY_USERS = (JDOE, \"Jane Smith\", \"John Doe\")\n  TRIGGERS ON 80 PERCENT DO NOTIFY\n           ON 100 PERCENT DO SUSPEND_IMMEDIATE"
},
{
    "function_name": "ALTER REPLICATION GROUP",
    "summary": "Modifies the properties for an existing replication group.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-replication-group",
    "title": "ALTER REPLICATION GROUP",
    "description": "",
    "syntax": "ALTER REPLICATION GROUP [ IF EXISTS ] <name> RENAME TO <new_name>\n\nALTER REPLICATION GROUP [ IF EXISTS ] <name> SET\n  [ OBJECT_TYPES = <object_type> [ , <object_type> , ... ] ]\n  [ ALLOWED_DATABASES = <db_name> [ , <db_name> , ... ] ]\n  [ ALLOWED_SHARES = <share_name> [ , <share_name> , ... ] ]\n\nALTER REPLICATION GROUP [ IF EXISTS ] <name> SET\n  OBJECT_TYPES = INTEGRATIONS [ , <object_type> , ... ]\n  ALLOWED_INTEGRATION_TYPES = <integration_type_name> [ , <integration_type_name> ... ]\n\nALTER REPLICATION GROUP [ IF EXISTS ] <name> SET\n  COMMENT = '<string_literal>'\n\nALTER REPLICATION GROUP [ IF EXISTS ] <name> SET\n  REPLICATION_SCHEDULE = '{ <num> MINUTE | USING CRON <expr> <time_zone> }'\n\nALTER REPLICATION GROUP [ IF EXISTS ] <name> SET\n  ERROR_INTEGRATION = <integration_name>\n\nALTER REPLICATION GROUP [ IF EXISTS ] <name> SET\n  TAG <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' ... ]\n\nALTER REPLICATION GROUP [ IF EXISTS ] <name> UNSET\n  { COMMENT | REPLICATION_SCHEDULE | ERROR_INTEGRATION } [ , ... ]\n\nALTER REPLICATION GROUP [ IF EXISTS ] <name> UNSET\n  TAG <tag_name> [ , <tag_name> ... ]\n\nALTER REPLICATION GROUP [ IF EXISTS ] <name>\n  ADD <db_name> [ , <db_name> ,  ... ] TO ALLOWED_DATABASES\n\nALTER REPLICATION GROUP [ IF EXISTS ] <name>\n  MOVE DATABASES <db_name> [ , <db_name> ,  ... ] TO REPLICATION GROUP <move_to_rg_name>\n\nALTER REPLICATION GROUP [ IF EXISTS ] <name>\n  REMOVE <db_name> [ , <db_name> ,  ... ] FROM ALLOWED_DATABASES\n\nALTER REPLICATION GROUP [ IF EXISTS ] <name>\n  ADD <share_name> [ , <share_name> ,  ... ] TO ALLOWED_SHARES\n\nALTER REPLICATION GROUP [ IF EXISTS ] <name>\n  MOVE SHARES <share_name> [ , <share_name> ,  ... ] TO REPLICATION GROUP <move_to_rg_name>\n\nALTER REPLICATION GROUP [ IF EXISTS ] <name>\n  REMOVE <share_name> [ , <share_name> ,  ... ] FROM ALLOWED_SHARES\n\nALTER REPLICATION GROUP [ IF EXISTS ] <name>\n  ADD <org_name>.<target_account_name> [ , <org_name>.<target_account_name> ,  ... ] TO ALLOWED_ACCOUNTS\n  [ IGNORE EDITION CHECK ]\n\nALTER REPLICATION GROUP [ IF EXISTS ] <name>\n  REMOVE <org_name>.<target_account_name> [ , <org_name>.<target_account_name> ,  ... ] FROM ALLOWED_ACCOUNTS",
    "example": "ALTER REPLICATION GROUP myrg ADD myorg.myaccount3 TO ALLOWED_ACCOUNTS;\n\nALTER REPLICATION GROUP myrg SET\n  OBJECT_TYPES = DATABASES, SHARES;\n\nALTER REPLICATION GROUP myrg\n  ADD db1 to ALLOWED_DATABASES;\n\nALTER REPLICATION GROUP myrg\n  ADD s2 TO ALLOWED_SHARES;\n\nALTER REPLICATION GROUP myrg\n  MOVE DATABASES db1 TO REPLICATION GROUP myrg2;\n\nALTER REPLICATION GROUP myrg SET\n  REPLICATION_SCHEDULE = '15 MINUTE';\n\nALTER REPLICATION GROUP myrg REFRESH;\n\nALTER REPLICATION GROUP myrg SUSPEND;"
},
{
    "function_name": "ALTER PROJECTION POLICY",
    "summary": "Replaces the existing projection policy rules with new rules or a new comment and allows the renaming of a projection policy.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-projection-policy",
    "title": "ALTER PROJECTION POLICY",
    "description": "",
    "syntax": "ALTER PROJECTION POLICY [ IF EXISTS ] <name> RENAME TO <new_name>\n\nALTER PROJECTION POLICY [ IF EXISTS ] <name> SET BODY -> <expression>\n\nALTER PROJECTION POLICY <name> SET TAG <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' ... ]\n\nALTER PROJECTION POLICY <name> UNSET TAG <tag_name> [ , <tag_name> ... ]\n\nALTER PROJECTION POLICY [ IF EXISTS ] <name> SET COMMENT = '<string_literal>'\n\nALTER PROJECTION POLICY [ IF EXISTS ] <name> UNSET COMMENT",
    "example": "ALTER PROJECTION POLICY mypolicy RENAME TO proj_policy_acctnumber;"
},
{
    "function_name": "ALTER PROCEDURE",
    "summary": "Modifies the properties for an existing stored procedure.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-procedure",
    "title": "ALTER PROCEDURE",
    "description": "Modifies the properties for an existing stored procedure. If you need to make any changes not supported here, use",
    "syntax": "ALTER PROCEDURE [ IF EXISTS ] <name> ( [ <arg_data_type> , ... ] ) RENAME TO <new_name>\n\nALTER PROCEDURE [ IF EXISTS ] <name> ( [ <arg_data_type> , ... ] ) SET\n  [ LOG_LEVEL = '<log_level>' ]\n  [ TRACE_LEVEL = '<trace_level>' ]\n  [ EXTERNAL_ACCESS_INTEGRATIONS = '<integration_name>' [ , '<integration_name>' ... ] ]\n  [ SECRETS = '<secret_variable_name>' = <secret_name> [ , '<secret_variable_name>' = <secret_name> ... ] ]\n  [ COMMENT = '<string_literal>' ]\n\nALTER PROCEDURE [ IF EXISTS ] <name> ( [ <arg_data_type> , ... ] ) UNSET COMMENT\n\nALTER PROCEDURE [ IF EXISTS ] <name> ( [ <arg_data_type> , ... ] ) SET TAG <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' ... ]\n\nALTER PROCEDURE [ IF EXISTS ] <name> ( [ <arg_data_type> , ... ] ) UNSET TAG <tag_name> [ , <tag_name> ... ]\n\nALTER PROCEDURE [ IF EXISTS ] <name> ( [ <arg_data_type> , ... ] ) EXECUTE AS { OWNER | CALLER | RESTRICTED CALLER }",
    "example": "ALTER PROCEDURE IF EXISTS procedure1(FLOAT) RENAME TO procedure2;"
},
{
    "function_name": "ALTER PRIVACY POLICY",
    "summary": "Modifies the properties of an existing privacy policy.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-privacy-policy",
    "title": "ALTER PRIVACY POLICY",
    "description": "",
    "syntax": "ALTER PRIVACY POLICY [ IF EXISTS ] <name> RENAME TO <new_name>\n\nALTER PRIVACY POLICY [ IF EXISTS ] <name> SET BODY -> <expression>\n\nALTER PRIVACY POLICY <name> SET TAG <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' ... ]\n\nALTER PRIVACY POLICY <name> UNSET TAG <tag_name> [ , <tag_name> ... ]\n\nALTER PRIVACY POLICY [ IF EXISTS ] <name> SET COMMENT = '<string_literal>'\n\nALTER PRIVACY POLICY [ IF EXISTS ] <name> UNSET COMMENT",
    "example": "-- Modify the body of privacy policy \"my_priv_policy\" so it always returns a\n-- budget named \"analysts\"\nALTER PRIVACY POLICY my_priv_policy SET BODY ->\n  PRIVACY_BUDGET(BUDGET_NAME => 'analysts');\n\n-- Set budget limit to 50 and max budget per aggregate to 0.1\n-- budget window is not mentioned so it is reset to its default value\nALTER PRIVACY POLICY users_policy SET BODY ->\n  privacy_budget(budget_name=>'analysts', budget_limit=>50, max_budget_per_aggregate=>0.1);"
},
{
    "function_name": "ALTER PIPE",
    "summary": "Modifies a limited set of properties for an existing pipe object.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-pipe",
    "title": "ALTER PIPE",
    "description": "Modifies a limited set of properties for an existing pipe object. Also supports the following operations:",
    "syntax": "ALTER PIPE [ IF EXISTS ] <name> SET { [ objectProperties ]\n                                      [ COMMENT = '<string_literal>' ] }\n\nALTER PIPE <name> SET TAG <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' ... ]\n\nALTER PIPE <name> UNSET TAG <tag_name> [ , <tag_name> ... ]\n\nALTER PIPE [ IF EXISTS ] <name> UNSET { <property_name> | COMMENT } [ , ... ]\n\nALTER PIPE [ IF EXISTS ] <name> REFRESH { [ PREFIX = '<path>' ] [ MODIFIED_AFTER = <start_time> ] }",
    "example": "alter pipe mypipe SET PIPE_EXECUTION_PAUSED = true;\n\nalter pipe mypipe SET COMMENT = \"Pipe for North American sales data\";\n\nCREATE PIPE mypipe AS COPY INTO mytable FROM @mystage/path1/;\n\nALTER PIPE mypipe REFRESH;\n\nALTER PIPE mypipe REFRESH PREFIX='d1/';\n\nALTER PIPE mypipe REFRESH PREFIX='d1/' MODIFIED_AFTER='2018-07-30T13:56:46-07:00';"
},
{
    "function_name": "ALTER PASSWORD POLICY",
    "summary": "Modifies the properties for an existing password policy.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-password-policy",
    "title": "ALTER PASSWORD POLICY",
    "description": "Modifies the properties for an existing password policy.",
    "syntax": "ALTER PASSWORD POLICY [ IF EXISTS ] <name> RENAME TO <new_name>\n\nALTER PASSWORD POLICY [ IF EXISTS ] <name> SET [ PASSWORD_MIN_LENGTH = <integer> ]\n                                               [ PASSWORD_MAX_LENGTH = <integer> ]\n                                               [ PASSWORD_MIN_UPPER_CASE_CHARS = <integer> ]\n                                               [ PASSWORD_MIN_LOWER_CASE_CHARS = <integer> ]\n                                               [ PASSWORD_MIN_NUMERIC_CHARS = <integer> ]\n                                               [ PASSWORD_MIN_SPECIAL_CHARS = <integer> ]\n                                               [ PASSWORD_MIN_AGE_DAYS = <integer> ]\n                                               [ PASSWORD_MAX_AGE_DAYS = <integer> ]\n                                               [ PASSWORD_MAX_RETRIES = <integer> ]\n                                               [ PASSWORD_LOCKOUT_TIME_MINS = <integer> ]\n                                               [ PASSWORD_HISTORY = <integer> ]\n                                               [ COMMENT = '<string_literal>' ]\n\nALTER PASSWORD POLICY [ IF EXISTS ] <name> SET TAG <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' ... ]\n\nALTER PASSWORD POLICY [ IF EXISTS ] <name> UNSET TAG <tag_name> [ , <tag_name> ... ]\n\nALTER PASSWORD POLICY [ IF EXISTS ] <name> UNSET [ PASSWORD_MIN_LENGTH ]\n                                                 [ PASSWORD_MAX_LENGTH ]\n                                                 [ PASSWORD_MIN_UPPER_CASE_CHARS ]\n                                                 [ PASSWORD_MIN_LOWER_CASE_CHARS ]\n                                                 [ PASSWORD_MIN_NUMERIC_CHARS ]\n                                                 [ PASSWORD_MIN_SPECIAL_CHARS ]\n                                                 [ PASSWORD_MIN_AGE_DAYS ]\n                                                 [ PASSWORD_MAX_AGE_DAYS ]\n                                                 [ PASSWORD_MAX_RETRIES ]\n                                                 [ PASSWORD_LOCKOUT_TIME_MINS ]\n                                                 [ PASSWORD_HISTORY ]\n                                                 [ COMMENT ]",
    "example": "DESC PASSWORD POLICY password_policy_prod_1;\n\nALTER PASSWORD POLICY password_policy_prod_1 SET PASSWORD_MAX_RETRIES = 3;"
},
{
    "function_name": "ALTER PACKAGES POLICY",
    "summary": "Modifies the properties for an existing packages policy.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-packages-policy",
    "title": "ALTER PACKAGES POLICY",
    "description": "Modifies the properties for an existing",
    "syntax": "ALTER PACKAGES POLICY [ IF EXISTS ] <name> SET\n  [ ALLOWLIST = ( [ '<packageSpec>' ] [ , '<packageSpec>' ... ] ) ]\n  [ BLOCKLIST = ( [ '<packageSpec>' ] [ , '<packageSpec>' ... ] ) ]\n  [ ADDITIONAL_CREATION_BLOCKLIST = ( [ '<packageSpec>' ] [ , '<packageSpec>' ... ] ) ]\n  [ COMMENT = '<string_literal>' ]\n\nALTER PACKAGES POLICY [ IF EXISTS ] <name> UNSET\n  [ ALLOWLIST ]\n  [ BLOCKLIST ]\n  [ ADDITIONAL_CREATION_BLOCKLIST ]\n  [ COMMENT ]",
    "example": "ALTER PACKAGES POLICY packages_policy_prod_1 SET ALLOWLIST = ('pandas==1.2.3');"
},
{
    "function_name": "ALTER ORGANIZATION USER GROUP",
    "summary": "Modifies the properties of an existing organization user group.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-organization-user-group",
    "title": "ALTER ORGANIZATION USER GROUP",
    "description": "",
    "syntax": "ALTER ORGANIZATION USER GROUP <name> ADD ORGANIZATION USERS <org_user> [ , <org_user> ... ]\n\nALTER ORGANIZATION USER GROUP <name> REMOVE ORGANIZATION USERS <org_user> [ , <org_user> ... ]\n\nALTER ORGANIZATION USER GROUP <name> SET VISIBILITY =\n  { ALL\n  | ACCOUNTS <account> [ , <account> ... ]\n  | REGION GROUPS '<region_group>' [ , '<region_group>' ... ]\n  }",
    "example": "ALTER ORGANIZATION USER GROUP marketing ADD ORGANIZATION USERS joe, mary;\n\nALTER ORGANIZATION USER GROUP data_stewards REMOVE ORGANIZATION USERS dave;\n\nALTER ORGANIZATION USER GROUP data_stewards SET VISIBILITY = ALL;\n\nALTER ORGANIZATION USER GROUP data_stewards SET VISIBILITY = ACCOUNTS qa_env;"
},
{
    "function_name": "ALTER ORGANIZATION USER",
    "summary": "Modifies the properties of an existing organization user.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-organization-user",
    "title": "ALTER ORGANIZATION USER",
    "description": "",
    "syntax": "ALTER ORGANIZATION USER [ IF EXISTS ] <name> SET [ objectProperties ]\n\nALTER ORGANIZATION USER <name> UNSET [ objectProperties ]",
    "example": "ALTER ORGANIZATION USER alice\n  SET LOGIN_NAME = 'asmith';"
},
{
    "function_name": "ALTER ORGANIZATION PROFILE",
    "summary": "Modifies the properties of an organization profile.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-organization-profile",
    "title": "ALTER ORGANIZATION PROFILE",
    "description": "",
    "syntax": "ALTER ORGANIZATION PROFILE [ IF EXISTS ] <name> RENAME TO <new_name>\n\nALTER ORGANIZATION PROFILE [ IF EXISTS ] <name> PUBLISH\n\nALTER ORGANIZATION PROFILE <name> ADD VERSION [ [ IF NOT EXISTS ] <version_alias_name> ]\n  FROM @<yaml_manifest_stage_location>\n\nALTER ORGANIZATION PROFILE <name> ADD LIVE VERSION [ [ IF NOT EXISTS ] <version_alias_name> ]\n  FROM LAST\n\nALTER ORGANIZATION PROFILE <name> COMMIT\n\nALTER ORGANIZATION PROFILE <name> ABORT",
    "example": "ALTER ORGANIZATION PROFILE MYORGPROFILE ADD VERSION V2 FROM @STAGE_PATH_WITH_UPDATED_MANIFEST;\n\nALTER ORGANIZATION PROFILE MYORGPROFILE PUBLISH;"
},
{
    "function_name": "ALTER ORGANIZATION ACCOUNT",
    "summary": "Modifies the properties of an existing organization account.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-organization-account",
    "title": "ALTER ORGANIZATION ACCOUNT",
    "description": "",
    "syntax": "ALTER ORGANIZATION ACCOUNT SET { [ accountParams ] | [ objectParams ] | [ sessionParams ] }\n\nALTER ORGANIZATION ACCOUNT UNSET <param_name> [ , ... ]\n\nALTER ORGANIZATION ACCOUNT SET RESOURCE_MONITOR = <monitor_name>\n\nALTER ORGANIZATION ACCOUNT SET { PASSWORD | SESSION } POLICY <policy_name>\n\nALTER ORGANIZATION ACCOUNT UNSET { PASSWORD | SESSION } POLICY\n\nALTER ORGANIZATION ACCOUNT SET TAG <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' ... ]\n\nALTER ORGANIZATION ACCOUNT UNSET TAG <tag_name> [ , <tag_name> ... ]\n\nALTER ORGANIZATION ACCOUNT <name> RENAME TO <new_name> [ SAVE_OLD_URL = { TRUE | FALSE } ]\n\nALTER ORGANIZATION ACCOUNT <name> DROP OLD URL",
    "example": "ALTER ORGANIZATION ACCOUNT original_acctname RENAME TO new_acctname;"
},
{
    "function_name": "ALTER NOTIFICATION INTEGRATION (webhooks)",
    "summary": "Modifies the properties for an existing notification integration for a webhook.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-notification-integration-webhooks",
    "title": "ALTER NOTIFICATION INTEGRATION (webhooks)",
    "description": "Modifies the properties for an existing notification integration for a",
    "syntax": "ALTER [ NOTIFICATION ] INTEGRATION [ IF EXISTS ] <name> SET\n  [ ENABLED = { TRUE | FALSE } ]\n  [ WEBHOOK_URL = '<url>' ]\n  [ WEBHOOK_SECRET = <secret_name> ]\n  [ WEBHOOK_BODY_TEMPLATE = '<template_for_http_request_body>' ]\n  [ WEBHOOK_HEADERS = ( '<header_1>'='<value_1>' [ , '<header_N>'='<value_N>', ... ] ) ]\n  [ COMMENT = '<string_literal>' ]\n\nALTER [ NOTIFICATION ] INTEGRATION [ IF EXISTS ] <name> UNSET {\n  ENABLED               |\n  WEBHOOK_SECRET        |\n  WEBHOOK_BODY_TEMPLATE |\n  WEBHOOK_HEADERS       |\n  COMMENT\n}",
    "example": ""
},
{
    "function_name": "ALTER NOTIFICATION INTEGRATION (outbound to a Google Pub/Sub topic)",
    "summary": "Modifies the properties for an existing notification integration for sending a message to a Google Pub/Sub topic.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-notification-integration-queue-outbound-gcp",
    "title": "ALTER NOTIFICATION INTEGRATION (outbound to a Google Pub/Sub topic)",
    "description": "Modifies the properties for an existing notification integration for",
    "syntax": "ALTER [ NOTIFICATION ] INTEGRATION [ IF EXISTS ] <name> SET\n  [ ENABLED = { TRUE | FALSE } ]\n  GCP_PUBSUB_SUBSCRIPTION_NAME = '<subscription_id>'\n  [ COMMENT = '<string_literal>' ]\n\nALTER [ NOTIFICATION ] INTEGRATION <name> SET TAG <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' ... ]\n\nALTER [ NOTIFICATION ] INTEGRATION <name> UNSET TAG <tag_name> [ , <tag_name> ... ]\n\nALTER [ NOTIFICATION ] INTEGRATION [ IF EXISTS ] <name> UNSET COMMENT",
    "example": ""
},
{
    "function_name": "ALTER NOTIFICATION INTEGRATION (outbound to an Azure Event Grid topic)",
    "summary": "Modifies the properties for an existing notification integration for sending a message to an Azure Event Grid topic.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-notification-integration-queue-outbound-azure",
    "title": "ALTER NOTIFICATION INTEGRATION (outbound to an Azure Event Grid topic)",
    "description": "Modifies the properties for an existing notification integration for",
    "syntax": "ALTER [ NOTIFICATION ] INTEGRATION [ IF EXISTS ] <name> SET\n  [ ENABLED = { TRUE | FALSE } ]\n  AZURE_STORAGE_QUEUE_PRIMARY_URI = '<queue_URL>'\n  AZURE_TENANT_ID = '<directory_ID>';\n  [ COMMENT = '<string_literal>' ]\n\nALTER [ NOTIFICATION ] INTEGRATION <name> SET TAG <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' ... ]\n\nALTER [ NOTIFICATION ] INTEGRATION <name> UNSET TAG <tag_name> [ , <tag_name> ... ]\n\nALTER [ NOTIFICATION ] INTEGRATION [ IF EXISTS ] <name> UNSET COMMENT",
    "example": ""
},
{
    "function_name": "ALTER NOTIFICATION INTEGRATION (outbound to an Amazon SNS topic)",
    "summary": "Modifies the properties for an existing notification integration for sending a message to an Amazon SNS topic.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-notification-integration-queue-outbound-aws",
    "title": "ALTER NOTIFICATION INTEGRATION (outbound to an Amazon SNS topic)",
    "description": "Modifies the properties for an existing notification integration for",
    "syntax": "ALTER [ NOTIFICATION ] INTEGRATION [ IF EXISTS ] <name> SET\n  [ ENABLED = { TRUE | FALSE } ]\n  AWS_SNS_TOPIC_ARN = '<topic_arn>'\n  AWS_SNS_ROLE_ARN = '<iam_role_arn>'\n  [ COMMENT = '<string_literal>' ]\n\nALTER [ NOTIFICATION ] INTEGRATION <name> SET TAG <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' ... ]\n\nALTER [ NOTIFICATION ] INTEGRATION <name> UNSET TAG <tag_name> [ , <tag_name> ... ]\n\nALTER [ NOTIFICATION ] INTEGRATION [ IF EXISTS ] <name> UNSET COMMENT",
    "example": ""
},
{
    "function_name": "ALTER NOTIFICATION INTEGRATION (inbound from a Google Pub/Sub topic)",
    "summary": "Modifies the properties for an existing notification integration for receiving messages from a Google Pub/Sub topic.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-notification-integration-queue-inbound-gcp",
    "title": "ALTER NOTIFICATION INTEGRATION (inbound from a Google Pub/Sub topic)",
    "description": "Modifies the properties for an existing notification integration for receiving messages from a Google Pub/Sub topic.",
    "syntax": "ALTER [ NOTIFICATION ] INTEGRATION [ IF EXISTS ] <name> SET\n  [ ENABLED = { TRUE | FALSE } ]\n  [ COMMENT = '<string_literal>' ]\n\nALTER [ NOTIFICATION ] INTEGRATION <name> SET TAG <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' ... ]\n\nALTER [ NOTIFICATION ] INTEGRATION <name> UNSET TAG <tag_name> [ , <tag_name> ... ]\n\nALTER [ NOTIFICATION ] INTEGRATION [ IF EXISTS ] <name> UNSET COMMENT",
    "example": ""
},
{
    "function_name": "ALTER NOTIFICATION INTEGRATION (inbound from an Azure Event Grid topic)",
    "summary": "Modifies the properties for an existing notification integration for receiving messages from an Azure Event Grid topic.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-notification-integration-queue-inbound-azure",
    "title": "ALTER NOTIFICATION INTEGRATION (inbound from an Azure Event Grid topic)",
    "description": "Modifies the properties for an existing notification integration for receiving messages from an Azure Event Grid topic.",
    "syntax": "ALTER [ NOTIFICATION ] INTEGRATION [ IF EXISTS ] <name> SET\n  [ ENABLED = { TRUE | FALSE } ]\n  [ COMMENT = '<string_literal>' ]\n\nALTER [ NOTIFICATION ] INTEGRATION <name> SET TAG <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' ... ]\n\nALTER [ NOTIFICATION ] INTEGRATION <name> UNSET TAG <tag_name> [ , <tag_name> ... ]\n\nALTER [ NOTIFICATION ] INTEGRATION [ IF EXISTS ] <name> UNSET COMMENT",
    "example": ""
},
{
    "function_name": "ALTER NOTIFICATION INTEGRATION (email)",
    "summary": "Modifies the properties for an existing notification integration for sending email messages.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-notification-integration-email",
    "title": "ALTER NOTIFICATION INTEGRATION (email)",
    "description": "Modifies the properties for an existing notification integration for",
    "syntax": "ALTER [ NOTIFICATION ] INTEGRATION [ IF EXISTS ] <name> SET\n  [ ENABLED = { TRUE | FALSE } ]\n  [ ALLOWED_RECIPIENTS = ( '<email_address>' [ , ... '<email_address>' ] ) ]\n  [ DEFAULT_RECIPIENTS = ( '<email_address>' [ , ... '<email_address>' ] ) ]\n  [ DEFAULT_SUBJECT = '<subject_line>' ]\n  [ COMMENT = '<string_literal>' ]\n\nALTER [ NOTIFICATION ] INTEGRATION <name> SET TAG <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' ... ]\n\nALTER [ NOTIFICATION ] INTEGRATION <name> UNSET TAG <tag_name> [ , <tag_name> ... ]\n\nALTER [ NOTIFICATION ] INTEGRATION [ IF EXISTS ] <name> UNSET\n  ENABLED            |\n  ALLOWED_RECIPIENTS |\n  DEFAULT_RECIPIENTS |\n  DEFAULT_SUBJECT    |\n  COMMENT",
    "example": ""
},
{
    "function_name": "ALTER NOTIFICATION INTEGRATION",
    "summary": "Modifies the properties for an existing notification integration.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-notification-integration",
    "title": "ALTER NOTIFICATION INTEGRATION",
    "description": "Modifies the properties for an existing notification integration.",
    "syntax": "",
    "example": ""
},
{
    "function_name": "ALTER NOTEBOOK",
    "summary": "Modifies the properties of an existing notebook.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-notebook",
    "title": "ALTER NOTEBOOK",
    "description": "Modifies the properties of an existing",
    "syntax": "ALTER NOTEBOOK [ IF EXISTS ] <name> RENAME TO <new_name>\n\nALTER NOTEBOOK [ IF EXISTS ] <name> SET\n  [ COMMENT = '<string_literal>' ]\n  [ QUERY_WAREHOUSE = <warehouse_to_run_nb_and_sql_queries_in> ]\n  [ IDLE_AUTO_SHUTDOWN_TIME_SECONDS = <number_of_seconds> ]\n  [ SECRETS = ('<secret_variable_name>' = <secret_name>) [ , ... ] ]",
    "example": "ALTER NOTEBOOK my_notebook RENAME TO notebook_v2;\n\nALTER NOTEBOOK my_notebook UNSET QUERY_WAREHOUSE;"
},
{
    "function_name": "ALTER NETWORK RULE",
    "summary": "Modifies an existing network rule.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-network-rule",
    "title": "ALTER NETWORK RULE",
    "description": "Modifies an existing network rule.",
    "syntax": "ALTER NETWORK RULE [ IF EXISTS ] <name> SET\n  VALUE_LIST = ( '<value>'  [ , '<value>', ... ] )\n  [ COMMENT = '<string_literal>' ]\n\nALTER NETWORK RULE [ IF EXISTS ] <name> UNSET { VALUE_LIST | COMMENT }",
    "example": ""
},
{
    "function_name": "ALTER NETWORK POLICY",
    "summary": "Modifies the properties for an existing network policy.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-network-policy",
    "title": "ALTER NETWORK POLICY",
    "description": "Modifies the properties for an existing network policy. Currently, the only supported actions are changing the IP addresses that are allowed or\ndenied access to the account and adding/overwriting/removing a comment for a network policy.",
    "syntax": "ALTER NETWORK POLICY [ IF EXISTS ] <name> SET {\n    [ ALLOWED_NETWORK_RULE_LIST = ( '<network_rule>' [ , '<network_rule>' , ... ] ) ]\n    [ BLOCKED_NETWORK_RULE_LIST = ( '<network_rule>' [ , '<network_rule>' , ... ] ) ]\n    [ ALLOWED_IP_LIST = ( [ '<ip_address>' ] [ , '<ip_address>' ... ] ) ]\n    [ BLOCKED_IP_LIST = ( [ '<ip_address>' ] [ , '<ip_address>' ... ] ) ]\n    [ COMMENT = '<string_literal>' ] }\n\nALTER NETWORK POLICY [ IF EXISTS ] <name> UNSET COMMENT\n\nALTER NETWORK POLICY <name> ADD { ALLOWED_NETWORK_RULE_LIST = '<network_rule>' | BLOCKED_NETWORK_RULE_LIST = '<network_rule>' }\n\nALTER NETWORK POLICY <name> REMOVE { ALLOWED_NETWORK_RULE_LIST = '<network_rule>' | BLOCKED_NETWORK_RULE_LIST = '<network_rule>' }\n\nALTER NETWORK POLICY <name>  RENAME TO <new_name>\n\nALTER NETWORK POLICY <name> SET TAG <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' ... ]\n\nALTER NETWORK POLICY <name> UNSET TAG <tag_name> [ , <tag_name> ... ]",
    "example": ""
},
{
    "function_name": "ALTER MODEL MONITOR",
    "summary": "Modifies the properties of a model monitor.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-model-monitor",
    "title": "ALTER MODEL MONITOR",
    "description": "Modifies the properties of a",
    "syntax": "ALTER MODEL MONITOR [ IF EXISTS ] <monitor_name> { SUSPEND | RESUME }\n\nALTER MODEL MONITOR [ IF EXISTS ] <monitor_name> SET\n   [ BASELINE='<baseline_table_name>' ]\n   [ REFRESH_INTERVAL='<refresh_interval>' ]\n   [ WAREHOUSE=<warehouse_name> ]",
    "example": ""
},
{
    "function_name": "ALTER MODEL … MODIFY VERSION",
    "summary": "Modifies a version of a model, changing the version’s comment or metadata.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-model-modify-version",
    "title": "ALTER MODEL … MODIFY VERSION",
    "description": "Modifies a version of a model, changing the version’s comment or metadata.",
    "syntax": "ALTER MODEL [ IF EXISTS ] <name> MODIFY VERSION <version_or_alias_name> SET\n  [ COMMENT = '<string_literal>' ]\n  [ METADATA = '<json_metadata>']",
    "example": ""
},
{
    "function_name": "ALTER MODEL … DROP VERSION",
    "summary": "Removes a version from the specified machine learning model.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-model-drop-version",
    "title": "ALTER MODEL … DROP VERSION",
    "description": "Removes a version from the specified machine learning model.",
    "syntax": "ALTER MODEL [ IF EXISTS ] <name> DROP VERSION <version_name>",
    "example": ""
},
{
    "function_name": "ALTER MODEL … ADD VERSION",
    "summary": "Adds a new version to an existing model from an existing model version.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-model-add-version",
    "title": "ALTER MODEL … ADD VERSION",
    "description": "Adds a new version to an existing model from an existing model version. Versions are the actual model code that contains\nmethods that can be called to perform inference and other functions.",
    "syntax": "ALTER MODEL [ IF EXISTS ] <name> ADD VERSION <version_name>\n  FROM MODEL <source_model_name> [ VERSION <source_version_name> ]",
    "example": ""
},
{
    "function_name": "ALTER MODEL",
    "summary": "Modifies the properties for an existing model, including its name, tags, default version, or comment.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-model",
    "title": "ALTER MODEL",
    "description": "Modifies the properties for an existing model, including its name, tags, default version, or comment.",
    "syntax": "ALTER MODEL [ IF EXISTS ] <name> SET\n  [ COMMENT = '<string_literal>' ]\n  [ DEFAULT_VERSION = '<version_name>']\n\nALTER MODEL [ IF EXISTS ] <model_name> SET TAG <tag_name> = '<tag_value>'\n\nALTER MODEL [ IF EXISTS ] <model_name> UNSET TAG <tag_name> [ , <tag_name> ... ]\n\nALTER MODEL [ IF EXISTS ] <model_name> VERSION <version_name> SET ALIAS = '<alias_name>'\n\nALTER MODEL [ IF EXISTS ] <model_name> VERSION <version_or_alias_name> UNSET ALIAS\n\nALTER MODEL <model_name> RENAME TO <new_name>",
    "example": ""
},
{
    "function_name": "ALTER MATERIALIZED VIEW",
    "summary": "Alters a materialized view in the current/specified schema.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-materialized-view",
    "title": "ALTER MATERIALIZED VIEW",
    "description": "",
    "syntax": "ALTER MATERIALIZED VIEW <name>\n  {\n  RENAME TO <new_name>                     |\n  CLUSTER BY ( <expr1> [, <expr2> ... ] )  |\n  DROP CLUSTERING KEY                      |\n  SUSPEND RECLUSTER                        |\n  RESUME RECLUSTER                         |\n  SUSPEND                                  |\n  RESUME                                   |\n  SET {\n    [ SECURE ]\n    [ CONTACT ( <purpose> = <contact_name> [ , <purpose> = <contact_name> ... ] ) ]\n    [ COMMENT = '<comment>' ]\n    }                                      |\n  UNSET {\n    SECURE\n    CONTACT <purpose>                                 |\n    COMMENT\n    }\n  }\n\nALTER MATERIALIZED VIEW\n  SET DATA_METRIC_SCHEDULE = {\n      '<num> MINUTE'\n    | 'USING CRON <expr> <time_zone>'\n  }\n\nALTER MATERIALIZED VIEW UNSET DATA_METRIC_SCHEDULE",
    "example": "ALTER MATERIALIZED VIEW table1_MV RENAME TO my_mv;\n\nALTER MATERIALIZED VIEW my_mv CLUSTER BY(i);\n\nALTER MATERIALIZED VIEW my_mv SUSPEND RECLUSTER;\n\nALTER MATERIALIZED VIEW my_mv RESUME RECLUSTER;\n\nALTER MATERIALIZED VIEW my_mv SUSPEND;\n\nALTER MATERIALIZED VIEW my_mv RESUME;\n\nALTER MATERIALIZED VIEW my_mv DROP CLUSTERING KEY;\n\nALTER MATERIALIZED VIEW mv1 SET SECURE;\n\nALTER MATERIALIZED VIEW mv1 SET COMMENT = 'Sample view';"
},
{
    "function_name": "ALTER MASKING POLICY",
    "summary": "Replaces the existing masking policy rules with new rules or a new comment and allows the renaming of a masking policy.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-masking-policy",
    "title": "ALTER MASKING POLICY",
    "description": "",
    "syntax": "ALTER MASKING POLICY [ IF EXISTS ] <name> RENAME TO <new_name>\n\nALTER MASKING POLICY [ IF EXISTS ] <name> SET BODY -> <expression_on_arg_name_to_mask>\n\nALTER MASKING POLICY [ IF EXISTS ] <name> SET TAG <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' ... ]\n\nALTER MASKING POLICY [ IF EXISTS ] <name> UNSET TAG <tag_name> [ , <tag_name> ... ]\n\nALTER MASKING POLICY [ IF EXISTS ] <name> SET COMMENT = '<string_literal>'\n\nALTER MASKING POLICY [ IF EXISTS ] <name> UNSET COMMENT",
    "example": "DESCRIBE MASKING POLICY email_mask;\n\n+-----+------------+---------------+-------------------+-----------------------------------------------------------------------+\n| Row | name       | signature     | return_type       | body                                                                  |\n+-----+------------+---------------+-------------------+-----------------------------------------------------------------------+\n| 1   | EMAIL_MASK | (VAL VARCHAR) | VARCHAR(16777216) | case when current_role() in ('ANALYST') then val else '*********' end |\n+-----+------------+---------------+-------------------+-----------------------------------------------------------------------+\n\nALTER MASKING POLICY email_mask SET BODY ->\n  CASE\n    WHEN current_role() IN ('ANALYST') THEN VAL\n    ELSE sha2(val, 512)\n  END;"
},
{
    "function_name": "ALTER LISTING",
    "summary": "Modifies the properties of a listings with an inline YAML manifest, or from a file located in a stage location.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-listing",
    "title": "ALTER LISTING",
    "description": "Modifies the properties of a",
    "syntax": "ALTER LISTING [ IF EXISTS ] <name> [ { PUBLISH | UNPUBLISH | REVIEW } ]\n\nALTER LISTING [ IF EXISTS ] <name> AS '<yaml_manifest_string>'\n  [ PUBLISH={ TRUE | FALSE } ]\n  [ REVIEW= { TRUE | FALSE } ]\n  [ COMMENT = '<string>' ]\n\nALTER LISTING <name> ADD VERSION [ [ IF NOT EXISTS ] <version_name> ]\n  FROM <yaml_manifest_stage_location>\n  [ COMMENT = '<string>' ]\n\nALTER LISTING [ IF EXISTS ] <name> RENAME TO <new_name>;\n\nALTER LISTING [ IF EXISTS ] <name> SET COMMENT = '<string>'",
    "example": "ALTER LISTING MYLISTING\nAS\n  $$\n  title: \"MyListing\"\n  subtitle: \"Subtitle for MyListing\"\n  description: \"Description or MyListing\"\n  listing_terms:\n    type: \"STANDARD\"\n  targets:\n    accounts: [\"Org1.Account1\"]\n  usage_examples:\n     - title: \"this is a test sql\"\n       description: \"Simple example\"\n       query: \"select *\"\n  $$\n\nALTER LISTING MYLISTING REVIEW;\n\nALTER LISTING MYLISTING PUBLISH;\n\nALTER LISTING MYLISTING UNPUBLISH;\n\nALTER LISTING MYLISTING SET COMMENT = 'My listing is ready!';\n\nALTER LISTING MYLISTING ADD VERSION V3 FROM @dbforstage.public.listingstage/listingmanifests;"
},
{
    "function_name": "ALTER JOIN POLICY",
    "summary": "Replaces the existing rules or comment for a join policy.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-join-policy",
    "title": "ALTER JOIN POLICY",
    "description": "",
    "syntax": "ALTER JOIN POLICY [ IF EXISTS ] <name> RENAME TO <new_name>\n\nALTER JOIN POLICY [ IF EXISTS ] <name> SET BODY -> <expression>\n\nALTER JOIN POLICY <name> SET TAG <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' ... ]\n\nALTER JOIN POLICY <name> UNSET TAG <tag_name> [ , <tag_name> ... ]\n\nALTER JOIN POLICY [ IF EXISTS ] <name> SET COMMENT = '<string_literal>'\n\nALTER JOIN POLICY [ IF EXISTS ] <name> UNSET COMMENT",
    "example": "ALTER JOIN POLICY jp3 SET BODY -> JOIN_CONSTRAINT(JOIN_REQUIRED => FALSE);\n\nALTER JOIN POLICY my_join_policy RENAME TO my_join_policy_2;"
},
{
    "function_name": "ALTER INTEGRATION",
    "summary": "Modifies the properties for an existing integration.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-integration",
    "title": "ALTER INTEGRATION",
    "description": "Modifies the properties for an existing integration.",
    "syntax": "ALTER <integration_type> INTEGRATION <object_name> <actions>",
    "example": ""
},
{
    "function_name": "ALTER ICEBERG TABLE … REFRESH",
    "summary": "Refreshes the metadata for an Apache Iceberg™ table that uses an external Iceberg catalog.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-iceberg-table-refresh",
    "title": "ALTER ICEBERG TABLE … REFRESH",
    "description": "Refreshes the metadata for an",
    "syntax": "ALTER ICEBERG TABLE [ IF EXISTS ] <table_name> REFRESH [ '<metadata_file_relative_path>' ]",
    "example": "ALTER ICEBERG TABLE myIcebergTable REFRESH;\n\nALTER ICEBERG TABLE my_iceberg_table REFRESH 'path/to/metadata/v2.metadata.json';"
},
{
    "function_name": "ALTER ICEBERG TABLE … CONVERT TO MANAGED",
    "summary": "Converts an Apache Iceberg™ table that uses an external Iceberg catalog into a table that uses Snowflake as the catalog (a Snowflake-managed Iceberg table).",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-iceberg-table-convert-to-managed",
    "title": "ALTER ICEBERG TABLE … CONVERT TO MANAGED",
    "description": "Converts an",
    "syntax": "ALTER ICEBERG TABLE [ IF EXISTS ] <table_name> CONVERT TO MANAGED\n  [ BASE_LOCATION = '<directory_for_table_files>' ]\n  [ STORAGE_SERIALIZATION_POLICY = { COMPATIBLE | OPTIMIZED } ]",
    "example": "ALTER ICEBERG TABLE myTable CONVERT TO MANAGED\n  BASE_LOCATION = 'my/relative/path/from/external_volume';"
},
{
    "function_name": "ALTER ICEBERG TABLE … ALTER COLUMN … SET DATA TYPE",
    "summary": "Modifies (evolves) a structured type column in a Snowflake-managed Apache Iceberg™ table.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-iceberg-table-alter-column-set-data-type",
    "title": "ALTER ICEBERG TABLE … ALTER COLUMN … SET DATA TYPE",
    "description": "",
    "syntax": "ALTER ICEBERG TABLE [ IF EXISTS ] <table_name> ALTER COLUMN <structured_column>\n  SET DATA TYPE <new_structured_type>",
    "example": "ALTER ICEBERG TABLE my_iceberg_table ALTER COLUMN col1\n  SET DATA TYPE ARRAY(long);\n\nCREATE ICEBERG TABLE my_iceberg_table (\n  column_1 OBJECT(\n      key_a int,\n      key_b int\n    )\n  )\n  CATALOG = 'SNOWFLAKE'\n  EXTERNAL_VOLUME = 'my_external_volume'\n  BASE_LOCATION = '';\n\nALTER ICEBERG TABLE my_iceberg_table ALTER COLUMN column_1\n  SET DATA TYPE OBJECT(\n    key_b int,\n    key_a int\n  );\n\nCREATE ICEBERG TABLE my_iceberg_table (\n  column_1 OBJECT(\n      key_1 int\n    )\n  )\n  CATALOG = 'SNOWFLAKE'\n  EXTERNAL_VOLUME = 'my_external_volume'\n  BASE_LOCATION = '';\n\nALTER ICEBERG TABLE my_iceberg_table ALTER COLUMN column_1\n  SET DATA TYPE OBJECT(\n    key_1 int,\n    key_2 int\n  );\n\nCREATE ICEBERG TABLE my_iceberg_table (\n  column_1 OBJECT(\n      key_1 int,\n      key_2 ARRAY(string)\n    )\n  )\n  CATALOG = 'SNOWFLAKE'\n  EXTERNAL_VOLUME = 'my_external_volume'\n  BASE_LOCATION = '';\n\nALTER ICEBERG TABLE my_iceberg_table ALTER COLUMN column_1\n  SET DATA TYPE OBJECT(\n    key_1 int\n  );\n\nCREATE ICEBERG TABLE my_iceberg_table (\n  column_1 OBJECT(\n      key_1 int,\n      key_2 int\n    )\n  )\n  CATALOG = 'SNOWFLAKE'\n  EXTERNAL_VOLUME = 'my_external_volume'\n  BASE_LOCATION = '';\n\nALTER ICEBERG TABLE my_iceberg_table ALTER COLUMN column_1\n  SET DATA TYPE OBJECT(\n    k_1 int,\n    k_2 int\n  )\n  RENAME FIELDS;"
},
{
    "function_name": "ALTER ICEBERG TABLE",
    "summary": "Modifies properties such as clustering options and tags for an existing Apache Iceberg™ table.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-iceberg-table",
    "title": "ALTER ICEBERG TABLE",
    "description": "Modifies properties such as clustering options and tags for an existing",
    "syntax": "ALTER ICEBERG TABLE [ IF EXISTS ] <table_name> { clusteringAction | tableColumnAction }\n\nALTER ICEBERG TABLE [ IF EXISTS ] <table_name> SET\n  [ REPLACE_INVALID_CHARACTERS = { TRUE | FALSE } ]\n  [ CATALOG_SYNC = '<snowflake_open_catalog_integration_name>']\n  [ DATA_RETENTION_TIME_IN_DAYS = <integer> ]\n  [ AUTO_REFRESH = { TRUE | FALSE } ]\n  [ CONTACT ( <purpose> = <contact_name> [ , <purpose> = <contact_name> ... ] ) ]\n\nALTER ICEBERG TABLE [ IF EXISTS ] <table_name> UNSET\n  [ REPLACE_INVALID_CHARACTERS ]\n  [ CONTACT <purpose> ]\n\nALTER ICEBERG TABLE [ IF EXISTS ] dataGovnPolicyTagAction\n\nALTER ICEBERG TABLE [ IF EXISTS ] <table_name> searchOptimizationAction",
    "example": "ALTER ICEBERG TABLE my_iceberg_table SET TAG my_tag = 'customer';\n\nALTER ICEBERG TABLE my_iceberg_table SET AUTO_REFRESH = TRUE;\n\nALTER ICEBERG TABLE my_iceberg_table ADD SEARCH OPTIMIZATION ON SUBSTRING(C6);\n\nALTER ICEBERG TABLE my_iceberg_table DROP SEARCH OPTIMIZATION ON EQUALITY(C7, C8);"
},
{
    "function_name": "ALTER GIT REPOSITORY",
    "summary": "Modifies the properties of a Snowflake Git repository clone.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-git-repository",
    "title": "ALTER GIT REPOSITORY",
    "description": "Modifies the properties of a Snowflake",
    "syntax": "ALTER GIT REPOSITORY [ IF EXISTS ] <name> SET\n  [ GIT_CREDENTIALS = <secret_name> ]\n  [ API_INTEGRATION = <integration_name> ]\n  [ COMMENT = '<string_literal>' ]\n\nALTER GIT REPOSITORY [ IF EXISTS ] <name> SET TAG <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' ... ]\n\nALTER GIT REPOSITORY [ IF EXISTS ] <name> UNSET TAG <tag_name> [ , <tag_name> ... ]\n\nALTER GIT REPOSITORY [ IF EXISTS ] <name> UNSET {\n  GIT_CREDENTIALS |\n  COMMENT }\n  [ , ... ]\n\nALTER GIT REPOSITORY [ IF EXISTS ] <name> FETCH",
    "example": "ALTER GIT REPOSITORY snowflake_extensions FETCH;"
},
{
    "function_name": "ALTER FUNCTION (Snowpark Container Services)",
    "summary": "Modifies the properties of an existing service function.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-function-spcs",
    "title": "ALTER FUNCTION (Snowpark Container Services)",
    "description": "Modifies the properties of an existing",
    "syntax": "ALTER FUNCTION [ IF EXISTS ] <name> ( [ <arg_data_type> , ... ] )\n  RENAME TO <new_name>\n\nALTER FUNCTION [ IF EXISTS ] <name> ( [ <arg_data_type> , ... ] )\n  SET CONTEXT_HEADERS = ( <context_function_1> [ , <context_function_2> ...] )\n\nALTER FUNCTION [ IF EXISTS ] <name> ( [ <arg_data_type> , ... ] )\n  SET MAX_BATCH_ROWS = <integer>\n\nALTER FUNCTION [ IF EXISTS ] <name> ( [ <arg_data_type> , ... ] )\n  SET MAX_BATCH_RETRIES = <integer>\n\nALTER FUNCTION [ IF EXISTS ] <name> ( [ <arg_data_type> , ... ] )\n  SET ON_BATCH_FAILURE = { ABORT | RETURN_NULL }\n\nALTER FUNCTION [ IF EXISTS ] <name> ( [ <arg_data_type> , ... ] )\n  SET BATCH_TIMEOUT_SECS = <integer>\n\nALTER FUNCTION [ IF EXISTS ] <name> ( [ <arg_data_type> , ... ] )\n  SET COMMENT = '<string_literal>'\n\nALTER FUNCTION [ IF EXISTS ] <name> ( [ <arg_data_type> , ... ] )\n  SET SERVICE = '<service_name>' ENDPOINT = '<endpoint_name>'\n\nALTER FUNCTION [ IF EXISTS ] <name> ( [ <arg_data_type> , ... ] )\n  UNSET { CONTEXT_HEADERS | MAX_BATCH_ROWS | MAX_BATCH_RETRIES | ON_BATCH_FAILURE | BATCH_TIMEOUT_SECS | COMMENT }",
    "example": "ALTER FUNCTION my_echo_udf(VARCHAR) RENAME TO my_echo_udf_temp;\n\nALTER FUNCTION my_echo_udf(VARCHAR) SET COMMENT = 'some comment';\n\nALTER FUNCTION my_echo_udf(number) SET MAX_BATCH_ROWS = 100;\n\nALTER FUNCTION my_echo_udf(VARCHAR) SET CONTEXT_HEADER = (CURRENT_USER);\n\nALTER FUNCTION my_echo_udf(VARCHAR) UNSET MAX_BATCH_ROWS;"
},
{
    "function_name": "ALTER FUNCTION (DMF)",
    "summary": "Modifies the properties of an existing data metric function (DMF).",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-function-dmf",
    "title": "ALTER FUNCTION (DMF)",
    "description": "",
    "syntax": "ALTER FUNCTION [ IF EXISTS ] <name> ( TABLE(  <arg_data_type> [ , ... ] ) [ , TABLE( <arg_data_type> [ , ... ] ) ] )\n  RENAME TO <new_name>\n\nALTER FUNCTION [ IF EXISTS ] <name> ( TABLE(  <arg_data_type> [ , ... ] ) [ , TABLE( <arg_data_type> [ , ... ] ) ] )\n  SET SECURE\n\nALTER FUNCTION [ IF EXISTS ] <name> ( TABLE(  <arg_data_type> [ , ... ] ) [ , TABLE( <arg_data_type> [ , ... ] ) ] )\n  UNSET SECURE\n\nALTER FUNCTION [ IF EXISTS ] <name> ( TABLE(  <arg_data_type> [ , ... ] ) [ , TABLE( <arg_data_type> [ , ... ] ) ] )\n  SET COMMENT = '<string_literal>'\n\nALTER FUNCTION [ IF EXISTS ] <name> ( TABLE(  <arg_data_type> [ , ... ] ) [ , TABLE( <arg_data_type> [ , ... ] ) ] )\n  UNSET COMMENT\n\nALTER FUNCTION [ IF EXISTS ] <name> ( TABLE(  <arg_data_type> [ , ... ] ) [ , TABLE( <arg_data_type> [ , ... ] ) ] )\n  SET TAG <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' ... ]\n\nALTER FUNCTION [ IF EXISTS ] <name> ( TABLE(  <arg_data_type> [ , ... ] ) [ , TABLE( <arg_data_type> [ , ... ] ) ] )\n  UNSET TAG <tag_name> [ , <tag_name> ... ]",
    "example": ""
},
{
    "function_name": "ALTER FUNCTION",
    "summary": "Modifies the properties of an existing user-defined or external function.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-function",
    "title": "ALTER FUNCTION",
    "description": "Modifies the properties of an existing user-defined or external function.",
    "syntax": "ALTER FUNCTION [ IF EXISTS ] <name> ( [ <arg_data_type> , ... ] ) RENAME TO <new_name>\n\nALTER FUNCTION [ IF EXISTS ] <name> ( [ <arg_data_type> , ... ] ) SET SECURE\n\nALTER FUNCTION [ IF EXISTS ] <name> ( [ <arg_data_type> , ... ] ) UNSET { SECURE | LOG_LEVEL | TRACE_LEVEL | COMMENT }\n\nALTER FUNCTION [ IF EXISTS ] <name> ( [ <arg_data_type> , ... ] ) SET\n  [ LOG_LEVEL = '<log_level>' ]\n  [ TRACE_LEVEL = '<trace_level>' ]\n  [ EXTERNAL_ACCESS_INTEGRATIONS = ( <integration_name> [ , <integration_name> ... ] ) ]\n  [ SECRETS = ( '<secret_variable_name>' = <secret_name> [ , '<secret_variable_name>' = <secret_name> ... ] ) ]\n  [ COMMENT = '<string_literal>' ]\n\nALTER FUNCTION [ IF EXISTS ] <name> ( [ <arg_data_type> , ... ] ) SET TAG <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' ... ]\n\nALTER FUNCTION [ IF EXISTS ] <name> ( [ <arg_data_type> , ... ] ) UNSET TAG <tag_name> [ , <tag_name> ... ]",
    "example": "ALTER FUNCTION IF EXISTS function1(number) RENAME TO function2;\n\nALTER FUNCTION function2(number) SET SECURE;\n\nALTER FUNCTION function4(number) SET API_INTEGRATION = api_integration_2;\n\nALTER FUNCTION function5(number) SET MAX_BATCH_ROWS = 100;"
},
{
    "function_name": "ALTER FILE FORMAT",
    "summary": "Modifies the properties for an existing file format object.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-file-format",
    "title": "ALTER FILE FORMAT",
    "description": "Modifies the properties for an existing file format object. Currently the only actions that are supported are renaming the file format, changing\nthe file format options (based on the type), and adding/changing a comment. To make any other changes, you must drop the file format and then\nrecreate it.",
    "syntax": "ALTER FILE FORMAT [ IF EXISTS ] <name> RENAME TO <new_name>\n\nALTER FILE FORMAT [ IF EXISTS ] <name> SET { [ formatTypeOptions ] [ COMMENT = '<string_literal>' ] }",
    "example": "ALTER FILE FORMAT IF EXISTS my_format RENAME TO my_new_format;\n\nALTER FILE FORMAT my_format SET FIELD_DELIMITER=',';"
},
{
    "function_name": "ALTER FEATURE POLICY",
    "summary": "Alters or renames a feature policy.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-feature-policy",
    "title": "ALTER FEATURE POLICY",
    "description": "",
    "syntax": "ALTER FEATURE POLICY [ IF EXISTS ] <name> SET\n  [ BLOCKED_OBJECT_TYPES_FOR_CREATION = ( [ <type> [ , <type>  ... ] ] ) ]\n  [ COMMENT = '<string_literal>' ]\n\nALTER FEATURE POLICY [ IF EXISTS ] <name> UNSET\n  [ BLOCKED_OBJECT_TYPES_FOR_CREATION ]\n  [ COMMENT ]\n\nALTER FEATURE POLICY [ IF EXISTS ] <name> RENAME TO <new_name>\n\nALTER FEATURE POLICY [ IF EXISTS ] <name> SET  TAG <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' ... ]\n\nALTER FEATURE POLICY [ IF EXISTS ] <name> UNSET TAG <tag_name> [ , ... ]",
    "example": "ALTER FEATURE POLICY block_create_db_policy SET\n  BLOCKED_OBJECT_TYPES_FOR_CREATION = (DATABASES, TASKS);\n\nALTER FEATURE POLICY block_create_db_policy RENAME TO block_create_db_task_policy;"
},
{
    "function_name": "ALTER FAILOVER GROUP",
    "summary": "Modifies the properties for an existing failover group.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-failover-group",
    "title": "ALTER FAILOVER GROUP",
    "description": "",
    "syntax": "ALTER FAILOVER GROUP [ IF EXISTS ] <name> RENAME TO <new_name>\n\nALTER FAILOVER GROUP [ IF EXISTS ] <name> SET\n  [ OBJECT_TYPES = <object_type> [ , <object_type> , ... ] ]\n  [ ALLOWED_DATABASES = <db_name> [ , <db_name> , ... ] ]\n  [ ALLOWED_SHARES = <share_name> [ , <share_name> , ... ] ]\n\nALTER FAILOVER GROUP [ IF EXISTS ] <name> SET\n  OBJECT_TYPES = INTEGRATIONS [ , <object_type> , ... ]\n  ALLOWED_INTEGRATION_TYPES = <integration_type_name> [ , <integration_type_name> ... ]\n\nALTER FAILOVER GROUP [ IF EXISTS ] <name> SET\n  COMMENT = '<string_literal>'\n\nALTER FAILOVER GROUP [ IF EXISTS ] <name> SET\n  REPLICATION_SCHEDULE = '{ <num> MINUTE | USING CRON <expr> <time_zone> }'\n\nALTER FAILOVER GROUP [ IF EXISTS ] <name> SET\n  ERROR_INTEGRATION = <integration_name>\n\nALTER FAILOVER GROUP [ IF EXISTS ] <name> SET\n  TAG <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' ... ]\n\nALTER FAILOVER GROUP [ IF EXISTS ] <name> UNSET\n  { COMMENT | REPLICATION_SCHEDULE | ERROR_INTEGRATION } [ , ... ]\n\nALTER FAILOVER GROUP [ IF EXISTS ] <name> UNSET\n  TAG <tag_name> [ , <tag_name> ... ]\n\nALTER FAILOVER GROUP [ IF EXISTS ] <name>\n  ADD <db_name> [ , <db_name> ,  ... ] TO ALLOWED_DATABASES\n\nALTER FAILOVER GROUP [ IF EXISTS ] <name>\n  MOVE DATABASES <db_name> [ , <db_name> ,  ... ] TO FAILOVER GROUP <move_to_fg_name>\n\nALTER FAILOVER GROUP [ IF EXISTS ] <name>\n  REMOVE <db_name> [ , <db_name> ,  ... ] FROM ALLOWED_DATABASES\n\nALTER FAILOVER GROUP [ IF EXISTS ] <name>\n  ADD <share_name> [ , <share_name> ,  ... ] TO ALLOWED_SHARES\n\nALTER FAILOVER GROUP [ IF EXISTS ] <name>\n  MOVE SHARES <share_name> [ , <share_name> ,  ... ] TO FAILOVER GROUP <move_to_fg_name>\n\nALTER FAILOVER GROUP [ IF EXISTS ] <name>\n  REMOVE <share_name> [ , <share_name> ,  ... ] FROM ALLOWED_SHARES\n\nALTER FAILOVER GROUP [ IF EXISTS ] <name>\n  ADD <org_name>.<target_account_name> [ , <org_name>.<target_account_name> ,  ... ] TO ALLOWED_ACCOUNTS\n  [ IGNORE EDITION CHECK ]\n\nALTER FAILOVER GROUP [ IF EXISTS ] <name>\n  REMOVE <org_name>.<target_account_name> [ , <org_name>.<target_account_name> ,  ... ] FROM ALLOWED_ACCOUNTS",
    "example": "ALTER FAILOVER GROUP myfg ADD myorg.myaccount3 TO ALLOWED_ACCOUNTS;\n\nALTER FAILOVER GROUP myfg SET\n  OBJECT_TYPES = USERS, ROLES, WAREHOUSES, RESOURCE MONITORS, DATABASES\n  ALLOWED_DATABASES = db1;\n\nALTER FAILOVER GROUP myfg\n  ADD db2, db3 TO ALLOWED_DATABASES;\n\nALTER FAILOVER GROUP myfg\n  MOVE DATABASES db3 TO FAILOVER GROUP myfg2;\n\nALTER FAILOVER GROUP myfg3 SET\n  OBJECT_TYPES = DATABASES, SHARES;\n\nALTER FAILOVER GROUP myfg\n  MOVE DATABASES db2 TO FAILOVER GROUP myfg3;\n\nALTER FAILOVER GROUP myfg\n  SET ALLOWED_DATABASES = NULL;\n\nALTER FAILOVER GROUP myfg\n  REMOVE databases FROM OBJECT_TYPES;\n\nALTER FAILOVER GROUP myfg\n  SET REPLICATION_SCHEDULE = '15 MINUTE';\n\nALTER FAILOVER GROUP myfg REFRESH;\n\nALTER FAILOVER GROUP myfg PRIMARY;\n\nALTER FAILOVER GROUP myfg SUSPEND;"
},
{
    "function_name": "ALTER EXTERNAL VOLUME",
    "summary": "Modifies the properties for an existing external volume.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-external-volume",
    "title": "ALTER EXTERNAL VOLUME",
    "description": "Modifies the properties for an existing",
    "syntax": "ALTER EXTERNAL VOLUME [ IF EXISTS ] <name> ADD STORAGE_LOCATION =\n  (\n    NAME = '<storage_location_name>'\n    cloudProviderParams\n  )\n\nALTER EXTERNAL VOLUME [ IF EXISTS ] <name> REMOVE STORAGE_LOCATION '<storage_location_name>'\n\nALTER EXTERNAL VOLUME [ IF EXISTS ] <name> UPDATE\n  STORAGE_LOCATION = '<s3_compatible_storage_location_name>'\n  CREDENTIALS = (\n    AWS_KEY_ID = '<string>'\n    AWS_SECRET_KEY = '<string>'\n  )\n\nALTER EXTERNAL VOLUME [ IF EXISTS ] <name> SET ALLOW_WRITES = { TRUE | FALSE }\n\nALTER EXTERNAL VOLUME [ IF EXISTS ] <name> SET COMMENT = '<string_literal>'",
    "example": "ALTER EXTERNAL VOLUME exvol1 REMOVE STORAGE_LOCATION 'my-us-east-1';\n\nALTER EXTERNAL VOLUME exvol1\n  ADD STORAGE_LOCATION =\n    (\n      NAME = 'my-s3-us-central-2'\n      STORAGE_PROVIDER = 'S3'\n      STORAGE_BASE_URL = 's3://my_bucket_us_central-1/'\n      STORAGE_AWS_ROLE_ARN = 'arn:aws:iam::123456789012:role/myrole'\n    );\n\nALTER EXTERNAL VOLUME exvol2\n  ADD STORAGE_LOCATION =\n    (\n      NAME = 'my-gcs-europe-west4'\n      STORAGE_PROVIDER = 'GCS'\n      STORAGE_BASE_URL = 'gcs://my_bucket_europe-west4/'\n    );\n\nALTER EXTERNAL VOLUME exvol3\n  ADD STORAGE_LOCATION =\n    (\n      NAME = 'my-azure-japaneast'\n      STORAGE_PROVIDER = 'AZURE'\n      STORAGE_BASE_URL = 'azure://sfcdev1.blob.core.windows.net/my_container_japaneast/'\n      AZURE_TENANT_ID = 'a9876545-4321-987b-b23c-2kz436789d0'\n    );\n\nALTER EXTERNAL VOLUME ext_vol_s3_compat UPDATE\n  STORAGE_LOCATION = 'my_s3_compat_storage_location'\n  CREDENTIALS = (\n    AWS_KEY_ID = '4d5e6f...'\n    AWS_SECRET_KEY = '7g8h9i...'\n  );"
},
{
    "function_name": "ALTER EXTERNAL TABLE",
    "summary": "Modifies the properties, columns, or constraints for an existing external table.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-external-table",
    "title": "ALTER EXTERNAL TABLE",
    "description": "Modifies the properties, columns, or constraints for an existing external table.",
    "syntax": "ALTER EXTERNAL TABLE [ IF EXISTS ] <name> REFRESH [ '<relative-path>' ]\n\nALTER EXTERNAL TABLE [ IF EXISTS ] <name> ADD FILES ( '<path>/[<filename>]' [ , '<path>/[<filename>'] ] )\n\nALTER EXTERNAL TABLE [ IF EXISTS ] <name> REMOVE FILES ( '<path>/[<filename>]' [ , '<path>/[<filename>]' ] )\n\nALTER EXTERNAL TABLE [ IF EXISTS ] <name> SET\n  [ AUTO_REFRESH = { TRUE | FALSE } ]\n  [ CONTACT ( <purpose> = <contact_name> [ , <purpose> = <contact_name> ... ] ) ]\n\nALTER EXTERNAL TABLE [ IF EXISTS ] <name> UNSET CONTACT <purpose>",
    "example": "ALTER EXTERNAL TABLE exttable_json REFRESH;\n\nCREATE OR REPLACE STAGE mystage\n  URL='<cloud_platform>://twitter_feed/logs/'\n  .. ;\n\n-- Create the external table\n-- 'daily' path includes paths in </YYYY/MM/DD/> format\nCREATE OR REPLACE EXTERNAL TABLE daily_tweets\n  WITH LOCATION = @twitter_feed/daily/;\n\n-- Refresh the metadata for a single day of data files by date\nALTER EXTERNAL TABLE exttable_part REFRESH '2018/08/05/';\n\nALTER EXTERNAL TABLE exttable1 ADD FILES ('path1/sales4.json.gz', 'path1/sales5.json.gz');\n\nALTER EXTERNAL TABLE exttable1 REMOVE FILES ('path1/sales4.json.gz', 'path1/sales5.json.gz');\n\nBEGIN;\n\nALTER EXTERNAL TABLE extable1 REMOVE FILES ('2019/12/log1.json.gz');\n\nALTER EXTERNAL TABLE extable1 ADD FILES ('2019/12/log1.json.gz');\n\nCOMMIT;\n\nALTER EXTERNAL TABLE et2 ADD PARTITION(col1='2022-01-24', col2='a', col3='12') LOCATION '2022/01';\n\nALTER EXTERNAL TABLE et2 DROP PARTITION LOCATION '2022/01';"
},
{
    "function_name": "ALTER EXTERNAL ACCESS INTEGRATION",
    "summary": "Modifies the properties of an existing external access integration.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-external-access-integration",
    "title": "ALTER EXTERNAL ACCESS INTEGRATION",
    "description": "Modifies the properties of an existing",
    "syntax": "ALTER EXTERNAL ACCESS INTEGRATION [ IF EXISTS ] <name> SET\n  [ ALLOWED_NETWORK_RULES = (<rule_name> [ , <rule_name> ... ]) ]\n  [ ALLOWED_API_AUTHENTICATION_INTEGRATIONS = ( { <integration_name_1> [, <integration_name_2>, ... ] | none } ) ]\n  [ ALLOWED_AUTHENTICATION_SECRETS = ( { <secret_name> [ , <secret_name> ... ] | all | none } ) ]\n  [ ENABLED = { TRUE | FALSE } ]\n  [ COMMENT = '<string_literal>' ]\n  [ TAG <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' ... ] ]\n\nALTER EXTERNAL ACCESS INTEGRATION [ IF EXISTS ] <name> UNSET {\n  ALLOWED_NETWORK_RULES |\n  ALLOWED_API_AUTHENTICATION_INTEGRATIONS |\n  ALLOWED_AUTHENTICATION_SECRETS |\n  COMMENT |\n  TAG <tag_name> }\n  [ , ... ]",
    "example": "ALTER EXTERNAL ACCESS INTEGRATION IF EXISTS dev_integration\n  SET ALLOWED_AUTHENTICATION_SECRETS = (my_new_secret);\n\nALTER EXTERNAL ACCESS INTEGRATION IF EXISTS dev_integration_disabled\n  SET ENABLED = FALSE;\n\nALTER EXTERNAL ACCESS INTEGRATION IF EXISTS dev_integration_disabled\n  SET COMMENT = 'Disabled until the end of the Q1.';"
},
{
    "function_name": "ALTER DYNAMIC TABLE",
    "summary": "Modifies the properties of a dynamic table.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-dynamic-table",
    "title": "ALTER DYNAMIC TABLE",
    "description": "Modifies the properties of a",
    "syntax": "ALTER DYNAMIC TABLE [ IF EXISTS ] <name> { SUSPEND | RESUME }\n\nALTER DYNAMIC TABLE [ IF EXISTS ] <name> RENAME TO <new_name>\n\nALTER DYNAMIC TABLE [ IF EXISTS ] <name> SWAP WITH <target_dynamic_table_name>\n\nALTER DYNAMIC TABLE [ IF EXISTS ] <name> REFRESH [ COPY SESSION ]\n\nALTER DYNAMIC TABLE [ IF EXISTS ] <name> { clusteringAction }\n\nALTER DYNAMIC TABLE [ IF EXISTS ] <name> { tableColumnCommentAction }\n\nALTER DYNAMIC TABLE <name> { SET | UNSET } COMMENT = '<string_literal>'\n\nALTER DYNAMIC TABLE [ IF EXISTS ] <name> dataGovnPolicyTagAction\n\nALTER DYNAMIC TABLE [ IF EXISTS ] <name> searchOptimizationAction\n\nALTER DYNAMIC TABLE [ IF EXISTS ] <name> SET\n  [ TARGET_LAG = { '<num> { seconds | minutes | hours | days }'  | DOWNSTREAM } ]\n  [ WAREHOUSE = <warehouse_name> ]\n  [ DATA_RETENTION_TIME_IN_DAYS = <integer> ]\n  [ MAX_DATA_EXTENSION_TIME_IN_DAYS = <integer> ]\n  [ DEFAULT_DDL_COLLATION = '<collation_specification>' ]\n  [ LOG_LEVEL = '<log_level>' ]\n  [ CONTACT ( <purpose> = <contact_name> [ , <purpose> = <contact_name> ... ] ) ]\n\nALTER DYNAMIC TABLE [ IF EXISTS ] <name> UNSET\n  [ DATA_RETENTION_TIME_IN_DAYS ],\n  [ MAX_DATA_EXTENSION_TIME_IN_DAYS ],\n  [ DEFAULT_DDL_COLLATION ]\n  [ LOG_LEVEL ]\n  [ CONTACT <purpose> ]",
    "example": "ALTER DYNAMIC TABLE my_dynamic_table SET\n  TARGET_LAG = '1 hour';\n\nALTER DYNAMIC TABLE my_dynamic_table SET TARGET_LAG = DOWNSTREAM;\n\nALTER DYNAMIC TABLE my_dynamic_table SUSPEND;\n\nALTER DYNAMIC TABLE my_dynamic_table RESUME;\n\nALTER DYNAMIC TABLE my_dynamic_table RENAME TO my_updated_dynamic_table;\n\nALTER DYNAMIC TABLE my_dynamic_table SWAP WITH my_new_dynamic_table;\n\nALTER DYNAMIC TABLE my_dynamic_table CLUSTER BY (date);\n\nALTER DYNAMIC TABLE my_dynamic_table DROP CLUSTERING KEY;\n\nALTER DYNAMIC TABLE my_dynamic_table REFRESH COPY SESSION"
},
{
    "function_name": "ALTER DBT PROJECT",
    "summary": "Modifies the properties of an existing dbt project object.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-dbt-project",
    "title": "ALTER DBT PROJECT",
    "description": "",
    "syntax": "ALTER DBT PROJECT [ IF EXISTS ] <name> RENAME TO <new_name>\n\nALTER DBT PROJECT [ IF EXISTS ] ADD VERSION <version_name_alias>\n  FROM '<source_location>'\n\nALTER DBT PROJECT [ IF EXISTS ] <name> SET\n  [ DEFAULT_ARGS = '<string_literal>' ]\n  [ COMMENT = '<string_literal>' ]\n\nALTER DBT PROJECT [ IF EXISTS ] <name> UNSET\n  [ DEFAULT_ARGS ]\n  [ COMMENT ]",
    "example": "-- Update the Git repository object to fetch the latest code\n\nALTER GIT REPOSITORY sales_db.integrations_schema.sales_dbt_git_stage FETCH;\n\n-- Add a new version to the dbt project object based on the updated Git repository object\n\nALTER DBT PROJECT sales_db.dbt_projects_schema.sales_model\n  ADD VERSION\n  FROM '@sales_db.integrations_schema.sales_dbt_git_stage/branches/main/sales_dbt_project';\n\nALTER DBT PROJECT sales_db.dbt_projects_schema.sales_model\n  SET DEFAULT_ARGS = 'run --target prod';"
},
{
    "function_name": "ALTER DATASET … DROP VERSION",
    "summary": "Drops a dataset version.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-dataset-drop-version",
    "title": "ALTER DATASET … DROP VERSION",
    "description": "Drops a dataset version.",
    "syntax": "ALTER DATASET [ IF EXISTS ] <name> DROP VERSION <version_name>",
    "example": "ALTER DATASET my_dataset\nDROP VERSION 'v1';"
},
{
    "function_name": "ALTER APPLICATION PACKAGE",
    "summary": "Modifies the properties of an existing application package in the Native Apps Framework.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-application-package",
    "title": "ALTER APPLICATION PACKAGE",
    "description": "",
    "syntax": "ALTER APPLICATION PACKAGE [ IF EXISTS ] <name> SET\n  [ DATA_RETENTION_TIME_IN_DAYS = <integer> ]\n  [ MAX_DATA_EXTENSION_TIME_IN_DAYS = <integer> ]\n  [ DEFAULT_DDL_COLLATION = '<collation_specification>' ]\n  [ COMMENT = <string-literal> ]\n  [ DISTRIBUTION = { INTERNAL | EXTERNAL } ]\n  [ MULTIPLE_INSTANCES = TRUE ]\n  [ ENABLE_RELEASE_CHANNELS = TRUE ]\n  [ SET LISTING_AUTO_REFRESH = { TRUE | FALSE } ]\n\nALTER APPLICATION PACKAGE [ IF EXISTS ] <name> UNSET\n  [ DATA_RETENTION_TIME_IN_DAYS ]\n  [ MAX_DATA_EXTENSION_TIME_IN_DAYS ]\n  [ DEFAULT_DDL_COLLATION ]\n  [ COMMENT ]\n  [ DISTRIBUTION ]\n\nALTER APPLICATION PACKAGE <name> SET TAG <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' ... ]\n\nALTER APPLICATION PACKAGE <name> UNSET TAG <tag_name> [ , <tag_name> ... ]",
    "example": "ALTER APPLICATION PACKAGE hello_snowflake_package SET\n  COMMENT = 'Altered the Hello Snowflake app.';\n\n+-------------------------------------------+\n| status                                    |\n|-------------------------------------------|\n| Statement executed successfully.          |\n+-------------------------------------------+"
},
{
    "function_name": "ALTER APPLICATION DROP SPECIFICATION",
    "summary": "Drops an app specification from an app.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-application-drop-app-spec",
    "title": "ALTER APPLICATION DROP SPECIFICATION",
    "description": "",
    "syntax": "ALTER APPLICATION DROP SPECIFICATION <app_spec_name>;",
    "example": ""
},
{
    "function_name": "ALTER APPLICATION",
    "summary": "Modifies the properties of an installed",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-application",
    "title": "ALTER APPLICATION",
    "description": "",
    "syntax": "ALTER APPLICATION [ IF EXISTS ] <name> SET\n  [ COMMENT = '<string-literal>' ]\n  [ SHARE_EVENTS_WITH_PROVIDER = { TRUE | FALSE } ]\n  [ DEBUG_MODE = { TRUE | FALSE } ]\n\nALTER APPLICATION [ IF EXISTS ] <name> UNSET\n  [ COMMENT ]\n  [ SHARE_EVENTS_WITH_PROVIDER ]\n  [ DEBUG_MODE ]\n\nALTER APPLICATION [ IF EXISTS ] <name> RENAME TO <new_app_name>\n\nALTER APPLICATION <name> SET FEATURE POLICY <policy_name> [ FORCE ]\n\nALTER APPLICATION <name> UNSET FEATURE POLICY;\n\nALTER APPLICATION <name> SET TAG <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' ... ]\n\nALTER APPLICATION <name> UNSET TAG <tag_name> [ , <tag_name> ... ]\n\nALTER APPLICATION <name> SET SHARED TELEMETRY EVENTS ('<event_definition' [ , <event_definition>, ...])\n\nALTER APPLICATION <name> SET AUTHORIZE_TELEMETRY_EVENT_SHARING = { TRUE | FALSE }\n\nALTER APPLICATION <name> UNSET REFERENCES [ ( '<reference_name>' [ , '<reference_alias>' ] ) ]\n\nALTER APPLICATION <name> UPGRADE\n\nALTER APPLICATION <name> UPGRADE USING VERSION <version_name> [ PATCH <patch_num> ]\n\nALTER APPLICATION <name> UPGRADE USING <path_to_stage>",
    "example": ""
},
{
    "function_name": "ALTER API INTEGRATION",
    "summary": "Modifies the properties of an existing API integration.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-api-integration",
    "title": "ALTER API INTEGRATION",
    "description": "Modifies the properties of an existing API integration.",
    "syntax": "ALTER [ API ] INTEGRATION [ IF EXISTS ] <name> SET\n  [ API_AWS_ROLE_ARN = '<iam_role>' ]\n  [ AZURE_AD_APPLICATION_ID = '<azure_application_id>' ]\n  [ API_KEY = '<api_key>' ]\n  [ ENABLED = { TRUE | FALSE } ]\n  [ API_ALLOWED_PREFIXES = ('<...>') ]\n  [ API_BLOCKED_PREFIXES = ('<...>') ]\n  [ COMMENT = '<string_literal>' ]\n\nALTER [ API ] INTEGRATION <name> SET TAG <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' ... ]\n\nALTER [ API ] INTEGRATION <name> UNSET TAG <tag_name> [ , <tag_name> ... ]\n\nALTER [ API ] INTEGRATION [ IF EXISTS ] <name>  UNSET {\n                                                      API_KEY              |\n                                                      ENABLED              |\n                                                      API_BLOCKED_PREFIXES |\n                                                      COMMENT\n                                                      }\n                                                      [ , ... ]",
    "example": "ALTER API INTEGRATION myint SET ENABLED = TRUE;"
},
{
    "function_name": "ALTER ALERT",
    "summary": "Modifies the properties of an existing alert and suspends or resumes an existing alert.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-alert",
    "title": "ALTER ALERT",
    "description": "Modifies the properties of an existing alert and suspends or resumes an existing",
    "syntax": "ALTER ALERT [ IF EXISTS ] <name> { RESUME | SUSPEND };\n\nALTER ALERT [ IF EXISTS ] <name> SET\n  [ WAREHOUSE = <string> ]\n  [ SCHEDULE = '{ <number> MINUTE | USING CRON <expr> <time_zone> }' ]\n  [ COMMENT = '<string_literal>' ]\n\nALTER ALERT [ IF EXISTS ] <name> SET TAG <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' ... ]\n\nALTER ALERT [ IF EXISTS ] <name> UNSET\n  [ WAREHOUSE ]\n  [ COMMENT ]\n\nALTER ALERT <name> UNSET TAG <tag_name> [ , <tag_name> ... ]\n\nALTER ALERT [ IF EXISTS ] <name> MODIFY CONDITION EXISTS (<condition>)\n\nALTER ALERT [ IF EXISTS ] <name> MODIFY ACTION <action>",
    "example": ""
},
{
    "function_name": "ALTER AGGREGATION POLICY",
    "summary": "Replaces the existing rules or comment of an aggregation policy.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-aggregation-policy",
    "title": "ALTER AGGREGATION POLICY",
    "description": "",
    "syntax": "ALTER AGGREGATION POLICY [ IF EXISTS ] <name> RENAME TO <new_name>\n\nALTER AGGREGATION POLICY [ IF EXISTS ] <name> SET BODY -> <expression>\n\nALTER AGGREGATION POLICY <name> SET TAG <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' ... ]\n\nALTER AGGREGATION POLICY <name> UNSET TAG <tag_name> [ , <tag_name> ... ]\n\nALTER AGGREGATION POLICY [ IF EXISTS ] <name> SET COMMENT = '<string_literal>'\n\nALTER AGGREGATION POLICY [ IF EXISTS ] <name> UNSET COMMENT",
    "example": "ALTER AGGREGATION POLICY my_policy SET BODY -> AGGREGATION_CONSTRAINT(MIN_GROUP_SIZE=>2);\n\nALTER AGGREGATION POLICY my_policy RENAME TO agg_policy_table1;"
},
{
    "function_name": "ALTER ACCOUNT",
    "summary": "Modifies an account.",
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-account",
    "title": "ALTER ACCOUNT",
    "description": "Modifies an account. The ALTER ACCOUNT command has two purposes:",
    "syntax": "ALTER ACCOUNT SET { [ accountParams ] | [ objectParams ] | [ sessionParams ] }\n\nALTER ACCOUNT UNSET <param_name> [ , ... ]\n\nALTER ACCOUNT SET RESOURCE_MONITOR = <monitor_name>\n\nALTER ACCOUNT ADD ORGANIZATION USER GROUP <group_name>\nALTER ACCOUNT REMOVE ORGANIZATION USER GROUP <group_name>\n\nALTER ACCOUNT SET { AUTHENTICATION | PASSWORD | SESSION } POLICY <policy_name>\n\nALTER ACCOUNT UNSET { AUTHENTICATION | PASSWORD | SESSION } POLICY\n\nALTER ACCOUNT SET FEATURE POLICY <policy_name> FOR ALL APPLICATIONS [ FORCE ]\n\nALTER ACCOUNT UNSET FEATURE POLICY FOR ALL APPLICATIONS\n\nALTER ACCOUNT SET PACKAGES POLICY <policy_name> [ FORCE ]\n\nALTER ACCOUNT UNSET { PACKAGES | PASSWORD | SESSION } POLICY\n\nALTER ACCOUNT SET TAG <tag_name> = '<tag_value>' [ , <tag_name> = '<tag_value>' ... ]\n\nALTER ACCOUNT UNSET TAG <tag_name> [ , <tag_name> ... ]",
    "example": "ALTER ACCOUNT SET NETWORK_POLICY = mypolicy;\n\nALTER ACCOUNT SET DISABLE_USER_PRIVILEGE_GRANTS = TRUE;\n\nALTER ACCOUNT UNSET NETWORK_POLICY;\n\nALTER ACCOUNT SET PACKAGES POLICY packages_policy_prod_1 FORCE;\n\nALTER ACCOUNT UNSET PACKAGES POLICY;"
}
]